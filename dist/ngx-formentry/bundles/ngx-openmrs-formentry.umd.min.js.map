{"version":3,"sources":["ng://ngx-openmrs-formentry/form-entry/services/debug-mode.service.ts","ng://ngx-openmrs-formentry/form-entry/services/form-errors.service.ts","node_modules/tslib/tslib.es6.js","ng://ngx-openmrs-formentry/change-tracking/control-relation.ts","ng://ngx-openmrs-formentry/change-tracking/control-relations.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/hider-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-alerts/alert-helpers.ts","ng://ngx-openmrs-formentry/form-entry/control-hiders-disablers/disabler-helper.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-node.ts","ng://ngx-openmrs-formentry/form-entry/question-models/validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/js-expression-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/conditional-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/control-relations.factory.ts","ng://ngx-openmrs-formentry/form-entry/expression-runner/expression-runner.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-control.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-group.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-form-array.ts","ng://ngx-openmrs-formentry/abstract-controls-extension/afe-control-type.ts","ng://ngx-openmrs-formentry/form-entry/question-models/question-base.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/conditional-answered.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/required.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/min-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/max-date.validator.ts","ng://ngx-openmrs-formentry/form-entry/validators/future-date-restriction.validator.ts","ng://ngx-openmrs-formentry/form-entry/helpers/js-expression-helper.ts","ng://ngx-openmrs-formentry/form-entry/validators/validations.ts","ng://ngx-openmrs-formentry/form-entry/validators/js-expression.validator.ts","ng://ngx-openmrs-formentry/form-entry/utils/messages.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/validation.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/hiders-disablers.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/show-messages.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form-control.service.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.css.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/data-sources.ts","ng://ngx-openmrs-formentry/form-entry/form-renderer/form-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/error-renderer/error-renderer.component.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-field-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/directives/historical-value-directive.ts","ng://ngx-openmrs-formentry/components/select/select.component.style.ts","ng://ngx-openmrs-formentry/components/select/option.ts","ng://ngx-openmrs-formentry/components/select/diacritics.ts","ng://ngx-openmrs-formentry/components/select/option-list.ts","ng://ngx-openmrs-formentry/components/select/select.component.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.style.ts","ng://ngx-openmrs-formentry/components/select/select-dropdown.component.ts","ng://ngx-openmrs-formentry/components/select/select.module.ts","ng://ngx-openmrs-formentry/components/file-upload/secure.pipe.ts","ng://ngx-openmrs-formentry/shared.module.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.component.ts","ng://ngx-openmrs-formentry/components/file-upload/file-upload.module.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-picker/date-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/time-picker/time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/picker-modal/modal.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/pipes/moment.pipe.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/date-time-picker/date-time-picker.module.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.component.ts","ng://ngx-openmrs-formentry/components/ngx-date-time-picker/ngx-date-time-picker.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-option.ts","ng://ngx-openmrs-formentry/components/afe-ng-select.component.ts","ng://ngx-openmrs-formentry/form-entry/services/form-schema-compiler.service.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/text-area-input-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/ui-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/multi-select-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/interfaces/nested-questions.ts","ng://ngx-openmrs-formentry/form-entry/question-models/group-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/repeating-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/checkbox.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/file-upload-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/test-order-question.ts","ng://ngx-openmrs-formentry/form-entry/question-models/date-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/max-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/min-validation.model.ts","ng://ngx-openmrs-formentry/form-entry/data-sources/dummy-data-source.ts","ng://ngx-openmrs-formentry/form-entry/services/historical-encounter-data.service.ts","ng://ngx-openmrs-formentry/form-entry/helpers/historical-expression-helper-service.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/question.factory.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.ts","ng://ngx-openmrs-formentry/form-entry/form-factory/form.factory.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs-adapter-helper.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/obs.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/order.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/encounter.adapter.ts","ng://ngx-openmrs-formentry/form-entry/value-adapters/person-attribute.adapter.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.component.ts","ng://ngx-openmrs-formentry/components/remote-select/remote-select.module.ts","ng://ngx-openmrs-formentry/components/appointments-overview/appointments-overview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-view/encounter-viewer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-pdf-viewer.service.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-container/encounter-container.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/question-control.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/file-preview.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/display-controls/remote-answer.component.ts","ng://ngx-openmrs-formentry/encounter-viewer/encounter-viewer.module.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.component.ts","ng://ngx-openmrs-formentry/components/check-box/checkbox.module.ts","ng://ngx-openmrs-formentry/form-entry/form-entry.module.ts","ng://ngx-openmrs-formentry/form-entry/question-models/pair.model.ts","ng://ngx-openmrs-formentry/form-entry/question-models/rendering-type.ts"],"names":["DebugModeService","this","cookieKey","prototype","debugEnabled","Injectable","FormErrorsService","announceErrorFieldSource","Subject","announceErrorField$","asObservable","announceErrorField","error","next","control","tab","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","constructor","create","__values","o","m","Symbol","iterator","i","call","length","value","done","ControlRelation","relatedTo","_control","_relatedTo","_registerForChangesFromRelatedControl","defineProperty","_lastUpdateValue","updateControlBasedOnRelation","newValue","updateCalculatedValue","updateValueAndValidity","updateHiddenState","updateDisabledState","updateAlert","_this","valueChanges","subscribe","ControlRelations","relationFor","_otherRelations","_relationFor","_relations","addRelatedControls","AbstractControl","relations","push","HiderHelper","hideControl","hidden","disable","showControl","setHiderForControl","hider","hiders","clearHidersForControl","splice","evaluateControlHiders","hiddenValue","forEach","reEvaluateHidingExpression","toHide","setUpReEvaluationWhenValueChanges","val","AlertHelper","hideAlert","shown","showAlert","setAlertsForControl","alert","alerts","clearAlertsForControl","evaluateControlAlerts","messageValue","message","reEvaluateAlertExpression","alertMessage","DisablerHelper","setDisablerForControl","disabler","disablers","clearDisablersForControl","evaluateControlDisablers","toDisable","reEvaluateDisablingExpression","enable","NodeBase","question","form","parentPath","_questionModel","_form","_path","key","removeAt","index","createChildNode","removeChildNode","LeafNode","_super","parentControl","tslib_1.__extends","GroupNode","_children","setChild","node","children","ArrayNode","formFactory","childNodeCreatedEvents","createChildFunc","g","fireChildNodeCreatedListener","removeChildFunc","addChildNodeCreatedListener","func","ValidationModel","validations","type","JsExpressionValidationModel","failsWhenExpression","ConditionalValidationModel","referenceQuestionId","referenceQuestionAnswers","ControlRelationsFactory","buildRelations","rootNode","controlsStore","mapControlIds","nodeBase","setRelations","buildArrayNodeRelations","rootControlsStore","arrayControlStore","child","questionBase","id","createRelationsToArrayControls","rChild","parentNodePath","path","substring","lastIndexOf","indexOf","aChild","aChildId","this_1","hasRelation","nodes","searchNodeByPath","an","rootControl_1","controlRelations","otherRelations","addValueChangeListener","getRelationsForControl","nodeBaseArray","searchNodeByQuestionId","controlList","addRelationToControl","required","validators","element","hide","field","calculateExpression","related","moment","moment_","ExpressionRunner","getRunnable","expression","helper","dataDependencies","runner","runnable","run","scope","uuid","window","getControlRelationValueString","getHelperMethods","getDataDependencies","dataSourcesContainer","dataSources","paramList","argList","funcDeclarationCode","funcCallCode","keys","console","warn","eval","e","relation","relatedAsControl","isArray","arrayNode","uuid_1","controlRelationsFactory_1","relationsForControl_1","concat","setControlArrayValues","relationsForControl","_getFormControlKeys","values","_getValuesForKey","array","obj","AfeFormControl","formState","validator","asyncValidator","hiderHelper","disablerHelper","_controlRelations","_previousValue","fireValueChangeListener","param","setValue","show","setHidingFn","newHider","setCalculatorFn","newCalculator","calculator","_val","clearHidingFns","setDisablingFn","newDisabler","clearDisablingFns","setAlertFn","clearMessageFns","_valueChangeListener","FormControl","AfeFormGroup","controls","FormGroup","AfeFormArray","_uuid","FormArray","None","QuestionBase","options","defaultValue","originalValue","extras","renderingType","label","historicalDataValue","setHistoricalValue","v","enableHistoricalValue","showHistoricalEncounterDate","showHistoricalValueDate","undefined","ConditionalRequiredValidator","validate","model","isRequired","relationValue","conditional_required","ConditionalAnsweredValidator","successCondition","conditional_answered","RequiredValidator","DateValidator","test","Date","toString","date","MinValidator","min","requiredValue","actualValue","MaxValidator","max","MinDateValidator","mindate","requiredDate","newDate","getTime","actualDate","MaxDateValidator","maxdate","FutureDateRestrictionValidator","now","futureDateRestriction","JsExpressionHelper","calcBMI","height","weight","r","toFixed","parseFloat","calcBMIForAgeZscore","bmiForAgeRef","bmi","formattedSDValue","refSectionObject","_.first","refObjectValues","map","x","refObjectKeys","minimumValue","minReferencePoint_1","_.forEach","lastReferenceValue_1","_.last","_.findIndex","replace","includes","calcWeightForHeightZscore","weightForHeightRef","refSection","_.filter","refObject","minReferencePoint_2","lastReferenceValue_2","calcHeightForAgeZscore","heightForAgeRef","minReferencePoint_3","lastReferenceValue_3","isEmpty","arrayContains","members","contains","extractRepeatingGroupValues","item","formatDate","format","offset","Error","arrayContainsAny","Validations","JSExpressionValidatorsEnabled","JsExpressionValidator","helperFunctions","js_expression","Messages","REQUIRED_FIELD_MSG","INVALID_DATE_MSG","FUTURE_DATE_RESTRICTION_MSG","MIN_LENGTH_MSG","MAX_LENGTH_MSG","MAX_DATE_MSG","MIN_DATE_MSG","MAX_MSG","MIN_MSG","ValidationFactory","getValidators","list","dateValidator","allowFutureDates","futureDateRestrictionValidator","jsExpressionValidator","getMaxValueValidator","getMinValueValidator","conditionalRequiredValidator","conditionalAnsweredValidator","requiredValidator","Validators","minLength","maxLength","errors","messages","property","minlength","requiredLength","maxlength","HidersDisablersFactory","expressionRunner","expressionHelper","_debugModeService","getJsExpressionDisabler","disableWhenExpression","result","getJsExpressionHider","convertHideObjectToString","hideWhenExpression","join","AlertsFactory","getJsExpressionshowAlert","alertWhenExpression","FormControlService","validationFactory","hidersDisablersFactory","alertsFactory","generateControlModel","questionModel","generateChildren","controlType","AfeControlType","generateFormArray","generateFormGroupModel","generateFormControl","formGroup","wireHidersDisablers","wireAlerts","setControl","asGroup","questions","_generateFormGroupChildrenModel","generated","addControl","formArray","wireCalculator","alert_1","dataSource","DEFAULT_STYLES","DataSources","_dataSources","registerDataSource","unWrap","log","clearDataSource","FormRendererComponent","formErrorsService","document","childComponents","isCollapsed","activeTab","ngOnInit","setUpRemoteSelect","setUpFileUpload","valueProcessingInfo","lastFormTab","scrollToControl","isExpanded","parentComponent","addChildComponent","dataSourceOptions","clickTab","tabNumber","loadPreviousTab","isCurrentTabFirst","body","scrollTop","isCurrentTabLast","loadNextTab","tabSelected","$event","setPreviousTab","hasErrors","touched","valid","getErrors","split","elSelector","tabComponent","setTimeout","section","getElementById","focus","scrollIntoView","behavior","block","onDateChanged","upload","event","toggleInformation","infoId","style","display","Component","args","selector","template","Inject","DOCUMENT","Input","ErrorRendererComponent","showErrors","markInvalidControls","getControlError","errorNode","pageIndex","getPageIndex","HistoricalFieldHelperService","getDisplayTextFromOptions","valueProperty","displayProperty","displayText","historicalValue","_.isArray","valueConverted_1","_.each","option","HistoricalValueDirective","historicalFieldHelper","_nodeChange","EventEmitter","target","name","_node","compareString","stopPropagation","emit","a","_.isUndefined","text","_date","valueDate","Directive","Output","HostListener","STYLE","Option","disabled","highlighted","selected","undecoratedCopy","Diacritics","strip","DIACRITICS","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","OptionList","_highlightedOption","_options","highlight","equalValues","v0","v1","slice","sort","every","getOptionsByValue","filter","selection","selectedOption","select","multiple","clearSelection","deselect","term","trim","resetFilter","l","toUpperCase","t","hasShownSelected","getFirstShownSelected","getFirstShown","highlightOption","clearHighlightedOption","highlightNextOption","shownOptions","filtered","getHighlightedIndexFromList","highlightPreviousOption","highlightedOption","getHighlightedIndex","hasShown","some","hasSelected","_b","tslib_1.__values","_c","SELECT_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","SelectComponent","multi","KEYS","BACKSPACE","TAB","ENTER","ESC","SPACE","UP","DOWN","allowClear","highlightColor","highlightTextColor","noFilter","notFoundMsg","placeholder","opened","closed","deselected","typed","_value","filterEnabled","filterInputWidth","hasFocus","isBelow","isDisabled","isOpen","placeholderView","clearClicked","selectContainerClicked","onChange","_","onTouched","ngAfterViewInit","updateFilterWidth","ngOnChanges","changes","updateOptionsList","isFirstChange","numOptions","optionList","minNumOptions","currentValue","onWindowClick","closeDropdown","onWindowResize","updateWidth","onSelectContainerClick","toggleDropdown","onSelectContainerFocus","onSelectContainerKeydown","handleSelectContainerKeydown","onDropdownOptionClicked","toggleSelectOption","selectOption","onDropdownClose","onSingleFilterClick","onSingleFilterInput","onSingleFilterKeydown","handleSingleFilterKeydown","onMultipleFilterInput","openDropdown","onMultipleFilterKeydown","handleMultipleFilterKeydown","onClearSelectionClick","onDeselectOptionClick","deselectOption","open","close","clear","valueChanged","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","TypeError","firstTime","updatePosition","filterInput","nativeElement","clearFilterInput","dropdown","moveHighlightedIntoView","selectHighlightedOption","deselectLast","sel","setMultipleFilterInput","which","altKey","preventDefault","selectionSpan","blur","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetHeight","providers","encapsulation","ViewEncapsulation","ViewChild","SelectDropdownComponent","optionClicked","singleFilterClick","singleFilterInput","singleFilterKeydown","disabledColor","disabledTextColor","optionsReset","onOptionsWheel","handleOptionsWheel","onOptionMouseover","onOptionClick","getOptionStyle","background-color","color","optionsList","listHeight","itemIndex","itemHeight","itemTop","itemBottom","viewTop","div","atTop","atBottom","scrollHeight","deltaY","SelectModule","NgModule","declarations","exports","imports","CommonModule","FormsModule","SecurePipe","_ref","sanitizer","_latestValue","_latestReturnedValue","_subscription","_obj","_result","BehaviorSubject","_internalSubscription","ngOnDestroy","_dispose","transform","url","getfile","internalTransform","asyncTrasnform","_this_1","previousUrl","sanitized","bypassSecurityTrustUrl","WrappedValue","wrap","_subscribe","_updateLatestValue","unsubscribe","async","markForCheck","Pipe","pure","ChangeDetectorRef","DomSanitizer","SharedModule","RemoteFileUploadComponent","renderer","uploading","innerValue","propagateChange","_dataSource","data","fileUpload","image","clearValue","Renderer2","RemoteFileUploadModule","NgxFileUploaderModule","DatePickerComponent","locale","viewFormat","returnObject","onDatePickerCancel","onSelectDate","onDisplayMonths","onDisplayYears","displayYearsIndex","monthsShort","initValue","fullYearRange","currentYear","calendarDate","clone","startOf","year","displayYearRange","generateCalendar","prev","subtract","showMonthSelection","showYearSelection","add","selectDay","day","daysDifference","diff","selectedDay","parseToReturnObjectType","cancelDatePicker","selectMonth","month","selectYear","selectToday","today","clearPickDate","generateYears","years","_.chunk","currentMonth","dayNames","weekdaysShort","initDate","selectedDate","calendarDays","start","localeData","firstDayOfWeek","end","toDate","toJSON","toArray","toISOString","toObject","TimePickerComponent","showSecond","use12Hour","onSelectTime","onTimePickerCancel","hourFormat","time","initTime","increaseHour","decreaseHour","increaseMinute","decreaseMinute","increaseSecond","decreaseSecond","selectTime","cancelTimePicker","selectNow","clearTime","ModalComponent","onOverlayClick","closeModal","changeDetection","ChangeDetectionStrategy","OnPush","animations","MomentPipe","Moment","DateTimePickerComponent","showDate","showTime","showWeeks","weeks","onDateChange","showDatePicker","showTimePicker","weeksSelected","count","nextDate","setDate","getDate","setTime","toggleDatePicker","status","toggleTimePicker","modelValue","DateTimePickerModule","MY_FORMATS","parse","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NgxDateTimePickerComponent","selectedTime","loadInitial","onTimeSelect","setDateTime","onDateSelect","dateString","setCurrentTime","currentTime","weekSelect","dateToUse","nextWeekDate","nextWeekTime","selectionChange","getWeekPickerCssClass","getDatePickerCssClass","getTimePickerCssClass","newTime","newDateTime","dateTimeString","MAT_DATE_FORMATS","useValue","DateAdapter","useClass","MomentDateAdapter","NgxDateTimePickerModule","ReactiveFormsModule","MatDatepickerModule","MatFormFieldModule","MatNativeDateModule","MatInputModule","MatSelectModule","Option$1","AfeNgSelectComponent","question_options","getChangingText","getData","resolveSelectedOption","selected_question_option","searchText","subject","searchOptions","mappedOptions","onValueChange","subjectOption","resolveSelectedValue","resetOptions","FormSchemaCompiler","compileFormSchema","formSchema","referencedComponents","refForms","getReferencedForms","_.isEmpty","placeHolders","getAllPlaceholderObjects","replaceAllPlaceholdersWithActualObjects","findSchemaByName","schemaArray","nameOfSchema","foundSchema","schema","getPageInSchemaByLabel","pageLabel","foundPage","pages","page","getSectionInSchemaByPageLabelBySectionLabel","sectionLabel","foundSection","sections","getQuestionByIdInSchema","questionId","isQuestionObjectWithId","isSchemaSubObjectExpandable","toExpand","getQuestionsArrayByQuestionIdInSchema","getQuestionsArrayByQuestionId","parent","object","returnedValue","objectKeys","_.includes","referencedObjects","extractPlaceholderObjects","subSchema","objectsArray","reference","fillPlaceholderObject","placeHolderObject","referenceObject","member","keyValReferencedForms","placeHoldersArray","placeHolder","referencedObject","getReferencedObject","removeExcludedQuestionsFromPlaceholder","removeObjectFromArray","indexOfObject","excludeQuestions","excludedQuestionId","questionsArray","referenceData","formSchemasLookupArray","referencedForms","alias","formName","TextInputQuestion","TextAreaInputQuestion","rows","SelectQuestion","UiSelectQuestion","DateQuestion","showWeeksAdder","MultiSelectQuestion","NestedQuestion","QuestionGroup","RepeatingQuestion","CheckBoxQuestion","FileUploadQuestion","TestOrderQuestion","orderType","selectableOrders","orderSettingUuid","rendering","DateValidationModel","MaxValidationModel","MinValidationModel","DummyDataSource","returnErrorOnNext","selectOptions","sampleData","concept","of","fetchFile","HistoricalEncounterDataService","registerEncounters","encounters","encStore","getValue","pathArray","getFirstValue","getAllObjects","getSingleObject","group_1","encounter","_transformEncounter","_.sortBy","reverse","putObject","getObject","answers","getAllValues","encounterDatetime","_.isNil","newpath","childObject","prevEncounter","location","patient","encounterType","provider","obs","processedObs","_transformObs","_.extend","obsRep","singleObs","_augumentObs","groupMembers","group_2","existing","toAdd","_.has","temp","apply","HistoricalHelperService","evaluate","expr","HD","deps","QuestionFactory","historicalHelperService","createQuestionModel","toFormQuestionModel","toSelectQuestion","schemaQuestion","questionOptions","addValidators","copyProperties","addDisableOrHideProperty","addAlertProperty","addHistoricalExpressions","addCalculatorProperty","toNumericQuestion","toNumberQuestion","toDateQuestion","toEncounterDatetimeQuestion","weeksList","toCheckBoxQuestion","toMultiCheckboxQuestion","renderType","toTextAreaQuestion","toTextQuestion","toFileUploadQuestion","toDrugQuestion","toProblemQuestion","toConceptAnswerSelect","toRepeatingQuestion","getChildrenQuestionModels","testOrder","toTestOrderQuestion","orders","toGroupQuestion","toPageQuestion","toSectionQuestion","getSchemaQuestions","toPersonAttributeQuestion","searchFunction","resolveFunction","toEncounterProviderQuestion","toFieldSetQuestion","toReturn","toEncounterLocationQuestion","listQuestions","getQuestions","foundArray","toModel","generateId","convertOldVersionComplexObsQuestionToNewVersion","converted","mainField","JSON","stringify","shownDateOptions","obsField","dateField","dateOptions","assign","mappings","source","destination","historicalExpression","origValue","historicalPrepopulate","calculate","s","Math","random","floor","String","fromCharCode","Form","questionFactory","existingOrders","_showErrors","_dataSourcesContainer","found","aChildNode","questionType","searchNodeByQuestionType","findNodesByQuestionId","nodeAsGroup","results","invalidControlNodes","c","markAsTouched","groupNode","updateHiddenDisabledStateForAllControls","_updateHiddenDisabledStateForAllControls","updateAlertsForAllControls","_updateAlertsForAllControls","FormFactory","controlService","questionFactroy","controlRelationsFactory","hd","createForm","createNode","parentNode","createArrayNode","createGroupNode","createLeafNode","controlModel","createNodeChildren","createArrayNodeChild","removeArrayNodeChild","factory","groupQuestion","group","nodeControl","nodeToRemove","controlIndexToRemove","ObsAdapterHelper","findObsAnswerToQuestion","obsArray","isObsNode","childQuestionsUuids","getChildQuestionsConceptUuids","isSubsetOf","getGroupMembersConceptUuids","obsWithGroupMembers","supersetArray","subsetArray","setSimpleObsNodeValue","obsToUse","initialValue","setNodeFormControlValue","setMultiselectObsNodeValue","obsUuids","obs_1","obs_1_1","setComplexObsNodeValue","valueField","setNodeValue","obsDatetime","setGroupObsNodeValue","setRepeatingGroupObsNodeValue","createdNode","getObsNodeType","answeringObs","multiselectObs","complexObs","groupObs","repeatingGroupObs","getSimpleObsPayload","voided","simpleNodeValueChanged","toOpenMrsDateTimeString","getComplexObsPayload","valuePayload","getObsNodePayload","areDatesEqual","payload","getMultiselectObsPayload","existingUuids","getGroupPayload","childrenPayload","groupPayload","getRepeatingGroupPayload","nodeAsArray","groupsUuidsAfterEditting","voidedGroup","groupNodePayoad","arrayNodePayload","simpleObs","groupedObs","repeatingGroupedObs","date1","date2","isSame","datetime","ObsValueAdapter","generateFormPayload","populateForm","setValues","forcegroup","setObsValue","_.find","setComplexObsValue","setRepeatingGroupValues","nodes_1","nodes_1_1","obsUuid","multiObs","getMultiselectValues","multiObs_1","multiObs_1_1","groupRepeatingObs","intersect","schemaQuestions","_.intersection","groups","getQuestionNodes","arrays","pages_1","pages_1_1","_d","repeatingGroup","nodes_2","nodes_2_1","traverse","processGroup","obsPayload","getObsPayload","mappedMembers","Boolean","mapInitialGroup","current","mapModelGroup","processRepeatingGroups","initialValues","_e","_f","repeatingModel","_g","_h","deleted","leftOuterJoinArrays","newObs","groupConcept","newObsPayload","deletedObs","createGroupDeletedObs","deletedObs_1","deletedObs_1_1","createGroupNewObs","newObsPayload_1","newObsPayload_1_1","first","second","obj2","_.isEqual","newPayload","payload_1","payload_1_1","payload_2","payload_2_1","getExactTime","processObs","obsValue","multis","processMultiSelect","mappedInitial","mappedCurrent","processDeletedMultiSelectObs","processNewMultiSelectObs","updateOrVoidObs","processComplexObs","createdPayload","values_1","values_1_1","values_2","values_2_1","qs","rep","multiSelectObs","values_3","values_3_1","isObs","nodes_3","nodes_3_1","OrderValueAdapter","formOrderNodes","_setOrderProvider","_findTestOrderQuestionNodes","_createOrdersPayload","_getExistingOrders","_setOrderValues","providerUuid","orderNodes","deletedOrders","selectedOrders","orderNode","orderNodeValues","order","orderValue","payloadOrder","_createPayloadOrder","orderNumber","orderNodes_1","orderNodes_1_1","_getDeletedOrders","_addDeletedOrdersToPayload","orderUuid","dateVoided","auditInfo","orderNodes_2","orderNodes_2_1","_setOrderNodeValues","orderConcept","quesitonExtras","orderer","careSetting","deleteOrders","existingOrderConcept","orders_1","orders_1_1","childNode","formNode","EncounterAdapter","ordersAdapter","obsAdapter","populateNode","getEncounterNodes","firstProvider","generateNodePayload","setNonFilledPayloadMembers","dateValue","utcOffset","encounterRole","_getEncounterNodes","patientUuid","setPayloadPatientUuid","visitUuid","setPayloadVisitUuid","encounterTypeUuid","setPayloadEncounterTypeUuid","formUuid","setPayloadFormUuid","encounterUuid","setPayloadEncounterUuid","_isEncounterNode","PersonAttribuAdapter","getPersonAttributeNodes","isSimpleValue","attributeType","hydratedObject","_getPersonAttributesNodes","RemoteSelectComponent","items","loading","characters","change","dataFromSourceChanged","subscribeToDataSourceDataChanges","restoreSelectedValue","selectC","search","_.map","_.clone","_.uniqBy","canSearch","removed","RemoteSelectModule","AppointmentsOverviewComponent","showAppointments","loadingAppointments","errorLoadingAppointments","appointmentsLoaded","appointments","resetProperties","monthlyScheduleResourceService","locationUuid","userLocation","startDate","endDate","endOf","_data_1","programTypeParams","getMonthlySchedule","limit","locationUuids","programType","appointment","scheduled","EncounterViewerService","resolveSelectedValueFromSchema","answerUuid","answer","hasAnswer","answered","questionsAnswered","$answered","ans","isDate","convertTime","unixTimestamp","getFullYear","getMonth","hour","getHours","getMinutes","getSeconds","EncounterViewerComponent","encounterViewerService","_schema","enc","fileDataSource","remoteDataSource","customDataSource","questionAnswered","checkForColon","questionLabel","EncounterPdfViewerService","obsValueAdapter","getPages","content","table","widths","headerRows","keepWithHeaderRows","getSections","layout","margin","sections_1","sections_1_1","getSectionData","stack","resolveValue","bold","arrayElement","isUuid","arr_1","elem","generatePdfDefinition","styles","confidential","alignment","header","fontSize","tableExample","tableHeader","fillColor","borderColor","tableSubheader","defaultStyle","displayPdf","pdf","pdfMake","vfs","pdfFonts.pdfMake","docDefinition","footer","columns","win","createPdf","ISO_8601","isValid","providedIn","EncounterContainerComponent","encAdapter","encounterPdfViewerService","$form","$enc","QuestionControlComponent","el","str","_.isNumber","noop","FilePreviewComponent","encounterService","onTouchedCallback","onChangeCallback","onBlur","RemoteAnswerComponent","EncounterViewerModule","HttpModule","CheckboxControlComponent","selectOpt","checked","CheckboxModule","FormEntryModule","CollapseModule","MatIconModule","MatTabsModule","MatCardModule","FormBuilder","Pair","Page","Section","Select","DropDown"],"mappings":"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C,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,KACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,KACVC,IAAU,IACVC,IAAU,IACVC,IAAU,IACVC,IAAU,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","sourcesContent":["/*\nThis service checks if the debug mode on ng2-amrs\nhas been enabled by checking cookies.\nIf the debug mode has been enabled then\nit returns true and all fields are displayed\nfor use by testers\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\n\nexport class DebugModeService {\n\n    public cookieKey = 'formDebug';\n\n    constructor() {\n    }\n   public debugEnabled(): boolean {\n\n             // check if the hidefield\n            return false;\n     }\n}\n","import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { AfeFormControl } from '../../public_api';\nimport { AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\n\n@Injectable()\nexport class FormErrorsService {\n\n  // Observable string sources\n  public static control: AfeFormControl | AfeFormArray | AfeFormGroup  = null;\n  public static tab: number = null;\n  public announceErrorFieldSource = new Subject<string>();\n  public announceErrorField$: Observable<any> = this.announceErrorFieldSource.asObservable();\n  public announceErrorField(error: string) {\n    this.announceErrorFieldSource.next(error);\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { AbstractControl } from '@angular/forms';\n\n// import { CanHide } from '../form-entry/control-hiders-disablers/can-hide';\n// import { CanDisable } from '../form-entry/control-hiders-disablers/can-disable';\n\nexport class ControlRelation {\n    private _control: AbstractControl;\n    private _relatedTo: AbstractControl;\n    private _lastUpdateValue: any;\n\n    constructor(control: AbstractControl, relatedTo: AbstractControl) {\n        this._control = control;\n        this._relatedTo = relatedTo;\n        this._registerForChangesFromRelatedControl();\n    }\n\n    get control(): AbstractControl {\n        return this._control;\n    }\n\n    get relatedTo(): AbstractControl {\n        return this._relatedTo;\n    }\n\n    get lastUpdateValue(): any {\n        return this._lastUpdateValue;\n    }\n\n    updateControlBasedOnRelation(newValue: any): boolean {\n        if (newValue !== this._lastUpdateValue) {\n            this._lastUpdateValue = newValue;\n\n            if ((this._control as any).updateCalculatedValue) {\n              (this._control as any).updateCalculatedValue();\n            }\n\n            this._control.updateValueAndValidity();\n            if ((this._control as any).updateHiddenState) {\n                (this._control as any).updateHiddenState();\n            }\n\n            if ((this._control as any).updateDisabledState) {\n                (this._control as any).updateDisabledState();\n            }\n\n            if ((this._control as any).updateAlert) {\n                (this._control as any).updateAlert();\n            }\n            return true;\n        }\n        return false;\n    }\n\n    private _registerForChangesFromRelatedControl() {\n\n      this._relatedTo.valueChanges.subscribe((value) => {\n        this.updateControlBasedOnRelation(value);\n      });\n    }\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { ControlRelation } from './control-relation';\n\nexport class ControlRelations {\n\n    private _relationFor: AbstractControl;\n    private _relations: ControlRelation[];\n    private _otherRelations: any = [];\n\n    constructor(relationFor: AbstractControl, relatedTo?: AbstractControl | AbstractControl[]) {\n        this._relationFor = relationFor;\n        this._relations = [];\n\n        if (relatedTo) {\n            this.addRelatedControls(relatedTo);\n        }\n    }\n\n    get relationsFor(): AbstractControl {\n        return this._relationFor;\n    }\n\n    get relations(): ControlRelation[] {\n        return this._relations;\n    }\n\n    get otherRelations() {\n      return this._otherRelations;\n    }\n\n    addRelatedControls(relatedTo: AbstractControl | AbstractControl[]) {\n        if (relatedTo instanceof AbstractControl) {\n            this.relations.push(new ControlRelation(this._relationFor, relatedTo));\n        }\n\n        if (relatedTo instanceof Array) {\n            for (let i = 0; i < relatedTo.length; i++) {\n                this.relations.push(new ControlRelation(this._relationFor, relatedTo[i]));\n            }\n        }\n    }\n}\n","import { CanHide, Hider } from './can-hide';\nexport class HiderHelper {\n\n    public hideControl(control: CanHide) {\n        control.hidden = true;\n        if (control.disable) {\n            control.disable();\n        }\n    }\n\n    public showControl(control: CanHide) {\n        control.hidden = false;\n    }\n\n    public setHiderForControl(control: CanHide, hider: Hider) {\n        control.hiders.push(hider);\n    }\n\n    public clearHidersForControl(control: CanHide) {\n        control.hiders.splice(0);\n        control.hidden = false;\n    }\n\n    public evaluateControlHiders(control: CanHide) {\n\n        let hiddenValue = false;\n        control.hiders.forEach(hider => {\n            hider.reEvaluateHidingExpression();\n            if (hider.toHide === true) {\n                hiddenValue = true;\n            }\n        });\n\n        control.hidden = hiddenValue;\n        if (control.hidden && control.disable) {\n            control.disable();\n            // control.setValue(null);\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanHide) {\n        if (control.updateHiddenState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateHiddenState();\n            });\n        }\n    }\n\n}\n","import { CanGenerateAlert, Alert } from './can-generate-alert';\nexport class AlertHelper {\n\n    public hideAlert(control: Alert) {\n        control.shown = false;\n    }\n\n    public showAlert(control: Alert) {\n        control.shown = true;\n    }\n\n    public setAlertsForControl(control: CanGenerateAlert, alert: Alert) {\n        control.alerts.push(alert);\n    }\n\n    public clearAlertsForControl(control: CanGenerateAlert) {\n        control.alerts.splice(0);\n        control.alert = '';\n    }\n\n    public evaluateControlAlerts(control: CanGenerateAlert) {\n        let messageValue = '';\n        control.alerts.forEach(message => {\n            message.reEvaluateAlertExpression();\n            if (message.shown === true) {\n                messageValue = message.alertMessage;\n            } else {\n                messageValue = '';\n            }\n        });\n\n        control.alert = messageValue;\n        // if (control.message && control.disable) {\n        //     control.disable();\n        //     // control.setValue(null);\n        // }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanGenerateAlert) {\n        if (control.updateAlert) {\n            control.valueChanges.subscribe((val) => {\n                control.updateAlert();\n            });\n        }\n    }\n\n}\n","import { CanDisable, Disabler } from './can-disable';\nexport class DisablerHelper {\n\n    public setDisablerForControl(control: CanDisable, disabler: Disabler) {\n        control.disablers.push(disabler);\n    }\n\n    public clearDisablersForControl(control: CanDisable) {\n        control.disablers.splice(0);\n        control.disable();\n    }\n\n    public evaluateControlDisablers(control: CanDisable) {\n        let toDisable = false;\n        control.disablers.forEach(hider => {\n            hider.reEvaluateDisablingExpression();\n            if (hider.toDisable === true) {\n                toDisable = true;\n            }\n        });\n\n        // console.log('Control', control);\n\n        if (toDisable) {\n            control.disable();\n        } else {\n            control.enable();\n        }\n    }\n\n    public setUpReEvaluationWhenValueChanges(control: CanDisable) {\n        if (control.updateDisabledState) {\n            control.valueChanges.subscribe((val) => {\n                control.updateDisabledState();\n            });\n        }\n    }\n\n}\n","import { AbstractControl } from '@angular/forms';\n\nimport { FormFactory } from './form.factory';\nimport { Form } from './form';\n\n// import { AfeControlType, AfeFormArray, AfeFormGroup, AfeFormControl } from '../../abstract-controls-extension';\nimport { QuestionBase, RepeatingQuestion } from '../question-models/models';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nexport interface ChildNodeCreatedListener {\n\n    addChildNodeCreatedListener(func: any);\n\n    fireChildNodeCreatedListener(node: GroupNode);\n}\n\nexport type CreateArrayChildNodeFunction = (question: RepeatingQuestion, node: ArrayNode, factory?: FormFactory) => GroupNode;\n\nexport interface RemoveArrayChildNodeFunction {\n    (index: number, node: ArrayNode);\n}\n\nexport class NodeBase {\n    public children?: any;\n    private _control: AfeFormControl | AfeFormArray | AfeFormGroup;\n    private _questionModel: QuestionBase;\n    private _form: Form;\n    private _path: string;\n\n    public initialValue: any;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        this._control = control;\n        this._questionModel = question;\n        this._form = form;\n        this._path = parentPath ? parentPath + '.' + question.key : question.key;\n    }\n\n    public get question(): QuestionBase {\n        return this._questionModel;\n    }\n\n    public get control(): AfeFormControl | AfeFormArray | AfeFormGroup {\n        return this._control;\n    }\n\n    public get form(): Form {\n        return this._form;\n    }\n\n    public get path(): string {\n        return this._path;\n    }\n    removeAt(index: number) {}\n\n    createChildNode() {}\n    removeChildNode() {}\n\n}\n\nexport class LeafNode extends NodeBase {\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n         parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n    }\n}\n\nexport class GroupNode extends NodeBase {\n    private _children: any;\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = {};\n    }\n\n    public get children(): any {\n        return this._children;\n    }\n\n    public setChild(key: string, node: NodeBase) {\n        this.children[key] = node;\n    }\n\n}\n\nexport class ArrayNode extends NodeBase implements ChildNodeCreatedListener {\n\n    private childNodeCreatedEvents: any[] = [];\n    private _children: GroupNode[];\n    public createChildFunc: CreateArrayChildNodeFunction;\n    public removeChildFunc: RemoveArrayChildNodeFunction;\n\n    constructor(question: QuestionBase, control?: AfeFormControl | AfeFormArray | AfeFormGroup,\n        parentControl?: AfeFormControl | AfeFormArray | AfeFormGroup, private formFactory?: FormFactory,\n        form?: Form, parentPath?: string) {\n        super(question, control, form, parentPath);\n        this._children = [];\n        this.childNodeCreatedEvents = [];\n    }\n\n    public get children(): GroupNode[] {\n        return this._children;\n    }\n\n    public createChildNode(): GroupNode {\n        if (this.createChildFunc) {\n            const g: GroupNode = this.createChildFunc(this.question as RepeatingQuestion, this, this.formFactory);\n            this.fireChildNodeCreatedListener(g);\n            return g;\n        }\n        return null;\n    }\n\n    public removeAt(index: number) {\n        if (this.removeChildFunc) {\n            this.removeChildFunc(index, this);\n        }\n    }\n\n    addChildNodeCreatedListener(func: any) {\n        this.childNodeCreatedEvents.push(func);\n    }\n\n    fireChildNodeCreatedListener(node: GroupNode) {\n        for (let i = 0; i < this.childNodeCreatedEvents.length; i++) {\n\n            const func: any = this.childNodeCreatedEvents[i];\n            func(node);\n        }\n    }\n}\n\n\n","\nexport class ValidationModel {\n\n  type: string;\n\n  message: string;\n\n  constructor(validations: any) {\n\n    this.type = validations.type;\n    this.message = validations.message || null;\n  }\n}\n","\nimport { ValidationModel } from './validation.model';\n\nexport class JsExpressionValidationModel extends ValidationModel {\n\n  failsWhenExpression: string;\n\n  constructor(validations: any) {\n    super(validations);\n    this.failsWhenExpression = validations.failsWhenExpression;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class ConditionalValidationModel extends ValidationModel {\n\n  referenceQuestionId: string;\n  referenceQuestionAnswers: any;\n\n  constructor(validations: any) {\n    super(validations);\n    this.referenceQuestionId = validations.referenceQuestionId;\n    this.referenceQuestionAnswers = validations.referenceQuestionAnswers;\n  }\n}\n","import { Injectable } from '@angular/core';\n\n// import { ControlRelation } from  '../../change-tracking/control-relation';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\nimport { Form } from './form';\n\n@Injectable()\nexport class ControlRelationsFactory {\n\n  constructor() { }\n\n  buildRelations(rootNode: GroupNode) {\n\n    const controlsStore: any = this.mapControlIds(rootNode, {});\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key)) {\n        const nodeBase: NodeBase = controlsStore[key];\n\n        this.setRelations(controlsStore, nodeBase);\n      }\n    }\n  }\n\n  buildArrayNodeRelations(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    if (!form) {\n      return;\n    }\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for controls in the same array\n    this.buildRelations(node);\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    for (const key in rootControlsStore) {\n\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const child: NodeBase = rootControlsStore[key];\n\n        if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            this.setRelations(arrayControlStore, child);\n          }\n        }\n      }\n    }\n\n    // define relations for controls outside the group to controls in this group\n    this.createRelationsToArrayControls(node);\n\n    // fire relations\n    for (const id in arrayControlStore) {\n      if (arrayControlStore.hasOwnProperty(id)) {\n\n        const child: NodeBase = arrayControlStore[id];\n        const control: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n        control.updateHiddenState();\n        control.updateAlert();\n      }\n    }\n  }\n\n  createRelationsToArrayControls(node: GroupNode) {\n\n    const form: Form = node.form;\n\n    const rootNode: GroupNode = form.rootNode;\n\n    // build relations for control outside the array\n    const rootControlsStore: any = this.mapControlIds(rootNode, {});\n    const arrayControlStore: any = this.mapControlIds(node, {});\n\n    // loop through form controls\n    for (const key in rootControlsStore) {\n      if (rootControlsStore.hasOwnProperty(key)) {\n\n        const rChild: NodeBase = rootControlsStore[key];\n\n        const parentNodePath = node.path.substring(0, node.path.lastIndexOf('.'));\n\n        if (rChild.path.indexOf(parentNodePath + '.') === -1) {\n\n          // loop through controls in the array group\n          for (const id in arrayControlStore) {\n            if (arrayControlStore.hasOwnProperty(id)) {\n\n              const aChild: NodeBase = arrayControlStore[id];\n              const aChildId = aChild.question.key;\n              if (this.hasRelation(aChildId, rChild.question)) {\n\n                const nodes: Array<NodeBase> = node.form.searchNodeByPath(rootNode, parentNodePath, []);\n                if (nodes.length > 0) {\n                  const an = nodes[0] as ArrayNode;\n                  const rootControl = (rChild.control as AfeFormControl | AfeFormArray);\n\n                  if (rootControl.controlRelations.otherRelations.indexOf(an) === -1) {\n                    rootControl.controlRelations.otherRelations.push(an);\n                  }\n\n                  (aChild.control as AfeFormControl | AfeFormArray).addValueChangeListener((value) => {\n\n                    if ((rootControl as any).updateCalculatedValue) {\n                      (rootControl as any).updateCalculatedValue();\n                    }\n\n                    rootControl.updateValueAndValidity();\n                    if ((rootControl as any).updateHiddenState) {\n                      (rootControl as any).updateHiddenState();\n                    }\n\n                    if ((rootControl as any).updateAlert) {\n                      (rootControl as any).updateAlert();\n                    }\n\n                    if ((rootControl as any).updateDisabledState) {\n                      (rootControl as any).updateDisabledState();\n                    }\n                  });\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n  getRelationsForControl(id, node: GroupNode): Array<AfeFormControl | AfeFormArray> {\n\n    const relations: Array<AfeFormControl | AfeFormArray> = new Array<AfeFormControl | AfeFormArray>();\n\n    const nodeBaseArray: Array<NodeBase> = node.form.searchNodeByQuestionId(id);\n\n    if (nodeBaseArray.length > 0) {\n\n      const nodeBase: NodeBase = nodeBaseArray[0];\n\n      const controlList: any = this.mapControlIds(node, {});\n\n      for (const key in controlList) {\n        if (controlList.hasOwnProperty(key)) {\n\n          if (this.hasRelation(controlList[key].question.key, nodeBase.question)) {\n            relations.push(controlList[key].control);\n          }\n        }\n      }\n    }\n    return relations;\n  }\n\n  mapControlIds(node: GroupNode, controlsStore: any) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.mapControlIds(child, controlsStore);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          const questionBase: QuestionBase = (child as ArrayNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n            controlsStore[questionBase.key] = child;\n          }\n        }\n      }\n    }\n\n    return controlsStore;\n  }\n\n  setRelations(controlsStore: any, nodeBase: NodeBase) {\n\n    const questionBase: QuestionBase = nodeBase.question;\n\n    const id = questionBase.key;\n\n    for (const key in controlsStore) {\n      if (controlsStore.hasOwnProperty(key) && key !== id) {\n\n        const node: NodeBase = controlsStore[key];\n        const question: QuestionBase = node.question;\n\n        if (this.hasRelation(id, question, nodeBase)) {\n          this.addRelationToControl(node.control as AfeFormControl | AfeFormArray, nodeBase.control as AfeFormControl | AfeFormArray);\n        }\n\n        // add conditional required and conditional answered relations\n        if (typeof question.required === 'object') {\n\n          const required: any = question.required;\n\n          if (required.type === 'conditionalRequired') {\n\n            if (required.referenceQuestionId === id) {\n              this.addRelationToControl(node.control as AfeFormControl | AfeFormArray,\n                nodeBase.control as AfeFormControl | AfeFormArray);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  hasRelation(id: string, questionBase: QuestionBase, nodeBase?: NodeBase) {\n\n    let hasRelation = false;\n\n    if (questionBase.validators && questionBase.validators.length > 0) {\n\n      questionBase.validators.forEach(element => {\n\n        if (element instanceof JsExpressionValidationModel) {\n\n          const model: JsExpressionValidationModel = element as JsExpressionValidationModel;\n\n          const failsWhenExpression: string = model.failsWhenExpression;\n          if (failsWhenExpression && failsWhenExpression.indexOf(id) !== -1) {\n            hasRelation = true;\n          }\n        } else if (element instanceof ConditionalValidationModel && element.type === 'conditionalAnswered'\n          && element.referenceQuestionId === id) {\n          hasRelation = true;\n        }\n      });\n    }\n\n    // add hiders and disablers relations\n    if (!hasRelation) {\n\n      if (typeof questionBase.hide === 'string') {\n\n        const hide: string = questionBase.hide as string;\n\n        if (hide.length > 0 && hide.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      } else if (typeof questionBase.hide === 'object') {\n\n        const hideObj: any = questionBase.hide;\n\n        if (hideObj.field === id) {\n          hasRelation = true;\n        }\n      }\n\n     if ( questionBase.alert && typeof questionBase.alert === 'object') {\n        hasRelation = true;\n      }\n\n      if (typeof questionBase.disable === 'string') {\n\n        const disable: string = questionBase.disable as string;\n\n        if (disable.length > 0 && disable.indexOf(id) !== -1) {\n          hasRelation = true;\n        }\n      }\n    }\n\n    // add calculate expressions relations\n    if (!hasRelation && questionBase.calculateExpression && questionBase.calculateExpression.length > 0\n      && questionBase.calculateExpression.indexOf(id) !== -1) {\n      hasRelation = true;\n    }\n\n    return hasRelation;\n  }\n\n  addRelationToControl(control: AfeFormControl | AfeFormArray, related: AfeFormControl | AfeFormArray) {\n\n    //  let relations = control.controlRelations.relations;\n    //\n    //  let hasRelation = false;\n    //\n    //   relations.forEach(element => {\n    //\n    //     let controlRelation: ControlRelation = element as ControlRelation;\n    //\n    //     let relation: AfeFormControl | AfeFormArray = controlRelation.control as AfeFormControl | AfeFormArray;\n    //\n    //     if ( control.uuid !== undefined && control.uuid === relation.uuid ) {\n    //       hasRelation = true;\n    //     }\n    //   });\n\n    // if ( !hasRelation ) {\n    control.controlRelations.addRelatedControls(related);\n    // }\n  }\n}\n","import { AbstractControl } from '@angular/forms';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension/control-extensions';\nimport { ArrayNode } from '../form-factory/form-node';\nimport { ControlRelationsFactory } from '../form-factory/control-relations.factory';\nimport { Form } from '../form-factory/form';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nexport class ExpressionRunner {\n    getRunnable(expression: string, control: AfeFormArray | AfeFormGroup | AfeFormControl,\n        helper: any, dataDependencies: any, form?: Form):\n        Runnable {\n        const runner = this;\n        const runnable: Runnable = {\n            run: () => {\n\n                /* tslint:disable */\n                let scope: any = {};\n                if (control.uuid) {\n                    scope[control.uuid] = control.value;\n                }\n                window['moment'] = moment;\n                // scope.moment = moment;\n                scope['myValue'] = control.value;\n                runner.getControlRelationValueString(control, scope);\n                runner.getHelperMethods(helper, scope);\n                runner.getDataDependencies(dataDependencies, scope);\n\n                if (form) {\n                    // console.error('Form defined', form);\n                    runner.getDataDependencies(form.dataSourcesContainer.dataSources, scope);\n                }\n\n                let paramList = '';\n                let argList = '';\n                for (let o in scope) {\n                    paramList = paramList === \"\" ? paramList + o : paramList + ',' + o;\n                    argList = argList === \"\" ? argList + \"scope['\" + o + \"']\" : argList + \",scope['\" + o + \"']\";\n                }\n\n                // prevent more than one return statements\n                if (expression.indexOf('return') === -1) {\n                    expression = '\"return ' + expression + '\"';\n                }\n\n                let funcDeclarationCode = 'var afeDynamicFunc = new Function(\"' + paramList + '\", ' + expression + ');';\n                let funcCallCode = 'afeDynamicFunc.call(this ' + (argList === '' ? '' : ',' + argList) + ');';\n\n                try {\n\n                    if (Object.keys(scope).indexOf('undefined') >= 0) {\n                        console.warn('Missing reference found', expression, scope);\n                        return false;\n                    }\n                    //console.info('results: ', expression, eval(funcDeclarationCode + funcCallCode));\n                    return eval(funcDeclarationCode + funcCallCode);\n                } catch (e) {\n                    // if (window['error_count']) {\n                    //     window['error_count'] = window['error_count'] + 1;\n                    // } else {\n                    //     window['error_count'] = 1;\n                    // }\n                    // console.error(window['error_count'] + ' Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n                    // console.error('Error running expression:' + expression + '. ',\n                    //     e, control, 'Effective Expression', (funcDeclarationCode + funcCallCode));\n\n                    // Uncomment the line above during debugging\n                    // console.error('Error running expression:' + expression, scope);\n\n                    return false;\n                }\n                /* tslint:enable */\n            }\n        };\n        return runnable;\n    }\n\n    private getControlRelationValueString(control: AfeFormArray | AfeFormGroup | AfeFormControl, scope: any) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n                if (relation.relatedTo) {\n                    const related = relation.relatedTo as any;\n                    const relatedAsControl = relation.relatedTo as AbstractControl;\n                    if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                        scope[related.uuid] = relation.relatedTo.value;\n                    } else {\n                        scope[related.uuid] = relation.relatedTo.value && relation.relatedTo.value.value ?\n                            relation.relatedTo.value.value : relation.relatedTo.value;\n                    }\n                }\n            });\n        }\n\n        if (control && control.controlRelations && control.controlRelations.otherRelations\n            && control.controlRelations.otherRelations.length > 0) {\n\n            control.controlRelations.otherRelations.forEach(node => {\n                if (node instanceof ArrayNode) {\n                    const arrayNode: ArrayNode = node as ArrayNode;\n                    const uuid = control.uuid;\n\n                    const controlRelationsFactory: ControlRelationsFactory = new ControlRelationsFactory();\n                    let relationsForControl: Array<AfeFormControl | AfeFormArray> = [];\n                    // get all related controls\n                    arrayNode.children.forEach(child => {\n                        relationsForControl = relationsForControl.concat(controlRelationsFactory.getRelationsForControl(uuid, child));\n\n                    });\n\n                    this.setControlArrayValues(control as AfeFormControl | AfeFormArray, relationsForControl, scope);\n                }\n            });\n        }\n    }\n\n    private setControlArrayValues(control: AfeFormControl | AfeFormArray,\n        relationsForControl: Array<AfeFormControl | AfeFormArray>, scope: any) {\n        const keys: Array<string> = this._getFormControlKeys(relationsForControl);\n\n        keys.forEach(key => {\n            const values: any = this._getValuesForKey(key, relationsForControl);\n            scope[key] = values;\n        });\n    }\n\n    private _getFormControlKeys(array: Array<AfeFormControl | AfeFormArray>): Array<string> {\n\n        const keys: Array<string> = [];\n        array.forEach(control => {\n\n            if (keys.indexOf(control.uuid) === -1) {\n                keys.push(control.uuid);\n            }\n        });\n\n        return keys;\n    }\n\n    private _getValuesForKey(key: string, array: Array<AfeFormControl | AfeFormArray>): any {\n        const values: any = [];\n\n        array.forEach(control => {\n\n            if (control.uuid === key) {\n                values.push(control.value);\n            }\n        });\n\n        return values;\n    }\n\n    private getHelperMethods(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n\n    private getDataDependencies(obj: any, scope?: any) {\n        for (const key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                scope[key] = obj[key];\n            }\n        }\n    }\n}\n\nexport interface Runnable {\n    run();\n}\n","import { FormControl, ValidatorFn, AsyncValidatorFn, AbstractControlOptions } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { CanCalculate } from '../form-entry/control-calculators/can-calculate';\nimport { ExpressionRunner } from '../form-entry/expression-runner/expression-runner';\n\nclass AfeFormControl extends FormControl implements CanHide, CanDisable, CanCalculate, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden = false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n    calculator: Function;\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    constructor(formState?: any, validator?: ValidatorFn | ValidatorFn[] | AbstractControlOptions | null,\n        asyncValidator?: AsyncValidatorFn | AsyncValidatorFn[] | null) {\n        super(formState, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n\n        this.valueChanges.subscribe((value) => {\n            if (this._previousValue !== value) {\n                this.fireValueChangeListener(value);\n                this._previousValue = value;\n            }\n        });\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue('');\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    setCalculatorFn(newCalculator: Function) {\n        this.calculator = newCalculator;\n    }\n\n    updateCalculatedValue() {\n        if (this.calculator) {\n            const _val = this.calculator.call(ExpressionRunner, {});\n            this.setValue(_val);\n        }\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n    updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n        this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n        if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n            this._valueChangeListener(value);\n        }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n}\nexport { AfeFormControl };\n","import { FormGroup, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\n\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\n\nexport class AfeFormGroup extends FormGroup implements CanHide, CanDisable , CanGenerateAlert {\n    private _controlRelations: ControlRelations;\n\n    public uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n\n    constructor(controls: { [key: string]: AbstractControl }, validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.disablers = [];\n        this.alerts = [];\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue({});\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","import { FormArray, ValidatorFn, AsyncValidatorFn, AbstractControl } from '@angular/forms';\n\nimport { ControlRelations } from '../change-tracking/control-relations';\nimport { ValueChangeListener } from './value-change.listener';\nimport { CanHide, Hider } from '../form-entry/control-hiders-disablers/can-hide';\nimport { CanGenerateAlert, Alert } from '../form-entry/control-alerts/can-generate-alert';\nimport { CanDisable, Disabler } from '../form-entry/control-hiders-disablers/can-disable';\nimport { HiderHelper } from '../form-entry/control-hiders-disablers/hider-helpers';\nimport { AlertHelper } from '../form-entry/control-alerts/alert-helpers';\nimport { DisablerHelper } from '../form-entry/control-hiders-disablers/disabler-helper';\n\n\nexport class AfeFormArray extends FormArray implements CanHide, CanDisable, CanGenerateAlert, ValueChangeListener {\n    private _controlRelations: ControlRelations;\n    private _valueChangeListener: any;\n    private _previousValue;\n    private _uuid: string;\n    public pathFromRoot: string;\n\n    hidden: false;\n    hiders: Hider[];\n\n    alert: string;\n    alerts: Alert[];\n\n    disablers: Disabler[];\n\n    private hiderHelper: HiderHelper = new HiderHelper();\n    private AlertHelper: AlertHelper = new AlertHelper();\n    private disablerHelper: DisablerHelper = new DisablerHelper();\n\n    constructor(controls: AbstractControl[], validator?: ValidatorFn, asyncValidator?: AsyncValidatorFn) {\n        super(controls, validator, asyncValidator);\n        this._controlRelations = new ControlRelations(this);\n        this.hiders = [];\n        this.alerts = [];\n        this.disablers = [];\n\n        this.valueChanges.subscribe((value) => {\n          if (this._previousValue !== value) {\n            this.fireValueChangeListener(value);\n            this._previousValue = value;\n          }\n        });\n    }\n\n    get uuid(): string {\n        return this._uuid;\n    }\n    set uuid(val: string) {\n        this._uuid = val;\n    }\n\n    get controlRelations(): ControlRelations {\n        return this._controlRelations;\n    }\n\n    hide() {\n        this.hiderHelper.hideControl(this);\n    }\n\n    show() {\n        this.hiderHelper.showControl(this);\n    }\n\n    disable(param?: { onlySelf?: boolean, emitEvent?: boolean }) {\n        super.disable(param);\n        super.setValue([]);\n    }\n\n    setHidingFn(newHider: Hider) {\n        this.hiderHelper.setHiderForControl(this, newHider);\n    }\n\n    clearHidingFns() {\n        this.hiderHelper.clearHidersForControl(this);\n    }\n\n    updateHiddenState() {\n        this.hiderHelper.evaluateControlHiders(this);\n    }\n\n    setDisablingFn(newDisabler: Disabler) {\n        this.disablerHelper.setDisablerForControl(this, newDisabler);\n    }\n\n    clearDisablingFns() {\n        this.disablerHelper.clearDisablersForControl(this);\n    }\n\n    updateDisabledState() {\n        this.disablerHelper.evaluateControlDisablers(this);\n    }\n\n    setAlertFn(newHider: Alert) {\n        this.AlertHelper.setAlertsForControl(this, newHider);\n    }\n\n    clearMessageFns() {\n        this.AlertHelper.clearAlertsForControl(this);\n    }\n\n     updateAlert() {\n        this.AlertHelper.evaluateControlAlerts(this);\n    }\n\n    addValueChangeListener(func: any) {\n      this._valueChangeListener = func;\n    }\n\n    fireValueChangeListener(value: any) {\n      if (this.alerts.length > 0) {\n        this.updateAlert();\n      }\n      if (this._valueChangeListener && typeof this._valueChangeListener === 'function') {\n        this._valueChangeListener(value);\n      }\n    }\n\n    setValue(value: any) {\n        super.setValue(value);\n    }\n\n}\n","export enum AfeControlType {\n    AfeFormControl,\n    AfeFormArray,\n    AfeFormGroup,\n    None\n}\n","import { BaseOptions } from './interfaces/base-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\nimport { ValidationModel } from './validation.model';\n\nexport class QuestionBase implements BaseOptions {\n    type: string;\n    order?: number;\n    questionOptions?: any;\n    questions?: any;\n    placeholder?: any;\n    hidden?: any;\n    showTime?: any;\n    showWeek?: any;\n    historicalDisplay?: any;\n    rows?: any;\n    showWeeksAdder?: any;\n    key: string;    alert?: any;\n\n    label?: string;\n    renderingType: string;\n\n    defaultValue?: any;\n    originalValue?: any;\n    enableHistoricalValue?: boolean;\n    showHistoricalValueDate?: boolean;\n    historicalDataValue?: any;\n    extras?: any;\n    dataSource?: string;\n    dataSourceOptions?: any;\n\n    controlType?: AfeControlType;\n    validators?: Array<ValidationModel>;\n    required?: boolean;\n    hide?: string | boolean;\n    disable?: string | boolean;\n    calculateExpression?: string;\n    options?: any;\n\n    constructor(options: BaseOptions) {\n\n        this.defaultValue = options.defaultValue;\n        this.originalValue = options.originalValue;\n        this.extras = options.extras;\n        this.renderingType = options.type;\n        this.key = options.key || '';\n        this.label = options.label || '';\n        this.validators = options.validators || [];\n        this.required = options.required;\n        this.hide = options.hide;\n        this.disable = options.disable;\n        this.alert = options.alert;\n        this.historicalDataValue = options.historicalDataValue;\n        this.calculateExpression = options.calculateExpression;\n    }\n\n    setHistoricalValue(v: boolean) {\n        this.enableHistoricalValue = v;\n    }\n    showHistoricalEncounterDate(v?: boolean) {\n      this.showHistoricalValueDate = v === undefined ? true : v;\n    }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalRequiredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let isRequired: boolean;\n\n      if (control && control.controlRelations && control.controlRelations.relations) {\n          control.controlRelations.relations.forEach(relation => {\n\n            const relatedAsControl = relation.relatedTo as any;\n            if (relatedAsControl.uuid === referenceQuestionId) {\n              if (relatedAsControl && Array.isArray(relatedAsControl.value)) {\n                  relationValue = relation.relatedTo.value;\n              } else {\n                  relationValue = relation.relatedTo.value && relation.relatedTo.value.value ?\n                      relation.relatedTo.value.value : relation.relatedTo.value;\n              }\n            }\n          });\n      }\n\n      if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) !== -1) {\n        isRequired = true;\n      }\n\n      if (isRequired && !value) {\n        return { 'conditional_required': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\nexport class ConditionalAnsweredValidator {\n\n  constructor() {}\n\n  validate(model: ConditionalValidationModel) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      const value = control.value;\n      let relationValue = null;\n      const referenceQuestionId: string = model.referenceQuestionId;\n      const referenceQuestionAnswers: any = model.referenceQuestionAnswers;\n      let successCondition: any = true;\n\n      if (value) {\n        if (control && control.controlRelations && control.controlRelations.relations) {\n            control.controlRelations.relations.forEach(relation => {\n\n              const relatedAsControl = relation.relatedTo as any;\n              if (relatedAsControl.uuid === referenceQuestionId) {\n                if (Array.isArray(relatedAsControl.value)) {\n                    relationValue = relatedAsControl.value;\n                } else {\n                    relationValue = relatedAsControl.value && typeof relatedAsControl.value === 'object' && relatedAsControl.value.value ?\n                        relatedAsControl.value.value : relatedAsControl.value;\n                }\n              }\n\n              if (!relationValue) {\n                successCondition = false;\n              } else if (typeof referenceQuestionAnswers === 'object' && referenceQuestionAnswers.indexOf(relationValue) === -1) {\n                successCondition = false;\n              }\n            });\n        }\n      }\n\n      if (!successCondition) {\n        return { 'conditional_answered': { message:  model.message  } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class RequiredValidator {\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value: any = control.value;\n    const isEmpty: boolean = value == null || typeof value === 'string' && value.length === 0;\n\n    return isEmpty ? { 'required': true } : null;\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n\nexport class DateValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n\n    if (value && value.length !== 0) {\n\n      // YYYY-MM-DD or DD-MM-YYYY\n      const test: boolean = !/Invalid|NaN/.test(new Date(value).toString());\n\n      return test ? null : { 'date': true };\n    } else {\n      return null;\n    }\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MinValidator {\n\n\n  validate(min: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v >= min ? null : { 'min': { requiredValue: min, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\nexport class MaxValidator {\n\n  validate(max: number) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        const v: number = control.value;\n        return v <= max ? null : { 'max': { requiredValue: max, actualValue: v } };\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MinDateValidator {\n\n  validate(min: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() < min.getTime() ? { 'mindate': { 'requiredDate': min, actualDate: newDate } } : null;\n        } else {\n\n          return { 'mindate': { 'requiredDate': min } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class MaxDateValidator {\n\n  validate(max: Date) {\n\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (control.hidden) {\n        return null;\n      }\n\n      if (control.value && control.value.length !== 0) {\n\n        if (!new DateValidator().validate(control.value)) {\n\n          const newDate: Date = new Date(control.value);\n\n          return newDate.getTime() > max.getTime() ? { 'maxdate': { 'requiredDate': max, actualDate: newDate } } : null;\n        } else {\n\n          return { 'maxdate': { 'requiredDate': max } };\n        }\n      }\n\n      return null;\n    };\n  }\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { DateValidator } from './date.validator';\n\nexport class FutureDateRestrictionValidator {\n\n  constructor() { }\n\n  validate(control: AfeFormControl) {\n\n    if (control.hidden) {\n      return null;\n    }\n\n    const value = control.value;\n    const now: Date = new Date();\n\n    if (value && value.length !== 0) {\n\n      if (!new DateValidator().validate(value)) {\n\n        const d: Date = new Date(value);\n\n        return d.getTime() > now.getTime() ? { 'futureDateRestriction': true } : null;\n      }\n    }\n\n    return null;\n  }\n}\n","\nimport * as _ from 'lodash';\nexport class JsExpressionHelper {\n\n  calcBMI(height, weight) {\n\n    let r;\n    if (height && weight) {\n      r = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    return height && weight ? parseFloat(r) : null;\n  }\n\n  calcBMIForAgeZscore(bmiForAgeRef, height, weight) {\n   let bmi;\n   const maxAgeInDays = 1856;\n    if (height && weight) {\n      bmi = (weight / (height / 100 * height / 100)).toFixed(1);\n    }\n    const refSectionObject = _.first(bmiForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (bmi < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= bmi) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M' || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  bmi && refSectionObject ?  formattedSDValue : null;\n  }\n  calcWeightForHeightZscore(weightForHeightRef, height, weight) {\n    let refSection ;\n    let formattedSDValue;\n    if (height && weight) {\n      height = parseFloat(height).toFixed(1);\n    }\n    const standardHeightMin = 45;\n    const standardMaxHeight = 110;\n    if ( height < standardHeightMin || height > standardMaxHeight) {\n      formattedSDValue = -4;\n    } else {\n        refSection = _.filter(weightForHeightRef, (refObject) => {\n        return parseFloat(refObject['Length']).toFixed(1) === height;\n      });\n    }\n\n    const refSectionObject = _.first(refSection);\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (weight < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= weight) {\n          minReferencePoint.push(value);\n          }\n          });\n\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight  ?  formattedSDValue : null;\n  }\n\n  calcHeightForAgeZscore(heightForAgeRef, height, weight) {\n\n    const refSectionObject = _.first(heightForAgeRef);\n    let formattedSDValue;\n    if (refSectionObject) {\n      const refObjectValues = Object.keys(refSectionObject).map(\n        (key) => refSectionObject[key]).map( (x) => x);\n        const refObjectKeys = Object.keys(refSectionObject);\n        const minimumValue = refObjectValues[1];\n        const minReferencePoint = [];\n        if (height < minimumValue) {\n          minReferencePoint.push(minimumValue);\n        } else {\n          _.forEach(refObjectValues, (value) => {\n          if (value <= height) {\n          minReferencePoint.push(value);\n          }\n          });\n        }\n        const lastReferenceValue = _.last(minReferencePoint);\n        const lastValueIndex = _.findIndex(refObjectValues, (o) => {\n        return o === lastReferenceValue;\n        });\n        const SDValue = refObjectKeys[lastValueIndex];\n        formattedSDValue = SDValue.replace('SD', '');\n        if (formattedSDValue.includes('neg')) {\n          formattedSDValue = formattedSDValue.substring(1, 0);\n          formattedSDValue = '-' + formattedSDValue;\n        }\n\n        if ( formattedSDValue === 'S' || formattedSDValue === 'L' || formattedSDValue === 'M'  || formattedSDValue === '-5') {\n          formattedSDValue = '-4';\n        }\n\n    }\n\n    return  height && weight && refSectionObject ?  formattedSDValue : null;\n  }\n\n  isEmpty(val) {\n\n    if (val === undefined || val === null || val === '' || val === 'null' || val === 'undefined') {\n      return true;\n    }\n\n    if (Array.isArray(val) && val.length === 0) {\n      return true;\n    }\n    return false;\n  }\n\n  arrayContains(array, members) {\n\n    if (Array.isArray(members)) {\n\n      if (members.length === 0) {\n        return true;\n      }\n\n      let contains = true;\n\n      for (let i = 0; i < members.length; i++) {\n        const val = members[i];\n        if (array.indexOf(val) === -1) {\n          contains = false;\n        }\n      }\n\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n  extractRepeatingGroupValues(key, array) {\n    const values = array.map(function(item) {\n    return item[key];\n    });\n  return values;\n  }\n  formatDate(value, format, offset) {\n\n    format = format || 'yyyy-MM-dd';\n    offset = offset || '+0300';\n\n    if (!(value instanceof Date)) {\n\n      value = new Date(value);\n      if (value === null || value === undefined) {\n        throw new Error('DateFormatException: value passed ' +\n          'is not a valid date');\n      }\n    }\n\n    return value; // TODO implement this\n    // return $filter('date')(value, format, offset);\n  }\n\n  arrayContainsAny(array, members) {\n\n    if (Array.isArray(members)) {\n      if (members.length === 0) {\n        return true;\n      }\n      let contains = false;\n\n      for (let i = 0; i < members.length; i++) {\n\n        const val = members[i];\n        if (array.indexOf(val) !== -1) {\n          contains = true;\n        }\n      }\n      return contains;\n    } else {\n      return array.indexOf(members) !== -1;\n    }\n  }\n\n  get helperFunctions() {\n    const helper = this;\n    return {\n      arrayContainsAny: helper.arrayContainsAny,\n      calcBMI: helper.calcBMI,\n      calcBMIForAgeZscore: helper.calcBMIForAgeZscore,\n      calcWeightForHeightZscore: helper.calcWeightForHeightZscore,\n      calcHeightForAgeZscore: helper.calcHeightForAgeZscore,\n      isEmpty: helper.isEmpty,\n      arrayContains: helper.arrayContains,\n      extractRepeatingGroupValues: helper.extractRepeatingGroupValues\n    };\n  }\n}\n","\n\nexport class Validations {\n\n  public static JSExpressionValidatorsEnabled = false;\n\n  constructor() {}\n}\n","import { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { ExpressionRunner } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { Validations } from './validations';\n\nexport class JsExpressionValidator {\n\n  constructor() {}\n\n  validate(model: JsExpressionValidationModel, form?: any) {\n\n    // convert helper functions to string\n    return (control: AfeFormControl): { [key: string]: any } => {\n\n      if (!Validations.JSExpressionValidatorsEnabled) {\n        return null;\n      }\n\n      const expression = model.failsWhenExpression;\n      const helper = new JsExpressionHelper();\n      const dataDependencies = {};\n\n      const helperFunctions = helper.helperFunctions;\n      const runnable = new ExpressionRunner().getRunnable(expression, control, helperFunctions, dataDependencies, form);\n\n      if (runnable.run()) {\n\n        return { 'js_expression': { 'expression': expression, message:  model.message } };\n      }\n\n      return null;\n    };\n  }\n}\n","\nexport class Messages {\n\n  public static readonly REQUIRED_FIELD_MSG = 'This field is required!';\n\n  public static readonly INVALID_DATE_MSG = 'Provided date is invalid!';\n\n  public static readonly FUTURE_DATE_RESTRICTION_MSG = 'Future date is not allowed!';\n\n  public static readonly MIN_LENGTH_MSG = 'Min Length should be {minLength}';\n\n  public static readonly MAX_LENGTH_MSG = 'Max Length should be {maxLength}';\n\n  public static readonly MAX_DATE_MSG = 'Max Date should be {maxDate}';\n\n  public static readonly MIN_DATE_MSG = 'Min Date should be {minDate}';\n\n  public static readonly MAX_MSG = 'Max value should be {max}';\n\n  public static readonly MIN_MSG = 'Min value should be {min}';\n}\n","import {Injectable} from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as _ from 'lodash';\n\nimport { ConditionalRequiredValidator } from '../validators/conditional-required.validator';\nimport { ConditionalAnsweredValidator } from '../validators/conditional-answered.validator';\nimport { RequiredValidator } from '../validators/required.validator';\nimport { DateValidator } from '../validators/date.validator';\nimport { MinValidator } from '../validators/min.validator';\nimport { MaxValidator } from '../validators/max.validator';\nimport { MinDateValidator } from '../validators/min-date.validator';\nimport { MaxDateValidator } from '../validators/max-date.validator';\nimport { FutureDateRestrictionValidator } from '../validators/future-date-restriction.validator';\nimport { JsExpressionValidator } from '../validators/js-expression.validator';\nimport { QuestionBase } from '../question-models/question-base';\nimport { Messages } from '../utils/messages';\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel} from '../question-models/max-validation.model';\nimport { MinValidationModel} from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\n\n@Injectable()\nexport class ValidationFactory {\n\n  constructor() {}\n\n  getValidators(question: QuestionBase, form?: any) {\n\n    const list: Array<any> = [];\n\n    if (question.validators) {\n\n      _.forEach(question.validators, (validator: ValidationModel) => {\n\n        switch (validator.type) {\n          case 'date':\n            list.push(this.dateValidator);\n            const allowFutureDates: boolean = ( <DateValidationModel>validator ).allowFutureDates;\n\n            if (!allowFutureDates) {\n              list.push(this.futureDateRestrictionValidator);\n            }\n            break;\n          case 'js_expression':\n            list.push(this.jsExpressionValidator.validate(<JsExpressionValidationModel>validator, form));\n            break;\n          case 'max':\n            list.push(this.getMaxValueValidator((<MaxValidationModel>validator).max));\n            break;\n          case 'min':\n            list.push(this.getMinValueValidator((<MinValidationModel>validator).min));\n            break;\n          case 'conditionalRequired':\n            list.push(this.conditionalRequiredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n          case 'conditionalAnswered':\n            list.push(this.conditionalAnsweredValidator.validate(<ConditionalValidationModel>validator));\n            break;\n        }\n      });\n    }\n\n    if (question.required && typeof(question.required) === 'string' && question.required === 'true') {\n      list.push(this.requiredValidator);\n    } else {\n\n      // TODO - handle custom required validator\n    }\n\n    return list;\n  }\n\n  get conditionalRequiredValidator(): ConditionalRequiredValidator {\n    return new ConditionalRequiredValidator();\n  }\n\n  get conditionalAnsweredValidator(): ConditionalAnsweredValidator {\n    return new ConditionalAnsweredValidator();\n  }\n\n  get requiredValidator(): any {\n    return new RequiredValidator().validate;\n  }\n\n  get dateValidator(): any {\n    return new DateValidator().validate;\n  }\n\n  get futureDateRestrictionValidator(): any {\n    return new FutureDateRestrictionValidator().validate;\n  }\n\n  get maxDateValidator(): any {\n    return new MaxDateValidator().validate;\n  }\n\n  get minDateValidator(): any {\n    return new MinDateValidator().validate;\n  }\n\n  get minLengthValidator(): any {\n    return Validators.minLength;\n  }\n\n  get maxLengthValidator() {\n    return Validators.maxLength;\n  }\n\n  public getMinValueValidator(min: number): any {\n    return new MinValidator().validate(min);\n  }\n\n  public getMaxValueValidator(max: number): any {\n\n    return new MaxValidator().validate(max);\n  }\n\n  get jsExpressionValidator() {\n\n    return new JsExpressionValidator();\n  }\n\n  public errors(errors: any, question: QuestionBase): Array<string> {\n\n    const messages: Array<string> = [];\n\n    for (const property in errors) {\n        if (errors.hasOwnProperty(property)) {\n\n            switch (property) {\n              case 'required':\n                messages.push(Messages.REQUIRED_FIELD_MSG);\n                break;\n              case 'date':\n                messages.push(Messages.INVALID_DATE_MSG);\n                break;\n              case 'futureDateRestriction':\n                messages.push(Messages.FUTURE_DATE_RESTRICTION_MSG);\n                break;\n              case 'minlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{minLength}', errors.minlength.requiredLength));\n                break;\n              case 'maxlength':\n                messages.push(Messages.MIN_LENGTH_MSG.replace('{maxLength}', errors.maxlength.requiredLength));\n                break;\n              case 'maxdate':\n                messages.push(Messages.MAX_DATE_MSG.replace('{maxDate}', errors.maxdate.requiredDate));\n                break;\n              case 'mindate':\n                messages.push(Messages.MIN_DATE_MSG.replace('{minDate}', errors.mindate.requiredDate));\n                break;\n              case 'max':\n                messages.push(Messages.MAX_MSG.replace('{max}', errors.max.requiredValue));\n                break;\n              case 'min':\n                messages.push(Messages.MIN_MSG.replace('{min}', errors.min.requiredValue));\n                break;\n              case 'js_expression':\n                messages.push(errors['js_expression'].message);\n                break;\n              case 'conditional_required':\n                messages.push(errors['conditional_required'].message);\n                break;\n              case 'conditional_answered':\n                messages.push(errors['conditional_answered'].message);\n                break;\n            }\n        }\n    }\n\n    return messages;\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Disabler } from '../control-hiders-disablers/can-disable';\nimport { Hider } from '../control-hiders-disablers/can-hide';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup\n} from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form } from './form';\n// Add ability to display all fields for debugging\nimport { DebugModeService } from './../services/debug-mode.service';\n\n@Injectable()\nexport class HidersDisablersFactory {\n\n    constructor(private expressionRunner: ExpressionRunner,\n     private expressionHelper: JsExpressionHelper,\n     private _debugModeService: DebugModeService) {\n    }\n\n    getJsExpressionDisabler(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Disabler {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.disable as string, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const disabler: Disabler = {\n            toDisable: false,\n            disableWhenExpression: question.disable as string,\n            reEvaluateDisablingExpression: () => {\n                const result = runnable.run();\n                disabler.toDisable = result;\n            }\n        };\n        return disabler;\n    }\n\n    getJsExpressionHider(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Hider {\n\n        const hide: any = question.hide;\n        const value: string = typeof hide === 'object' ? this.convertHideObjectToString(hide) : question.hide as string;\n\n        // check if debugging has been enabled\n\n        const debugEnabled = this._debugModeService.debugEnabled();\n\n        const runnable: Runnable = this.expressionRunner.getRunnable(value, control,\n        this.expressionHelper.helperFunctions, {}, form);\n\n        const hider: Hider = {\n            toHide: false,\n            hideWhenExpression: value,\n            reEvaluateHidingExpression: () => {\n                 /* if debug is enabled then hiders to be false\n                 else run the normal eveluator i.e runnable.run()\n                 */\n                if (debugEnabled === true) {\n                      hider.toHide = false ;\n                  } else {\n                      hider.toHide =  runnable.run();\n                  }\n            }\n        };\n        return hider;\n    }\n\n    convertHideObjectToString(hide: any) {\n\n      if (hide.value instanceof Array) {\n\n        const arrayStr: string = '\\'' + hide.value.join('\\',\\'') + '\\'';\n        const exp = '!arrayContains([' + arrayStr + '],' + hide.field + ')';\n        return exp;\n      }\n\n      return '';\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Alert } from '../control-alerts/can-generate-alert';\n\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { AfeFormControl, AfeFormArray, AfeFormGroup } from '../../abstract-controls-extension';\nimport { QuestionBase } from '../question-models/question-base';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\nimport { Form} from './form';\n\n@Injectable()\nexport class AlertsFactory {\n    constructor(private expressionRunner: ExpressionRunner, private expressionHelper: JsExpressionHelper) {\n    }\n    getJsExpressionshowAlert(question: QuestionBase, control: AfeFormControl | AfeFormArray | AfeFormGroup,\n        form?: Form): Alert {\n        const runnable: Runnable =\n            this.expressionRunner.getRunnable(question.alert.alertWhenExpression, control,\n                this.expressionHelper.helperFunctions, {}, form);\n        const showAlert: Alert = {\n            shown: false,\n            alertWhenExpression: question.alert.alertWhenExpression,\n            alertMessage: question.alert.message,\n            reEvaluateAlertExpression: () => {\n                const result = runnable.run();\n                showAlert.shown = result;\n            }\n        };\n        return showAlert;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\n\nimport { AfeFormControl, AfeFormArray, AfeFormGroup, AfeControlType\n} from '../../abstract-controls-extension';\n\nimport { NestedQuestion } from '../question-models/interfaces/nested-questions';\n\nimport { QuestionBase } from '../question-models/question-base';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { HidersDisablersFactory } from './hiders-disablers.factory';\nimport { AlertsFactory } from './show-messages.factory';\nimport { Form } from './form';\nimport { ExpressionRunner, Runnable } from '../expression-runner/expression-runner';\nimport { JsExpressionHelper } from '../helpers/js-expression-helper';\n\n\n@Injectable()\nexport class FormControlService {\n    controls = [];\n    validationFactory: ValidationFactory;\n    hidersDisablersFactory: HidersDisablersFactory;\n\n    constructor(validationFactory: ValidationFactory,\n        hidersDisablersFactory: HidersDisablersFactory, private alertsFactory: AlertsFactory) {\n        this.validationFactory = validationFactory;\n        this.hidersDisablersFactory = hidersDisablersFactory;\n    }\n\n    generateControlModel(questionModel: QuestionBase | NestedQuestion, parentControl: AfeFormGroup,\n        generateChildren: boolean, form?: Form): AfeFormControl | AfeFormArray | AfeFormGroup {\n        if (questionModel instanceof QuestionBase) {\n            if (questionModel.controlType === AfeControlType.AfeFormArray) {\n                return this.generateFormArray(questionModel, parentControl, form);\n            }\n            if (questionModel.controlType === AfeControlType.AfeFormGroup) {\n                return this.generateFormGroupModel(questionModel, generateChildren, parentControl, form);\n            }\n\n            if (questionModel.controlType === AfeControlType.AfeFormControl) {\n                return this.generateFormControl(questionModel, parentControl, form);\n            }\n        }\n        return null;\n    }\n\n    generateFormGroupModel(question: QuestionBase, generateChildren: boolean,\n        parentControl?: AfeFormGroup, form?: Form): AfeFormGroup {\n        const formGroup = new AfeFormGroup({});\n        this.wireHidersDisablers(question, formGroup, form);\n        this.wireAlerts(question, formGroup, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formGroup);\n        }\n\n        const asGroup = question as QuestionGroup;\n\n        if (generateChildren && asGroup && asGroup.questions.length > 0) {\n            this._generateFormGroupChildrenModel(asGroup.questions, formGroup, form);\n        }\n\n        return formGroup;\n    }\n\n    _generateFormGroupChildrenModel(questions: QuestionBase[], parentControl: AfeFormGroup, form?: Form) {\n\n        if (questions.length > 0) {\n            questions.forEach(element => {\n                const generated = this.generateControlModel(element, parentControl, true, form);\n                if (generated !== null) {\n                    parentControl.addControl(element.key, generated);\n                }\n            });\n        }\n    }\n\n\n    generateFormArray(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormArray {\n\n        const validators = this.validationFactory.getValidators(question, form);\n         let formArray: AfeFormArray;\n         if (validators && validators.length > 0) {\n             formArray = new AfeFormArray([], validators[0]);\n         } else {\n            formArray = new AfeFormArray([]);\n         }\n        formArray.uuid = question.key;\n        this.wireHidersDisablers(question, formArray, form);\n        this.wireAlerts(question, formArray, form);\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, formArray);\n        }\n\n        return formArray;\n    }\n\n    generateFormControl(question: QuestionBase, parentControl?: AfeFormGroup, form?: Form): AfeFormControl {\n\n        const value = question.defaultValue || '';\n        const validators = this.validationFactory.getValidators(question, form);\n\n        const control = new AfeFormControl(value, validators);\n        control.uuid = question.key;\n        this.wireHidersDisablers(question, control, form);\n        this.wireAlerts(question, control, form);\n        this.wireCalculator(question, control, (form ? form.dataSourcesContainer.dataSources : null));\n\n        if (parentControl instanceof AfeFormGroup) {\n            parentControl.setControl(question.key, control);\n        }\n\n        return control;\n    }\n\n    private wireAlerts(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.alert && question.alert !== '') {\n            const alert = this.alertsFactory.getJsExpressionshowAlert(question, control, form);\n            control.setAlertFn(alert);\n        }\n    }\n    private wireHidersDisablers(question: QuestionBase,\n        control: AfeFormArray | AfeFormGroup | AfeFormControl, form?: Form) {\n        if (question.hide && question.hide !== '') {\n            const hider = this.hidersDisablersFactory.getJsExpressionHider(question, control, form);\n            control.setHidingFn(hider);\n        }\n\n        if (question.disable && question.disable !== '') {\n            const disable =\n                this.hidersDisablersFactory.getJsExpressionDisabler(question, control, form);\n            control.setDisablingFn(disable);\n        }\n    }\n\n    private wireCalculator(question: QuestionBase,\n        control: AfeFormControl, dataSource?: any) {\n        if (question.calculateExpression && question.calculateExpression !== '') {\n            const helper: JsExpressionHelper = new JsExpressionHelper();\n            const runner: ExpressionRunner = new ExpressionRunner();\n            const runnable: Runnable = runner.getRunnable(question.calculateExpression\n                , control,\n                helper.helperFunctions,\n                dataSource);\n            // this functionality strictly assumes the calculateExpression function has been defined in the JsExpressionHelper class\n            control.setCalculatorFn(runnable.run);\n        }\n\n    }\n\n}\n","export const DEFAULT_STYLES = `a {\n      color: white;\n      text-decoration: none;\n      font-size: 12px;\n      text-transform: uppercase;\n    }\n\n    ul {\n      list-style-type: none;\n      margin: 2px auto;\n      position: relative;\n    }\n\n    li {\n      display: block;\n      padding: 10px 20px;\n      white-space: nowrap;\n      transition: all 0.3s ease-in;\n      border-bottom: 4px solid transparent;\n    }\n\n    li:hover {\n      border-bottom: 4px solid white;\n      opacity: 0.7;\n      cursor: pointer;\n    }\n\n    .owl-theme .owl-controls .owl-nav {\n      position: absolute;\n      width: 100%;\n      top: 0;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"] {\n      position: absolute;\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav [class*=\"owl-\"]:hover {\n      background: none;\n      color: black;\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-next {\n      right: 0;\n      transform: translate(120%);\n    }\n\n    .owl-theme .owl-controls .owl-nav .owl-prev {\n      left: 0;\n      transform: translate(-120%);\n    }\n\n    .slick-initialized .swipe-tab-content {\n      position: relative;\n      min-height: 365px;\n    }\n    @media screen and (min-width: 767px) {\n      .slick-initialized .swipe-tab-content {\n        min-height: 500px;\n      }\n    }\n    .slick-initialized .swipe-tab {\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      height: 50px;\n      background: none;\n      border: 0;\n      color: #757575;\n      cursor: pointer;\n      text-align: center;\n      border-bottom: 2px solid rgba(51, 122, 183, 0);\n      transition: all 0.5s;\n    }\n    .slick-initialized .swipe-tab:hover {\n      color: #337AB7;\n    }\n    .slick-initialized .swipe-tab.active-tab {\n      border-bottom-color: #337AB7;\n      color: #337AB7;\n      font-weight: bold;\n    }\n\n    .disabled {\n      opacity: .5;\n      pointer-events: none;\n    }\n\n    .select2-container {\n      margin-top: -5px;\n    }\n\n    .btn {\n      padding: 0px 12px !important;\n    }\n\n    .form-tooltip{\n      color:rgb(51, 122, 183);\n      display: inline-block;\n    }\n    .question-info{\n          opacity:0;\n          height:0px;\n          display: none;\n          transition-duration: opacity 1s ease-out;\n          transtion-delay: 0.5s;\n          padding-top: 2px;\n          padding-bottom: 2px;\n          color: #696969;\n          border-style: ridge;\n          border-width: 1px;\n          border-color: #337ab7;\n          margin-top: 2px;\n    }\n    .hide-info{\n      display:none;\n      height:0px;\n    }\n    .form-tooltip:hover ~ .question-info {\n          display:block;\n          opacity:1;\n          height:auto;\n     }\n    .form-tooltip .tooltipcontent::after {\n          content: \" \";\n          position: absolute;\n          bottom: 100%;  /* At the top of the tooltip */\n          right: 0%;\n          margin-left: -5px;\n          border-width: 5px;\n          border-style: solid;\n          border-top-color: transparent;\n          border-right-color: transparent;\n          border-bottom-color: #337ab7;\n          border-left-color: transparent;\n }\n\n    ng-select.form-control {\n      padding-top: 0;\n      height: auto;\n      padding-bottom: 0;\n    }\n\n .forms-dropdown-menu {\n     max-height: 450px;\n     overflow-y: scroll;\n }\n .no-border {\n  border: 0;\n  box-shadow: none;\n}\n\n    `;\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DataSources {\n    private _dataSources: any = {};\n    constructor() {\n    }\n\n    get dataSources(): any {\n        return this._dataSources;\n    }\n\n    registerDataSource(key: string, dataSource: any, unWrap = false) {\n        if (unWrap) {\n            // tslint:disable-next-line:forin\n            for (const o in dataSource) {\n                console.log('registering', o, dataSource[o]);\n                this.registerDataSource(o, dataSource[o], false);\n            }\n        }\n        if (this.dataSources[key]) {\n            console.warn('Overriding registered data source', key);\n        }\n        this._dataSources[key] = dataSource;\n    }\n\n    clearDataSource(key: string) {\n        delete this._dataSources[key];\n    }\n\n}\n","import {\n  Component, OnInit, Input, Inject\n} from '@angular/core';\nimport 'hammerjs';\nimport { DEFAULT_STYLES } from './form-renderer.component.css';\nimport { DOCUMENT } from '@angular/common';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { FormErrorsService } from '../services/form-errors.service';\nimport { QuestionGroup } from '../question-models/group-question';\n\n@Component({\n  selector: 'form-renderer',\n  templateUrl: 'form-renderer.component.html',\n  styles: ['../../style/app.css', DEFAULT_STYLES]\n})\nexport class FormRendererComponent implements OnInit {\n\n  @Input() public parentComponent: FormRendererComponent;\n  @Input() public node: NodeBase;\n  @Input() public parentGroup: AfeFormGroup;\n  public childComponents: FormRendererComponent[] = [];\n  public showTime: boolean;\n  public showWeeks: boolean;\n  public activeTab: number;\n  public dataSource: DataSource;\n  public isCollapsed = false;\n  public auto: any;\n\n  constructor(\n  private validationFactory: ValidationFactory,\n  private dataSources: DataSources,\n  private formErrorsService: FormErrorsService,\n  @Inject(DOCUMENT) private document: any) {\n    this.activeTab = 0;\n  }\n\n  public ngOnInit() {\n    this.setUpRemoteSelect();\n    this.setUpFileUpload();\n    if (this.node && this.node.form) {\n      const tab = this.node.form.valueProcessingInfo.lastFormTab;\n      if (tab && tab !== this.activeTab) {\n        this.activeTab = tab;\n      }\n    }\n    if (this.node && this.node.question.renderingType === 'form') {\n      this.formErrorsService.announceErrorField$.subscribe(\n        (error) => {\n          this.scrollToControl(error);\n        });\n    }\n\n    if (this.node && this.node.question.renderingType === 'section') {\n      this.isCollapsed = !(this.node.question as QuestionGroup).isExpanded;\n    }\n\n    if (this.parentComponent) {\n      this.parentComponent.addChildComponent(this);\n    }\n  }\n\n  public addChildComponent(child: FormRendererComponent) {\n    this.childComponents.push(child);\n  }\n\n  public setUpRemoteSelect() {\n    if (this.node && this.node.question.extras &&\n    this.node.question.renderingType === 'remote-select') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      if (this.dataSource && this.node.question.dataSourceOptions) {\n        this.dataSource.dataSourceOptions = this.node.question.dataSourceOptions;\n      }\n    }\n  }\n\n  public setUpFileUpload() {\n    if (this.node && this.node.question.extras && this.node.question.renderingType === 'file') {\n      this.dataSource = this.dataSources.dataSources[this.node.question.dataSource];\n      // console.log('Key', this.node.question);\n      // console.log('Data source', this.dataSource);\n    }\n\n  }\n\n\n public clickTab(tabNumber) {\n    this.activeTab = tabNumber;\n  }\n\n  public loadPreviousTab() {\n    if (!this.isCurrentTabFirst()) {\n      this.clickTab(this.activeTab - 1);\n      document.body.scrollTop = 0;\n    }\n  }\n\n  public  isCurrentTabFirst() {\n    return this.activeTab === 0;\n  }\n\n  public  isCurrentTabLast() {\n    return this.activeTab === this.node.question['questions'].length - 1;\n  }\n\n  public  loadNextTab() {\n    if (!this.isCurrentTabLast()) {\n      this.clickTab(this.activeTab + 1);\n      document.body.scrollTop = 0;\n    }\n  }\n  public  tabSelected($event) {\n    this.activeTab = $event.index;\n    this.setPreviousTab();\n  }\n  public  setPreviousTab() {\n    if (this.node && this.node.form) {\n      this.node.form.valueProcessingInfo['lastFormTab'] = this.activeTab;\n    }\n\n  }\n public   hasErrors() {\n    return this.node.control.touched && !this.node.control.valid;\n  }\n\n  public  errors() {\n    return this.getErrors(this.node);\n  }\n\n\n  public scrollToControl(error: string) {\n\n    const tab: number = +error.split(',')[0];\n    const elSelector = error.split(',')[1] + 'id';\n\n    // the tab components\n    const tabComponent: FormRendererComponent = this.childComponents[tab];\n\n    this.clickTab(tab);\n\n    setTimeout(() => {\n\n      // expand all sections\n      tabComponent.childComponents.forEach((section) => {\n        section.isCollapsed = false;\n\n        setTimeout(() => {\n          const element: any = this.document.getElementById(elSelector);\n          if (element !== null && element.focus) {\n            element.focus();\n            element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n          }\n        }, 100);\n      });\n\n    }, 200);\n  }\n\n  public onDateChanged(node: LeafNode) {\n    // console.log('Node', node);\n    this.node = node;\n  }\n\n  public upload(event) {\n    // console.log('Event', event);\n    // console.log('Data', this.dataSource);\n  }\n\n  public toggleInformation(infoId) {\n    const e = document.getElementById(infoId);\n\n    if (e.style.display === 'block') {\n        e.style.display = 'none';\n     } else {\n        e.style.display = 'block';\n     }\n\n\n    console.log('InfoId', infoId);\n  }\n\n\n   private getErrors(node: NodeBase) {\n    const errors: any = node.control.errors;\n\n    if (errors) {\n\n      return this.validationFactory.errors(errors, node.question);\n    }\n\n    return [];\n  }\n}\n","import {\n    Component, OnInit, Input\n} from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { Form } from '../form-factory/form';\nimport { ValidationFactory } from '../form-factory/validation.factory';\nimport { NodeBase, LeafNode } from '../form-factory/form-node';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { FormErrorsService } from '../services/form-errors.service';\n\n@Component({\n    selector: 'error-renderer',\n    templateUrl: 'error-renderer.component.html',\n    styleUrls: ['./error-renderer.component.css']\n})\nexport class ErrorRendererComponent implements OnInit {\n\n  @Input() form: Form;\n\n  constructor(private validationFactory: ValidationFactory, private formErrorsService: FormErrorsService) {}\n\n  ngOnInit() {\n  }\n\n  showErrors() {\n    return !this.form.valid && this.form.showErrors;\n  }\n\n  get errorNodes() {\n\n    const invalidControls = this.form.markInvalidControls(this.form.rootNode, []);\n    return invalidControls;\n  }\n\n  getControlError(node: LeafNode) {\n      const errors: any = node.control.errors;\n\n      if (errors) {\n\n          return this.validationFactory.errors(errors, node.question);\n      }\n\n      return [];\n  }\n\n  announceErrorField(errorNode: LeafNode) {\n\n    const nodes: Array<NodeBase> = this.form.searchNodeByQuestionId(errorNode.path.substring(0, errorNode.path.indexOf('.')));\n\n    _.forEach(nodes, (node: NodeBase) => {\n\n      if (node.question.renderingType === 'page') {\n        const pageIndex: number = this.getPageIndex(node);\n        this.formErrorsService.announceErrorField(pageIndex + ',' + errorNode.question.key);\n      }\n    });\n  }\n\n  getPageIndex(node: NodeBase) {\n     const questionGroup: QuestionGroup = this.form.rootNode.question as QuestionGroup;\n     return questionGroup.questions.indexOf(node.question);\n  }\n}\n","import * as _ from 'lodash';\nimport { QuestionBase } from '../question-models/question-base';\n\nexport class HistoricalFieldHelperService {\n\n  public getDisplayTextFromOptions(question: QuestionBase , valueProperty: string, displayProperty: string): string {\n\n    let displayText = '';\n    const historicalValue = question.historicalDataValue;\n    if (_.isArray(historicalValue.value)) {\n      let valueConverted = 0;\n      _.each(historicalValue.value, (val) => {\n        _.each(question.options, (option) => {\n\n          if (option[valueProperty] === val) {\n            if (valueConverted === 0) {\n              displayText = displayText + option[displayProperty];\n            } else {\n              displayText = displayText + ', ' + option[displayProperty];\n            }\n            valueConverted++;\n          }\n        });\n      });\n\n    } else {\n      _.each(question.options, (option) => {\n        if (option[valueProperty] === historicalValue.value) {\n          displayText = option[displayProperty];\n        }\n      });\n    }\n    return displayText ;\n  }\n\n\n}\n","import { Directive, HostListener, Input, Output, EventEmitter } from '@angular/core';\n\nimport { HistoricalFieldHelperService } from '../helpers/historical-field-helper-service';\nimport * as _ from 'lodash';\nimport { NodeBase } from '../form-factory/form-node';\n\n@Directive({\n  selector: `[node]`\n})\n\nexport class HistoricalValueDirective {\n\n  @Input() _node: NodeBase;\n  @Output() _nodeChange = new EventEmitter<Object>();\n\n  historicalDisplay: string;\n\n  constructor(private historicalFieldHelper: HistoricalFieldHelperService) {\n  }\n\n  @HostListener('click', ['$event'])\n  setValue(e) {\n\n    if (e.target.name === 'historyValue') {\n\n      if (this._node && (!this.compareString(this._node.question.renderingType, 'page')\n        || !this.compareString(this._node.question.renderingType, 'section'))) {\n\n        this._node.control.setValue(this._node.question.historicalDataValue.value);\n\n        this._node.question['historicalValue'] = this._node.question.historicalDataValue;\n        e.stopPropagation();\n        this._nodeChange.emit(this._node);\n\n      }\n\n    }\n  }\n  private compareString(a, b) {\n    if (a === b) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  @Input()\n  set node(node: NodeBase) {\n\n    if (node) {\n      this._node = node;\n      if (this._node.question.enableHistoricalValue && !_.isUndefined(this._node.question.historicalDataValue)) {\n        const display: any = { text: '', _date: '' };\n        if ((this._node.question.renderingType === 'select'\n          || this._node.question.renderingType === 'multi-select'\n          || this._node.question.renderingType === 'single-select')) {\n\n          display.text = this.historicalFieldHelper.getDisplayTextFromOptions(\n            this._node.question,\n            'value',\n            'label'\n          );\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n\n        } else if (!_.isUndefined(this._node.question.historicalDataValue)) {\n\n          display.text = this._node.question.historicalDataValue.value;\n          display._date = this._node.question.historicalDataValue.valueDate;\n\n          this._node.question['historicalDisplay'] = display;\n        }\n      }\n    }\n  }\n\n}\n","export const STYLE = `\nng-select {\n  display: inline-block;\n  margin: 0;\n  position: relative;\n  vertical-align: middle;\n  width: 100%;\n}\nng-select * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nng-select > div {\n  border: 1px solid #ddd;\n  box-sizing: border-box;\n  cursor: pointer;\n  user-select: none;\n  width: 100%;\n}\nng-select > div.disabled {\n  background-color: #eee;\n  color: #aaa;\n  cursor: default;\n  pointer-events: none;\n}\nng-select > div > div.single {\n  display: flex;\n  height: 30px;\n  width: 100%;\n}\nng-select > div > div.single > div.value,\nng-select > div > div.single > div.placeholder {\n  flex: 1;\n  line-height: 30px;\n  overflow: hidden;\n  padding: 0 10px;\n  white-space: nowrap;\n}\nng-select > div > div.single > div.placeholder {\n  color: #a9a9a9;\n}\nng-select > div > div.single > div.clear,\nng-select > div > div.single > div.toggle {\n  color: #aaa;\n  line-height: 30px;\n  text-align: center;\n  width: 30px;\n}\nng-select > div > div.single > div.clear:hover,\nng-select > div > div.single > div.toggle:hover {\n  background-color: #ececec;\n}\nng-select > div > div.single > div.clear {\n  font-size: 18px;\n}\nng-select > div > div.single > div.toggle {\n  font-size: 14px;\n}\nng-select > div > div.multiple {\n  display: flex;\n  flex-flow: row wrap;\n  height: 100%;\n  min-height: 30px;\n  padding: 0 10px;\n  width: 100%;\n}\nng-select > div > div.multiple > div.option {\n  background-color: #eee;\n  border: 1px solid #aaa;\n  border-radius: 4px;\n  color: #333;\n  cursor: default;\n  display: inline-block;\n  flex-shrink: 0;\n  font-size: 14px;\n  line-height: 22px;\n  margin: 3px 5px 3px 0;\n  padding: 0 4px;\n}\nng-select > div > div.multiple > div.option span.deselect-option {\n  color: #aaa;\n  cursor: pointer;\n  font-size: 14px;\n  height: 20px;\n  line-height: 20px;\n}\nng-select > div > div.multiple > div.option span.deselect-option:hover {\n  color: #555;\n}\nng-select > div > div.multiple input {\n  background-color: transparent;\n  border: none;\n  height: 30px;\n  line-height: 30px;\n  padding: 0;\n}\nng-select > div > div.multiple input:focus {\n  outline: none;\n}\n`;\n","export class Option {\n\n    value: string;\n    label: string;\n\n    disabled: boolean;\n    highlighted: boolean;\n    selected: boolean;\n    shown: boolean;\n\n    constructor(value: string, label: string) {\n        this.value = value;\n        this.label = label;\n\n        this.disabled = false;\n        this.highlighted = false;\n        this.selected = false;\n        this.shown = true;\n    }\n\n    show() {\n        this.shown = true;\n    }\n\n    hide() {\n        this.shown = false;\n    }\n\n    disable() {\n        this.disabled = true;\n    }\n\n    enable() {\n        this.disabled = false;\n    }\n\n    undecoratedCopy() {\n        return {\n            label: this.label,\n            value: this.value\n        };\n    }\n}\n","export class Diacritics {\n\n    static DIACRITICS = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n\n    static strip(text: string): string {\n\n        const match = (a: string): string => {\n            return this.DIACRITICS[a] || a;\n        };\n        if (text) {\n            return text.replace(/[^\\u0000-\\u007E]/g, match);\n        } else {\n            return '';\n        }\n\n    }\n}\n\n","import { Option } from './option';\nimport { Diacritics } from './diacritics';\n\nexport class OptionList {\n    private _options: Array<Option>;\n\n    /* Consider using these for performance improvement. */\n    // private _selection: Array<Option>;\n    // private _filtered: Array<Option>;\n    // private _value: Array<string>;\n\n    private _highlightedOption: Option = null;\n    // v0 and v1 are assumed not to be undefined or null.\n    static equalValues(v0: Array<string>, v1: Array<string>): boolean {\n\n        if (v0.length !== v1.length) {\n            return false;\n        }\n\n        const a: Array<string> = v0.slice().sort();\n        const b: Array<string> = v1.slice().sort();\n\n        return a.every((v, i) => {\n            return v === b[i];\n        });\n    }\n\n\n    constructor(options: Array<any>) {\n\n        if (typeof options === 'undefined' || options === null) {\n            options = [];\n        }\n\n        this._options = options.map((option) => {\n            const o: Option = new Option(option.value, option.label);\n            if (option.disabled) {\n                o.disable();\n            }\n            return o;\n        });\n\n        this.highlight();\n    }\n\n    /** Options. **/\n\n    get options(): Array<Option> {\n        return this._options;\n    }\n\n    getOptionsByValue(value: string): Array<Option> {\n        return this.options.filter((option) => {\n            return option.value === value;\n        });\n    }\n\n    /** Value. **/\n\n    get value(): Array<string> {\n        return this.selection.map((selectedOption) => {\n            return selectedOption.value;\n        });\n    }\n\n    set value(v: Array<string>) {\n        v = typeof v === 'undefined' || v === null ? [] : v;\n\n        this.options.forEach((option) => {\n            option.selected = v.indexOf(option.value) > -1;\n        });\n    }\n\n    /** Selection. **/\n\n    get selection(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.selected;\n        });\n    }\n\n    select(option: Option, multiple: boolean) {\n        if (!multiple) {\n            this.clearSelection();\n        }\n        option.selected = true;\n    }\n\n    deselect(option: Option) {\n        option.selected = false;\n    }\n\n    clearSelection() {\n        this.options.forEach((option) => {\n            option.selected = false;\n        });\n    }\n\n    /** Filter. **/\n\n    get filtered(): Array<Option> {\n        return this.options.filter((option) => {\n            return option.shown;\n        });\n    }\n\n    filter(term: string) {\n\n        if (term.trim() === '') {\n            this.resetFilter();\n        } else {\n            this.options.forEach((option) => {\n                const l: string = Diacritics.strip(option.label).toUpperCase();\n                const t: string = Diacritics.strip(term).toUpperCase();\n                option.shown = l.indexOf(t) > -1;\n            });\n        }\n\n        this.highlight();\n    }\n\n    resetFilter() {\n        this.options.forEach((option) => {\n            option.shown = true;\n        });\n    }\n\n    /** Highlight. **/\n\n    get highlightedOption(): Option {\n        return this._highlightedOption;\n    }\n\n    highlight() {\n        const option: Option = this.hasShownSelected() ?\n            this.getFirstShownSelected() : this.getFirstShown();\n        this.highlightOption(option);\n    }\n\n    highlightOption(option: Option) {\n        this.clearHighlightedOption();\n\n        if (option !== null) {\n            option.highlighted = true;\n            this._highlightedOption = option;\n        }\n    }\n\n    highlightNextOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > -1 && index < shownOptions.length - 1) {\n            this.highlightOption(shownOptions[index + 1]);\n        }\n    }\n\n    highlightPreviousOption() {\n        const shownOptions = this.filtered;\n        const index = this.getHighlightedIndexFromList(shownOptions);\n\n        if (index > 0) {\n            this.highlightOption(shownOptions[index - 1]);\n        }\n    }\n\n    private clearHighlightedOption() {\n        if (this.highlightedOption !== null) {\n            this.highlightedOption.highlighted = false;\n            this._highlightedOption = null;\n        }\n    }\n\n    private getHighlightedIndexFromList(options: Array<Option>) {\n        for (let i = 0; i < options.length; i++) {\n            if (options[i].highlighted) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    getHighlightedIndex() {\n        return this.getHighlightedIndexFromList(this.filtered);\n    }\n\n    /** Util. **/\n\n    hasShown() {\n        return this.options.some((option) => {\n            return option.shown;\n        });\n    }\n\n    hasSelected() {\n        return this.options.some((option) => {\n            return option.selected;\n        });\n    }\n\n    hasShownSelected() {\n        return this.options.some((option) => {\n            return option.shown && option.selected;\n        });\n    }\n\n    private getFirstShown(): Option {\n        for (const option of this.options) {\n            if (option.shown) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n    private getFirstShownSelected(): Option {\n        for (const option of this.options) {\n            if (option.shown && option.selected) {\n                return option;\n            }\n        }\n        return null;\n    }\n\n\n}\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    EventEmitter,\r\n    ExistingProvider,\r\n    ViewChild,\r\n    ViewEncapsulation,\r\n    forwardRef\r\n} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor } from '@angular/forms';\r\nimport { STYLE } from './select.component.style';\r\nimport { SelectDropdownComponent } from './select-dropdown.component';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\nexport const SELECT_VALUE_ACCESSOR: ExistingProvider = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => SelectComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'ng-select',\r\n    templateUrl: './select.component.html',\r\n    styles: [STYLE],\r\n    providers: [SELECT_VALUE_ACCESSOR],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectComponent\r\n    implements AfterViewInit, ControlValueAccessor, OnChanges, OnInit {\r\n    /** Keys. **/\r\n\r\n    private KEYS: any = {\r\n        BACKSPACE: 8,\r\n        TAB: 9,\r\n        ENTER: 13,\r\n        ESC: 27,\r\n        SPACE: 32,\r\n        UP: 38,\r\n        DOWN: 40\r\n    };\r\n\r\n    @Input() options: Array<any>;\r\n\r\n    @Input() allowClear = false;\r\n    @Input() disabled = false;\r\n    @Input() highlightColor = '#2196f3';\r\n    @Input() highlightTextColor = '#fff';\r\n    @Input() multiple = false;\r\n    @Input() noFilter = 0;\r\n    @Input() notFoundMsg = 'No results found';\r\n    @Input() placeholder = '';\r\n\r\n    @Output() opened: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() closed: EventEmitter<null> = new EventEmitter<null>();\r\n    @Output() selected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() deselected: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() typed: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n\r\n    @ViewChild('selection') selectionSpan: any;\r\n    @ViewChild('dropdown') dropdown: SelectDropdownComponent;\r\n    @ViewChild('filterInput') filterInput: any;\r\n\r\n    private _value: Array<any> = [];\r\n    optionList: OptionList;\r\n\r\n    // Selection state variables.\r\n    hasSelected = false;\r\n\r\n    // View state variables.\r\n    filterEnabled = true;\r\n    filterInputWidth = 1;\r\n    hasFocus = false;\r\n    isBelow = true;\r\n    isDisabled = false;\r\n    isOpen = false;\r\n    placeholderView = '';\r\n\r\n    clearClicked = false;\r\n    selectContainerClicked = false;\r\n\r\n    // Width and position for the dropdown container.\r\n    width: number;\r\n    top: number;\r\n    left: number;\r\n\r\n    private onChange = (_: any) => { };\r\n    private onTouched = () => { };\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular lifecycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.placeholderView = this.placeholder;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateFilterWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('options')) {\r\n            this.updateOptionsList(changes['options'].isFirstChange());\r\n        }\r\n        if (changes.hasOwnProperty('noFilter')) {\r\n            const numOptions: number = this.optionList.options.length;\r\n            const minNumOptions: number = changes['noFilter'].currentValue;\r\n            this.filterEnabled = numOptions >= minNumOptions;\r\n        }\r\n    }\r\n\r\n    // Window.\r\n\r\n    onWindowClick() {\r\n        if (!this.selectContainerClicked) {\r\n            this.closeDropdown();\r\n        }\r\n        this.clearClicked = false;\r\n        this.selectContainerClicked = false;\r\n    }\r\n\r\n    onWindowResize() {\r\n        this.updateWidth();\r\n    }\r\n\r\n    // Select container.\r\n\r\n    onSelectContainerClick(event: any) {\r\n        this.selectContainerClicked = true;\r\n        if (!this.clearClicked) {\r\n            this.toggleDropdown();\r\n        }\r\n    }\r\n\r\n    onSelectContainerFocus() {\r\n        this.onTouched();\r\n    }\r\n\r\n    onSelectContainerKeydown(event: any) {\r\n        this.handleSelectContainerKeydown(event);\r\n    }\r\n\r\n    // Dropdown container.\r\n\r\n    onDropdownOptionClicked(option: Option) {\r\n        this.multiple ?\r\n            this.toggleSelectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    onDropdownClose(focus: any) {\r\n        this.closeDropdown(focus);\r\n    }\r\n\r\n    // Single filter input.\r\n\r\n    onSingleFilterClick() {\r\n        this.selectContainerClicked = true;\r\n    }\r\n\r\n    onSingleFilterInput(term: string) {\r\n        setTimeout(() => {\r\n            if (term.length > 2) {\r\n                this.typed.emit(term);\r\n            }\r\n        }, 500);\r\n        this.optionList.filter(term);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.handleSingleFilterKeydown(event);\r\n    }\r\n\r\n    // Multiple filter input.\r\n\r\n    onMultipleFilterInput(event: any) {\r\n        if (!this.isOpen) {\r\n            this.openDropdown();\r\n        }\r\n        this.updateFilterWidth();\r\n        setTimeout(() => {\r\n            this.optionList.filter(event.target.value);\r\n        });\r\n    }\r\n\r\n    onMultipleFilterKeydown(event: any) {\r\n        this.handleMultipleFilterKeydown(event);\r\n    }\r\n\r\n    // Single clear select.\r\n\r\n    onClearSelectionClick(event: any) {\r\n        this.clearClicked = true;\r\n        this.clearSelection();\r\n        this.closeDropdown(true);\r\n    }\r\n\r\n    // Multiple deselect option.\r\n\r\n    onDeselectOptionClick(option: Option) {\r\n        this.clearClicked = true;\r\n        this.deselectOption(option);\r\n    }\r\n\r\n    /** API. **/\r\n\r\n    // TODO fix issues with global click/key handler that closes the dropdown.\r\n    open() {\r\n        this.openDropdown();\r\n    }\r\n\r\n    close() {\r\n        this.closeDropdown();\r\n    }\r\n\r\n    clear() {\r\n        this.clearSelection();\r\n    }\r\n\r\n    select(value: string) {\r\n        this.optionList.getOptionsByValue(value).forEach((option) => {\r\n            this.selectOption(option);\r\n        });\r\n        this.valueChanged();\r\n    }\r\n\r\n    /** ControlValueAccessor interface methods. **/\r\n\r\n    writeValue(value: any) {\r\n        this.value = value;\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean) {\r\n        this.disabled = isDisabled;\r\n    }\r\n\r\n    /** Value. **/\r\n\r\n    get value(): any {\r\n        if (this._value.length === 0) {\r\n            return '';\r\n        } else {\r\n            return this.multiple ? this._value : this._value[0];\r\n        }\r\n    }\r\n\r\n    set value(v: any) {\r\n        if (typeof v === 'undefined' || v === null || v === '') {\r\n            v = [];\r\n        } else if (typeof v === 'string') {\r\n            v = [v];\r\n        } else if (!Array.isArray(v)) {\r\n            throw new TypeError('Value must be a string or an array.');\r\n        }\r\n\r\n        if (!OptionList.equalValues(v, this._value)) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    private valueChanged() {\r\n        this._value = this.optionList.value;\r\n\r\n        this.hasSelected = this._value.length > 0;\r\n        this.placeholderView = this.hasSelected ? '' : this.placeholder;\r\n        this.updateFilterWidth();\r\n\r\n        this.onChange(this.value);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private updateOptionsList(firstTime: boolean) {\r\n        let v: Array<string>;\r\n\r\n        if (!firstTime) {\r\n            v = this.optionList.value;\r\n        }\r\n\r\n        this.optionList = new OptionList(this.options);\r\n\r\n        if (!firstTime) {\r\n            this.optionList.value = v;\r\n            this.valueChanged();\r\n        }\r\n    }\r\n\r\n    /** Dropdown. **/\r\n\r\n    private toggleDropdown() {\r\n        if (!this.isDisabled) {\r\n            this.isOpen ? this.closeDropdown(true) : this.openDropdown();\r\n        }\r\n    }\r\n\r\n    private openDropdown() {\r\n        if (!this.isOpen) {\r\n            this.updateWidth();\r\n            this.updatePosition();\r\n            this.isOpen = true;\r\n            if (this.multiple && this.filterEnabled) {\r\n                this.filterInput.nativeElement.focus();\r\n            }\r\n            this.opened.emit(null);\r\n        }\r\n    }\r\n    /* tslint:disable */\r\n    private closeDropdown(focus: boolean = false) {\r\n        if (this.isOpen) {\r\n            this.clearFilterInput();\r\n            this.isOpen = false;\r\n            if (focus) {\r\n                this.focus();\r\n            }\r\n            this.closed.emit(null);\r\n        }\r\n    }\r\n    /* tslint:enable */\r\n    /** Select. **/\r\n\r\n    private selectOption(option: Option) {\r\n        if (!option.selected) {\r\n            this.optionList.select(option, this.multiple);\r\n            this.valueChanged();\r\n            this.selected.emit(option.undecoratedCopy());\r\n            // Is this not allready done when setting the value??\r\n            /*setTimeout(() => {\r\n                if (this.multiple) {\r\n                    this.updateFilterWidth();\r\n                }\r\n            });*/\r\n        }\r\n    }\r\n\r\n    private deselectOption(option: Option) {\r\n        if (option.selected) {\r\n            this.optionList.deselect(option);\r\n            this.valueChanged();\r\n            this.deselected.emit(option.undecoratedCopy());\r\n            setTimeout(() => {\r\n                if (this.multiple) {\r\n                    // this.updateFilterWidth();\r\n                    this.updatePosition();\r\n                    this.optionList.highlight();\r\n                    if (this.isOpen) {\r\n                        this.dropdown.moveHighlightedIntoView();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private clearSelection() {\r\n        const selection: Array<Option> = this.optionList.selection;\r\n        if (selection.length > 0) {\r\n            this.optionList.clearSelection();\r\n            this.valueChanged();\r\n\r\n            if (selection.length === 1) {\r\n                this.deselected.emit(selection[0].undecoratedCopy());\r\n            } else {\r\n                this.deselected.emit(selection.map((option) => {\r\n                    return option.undecoratedCopy();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n\r\n    private toggleSelectOption(option: Option) {\r\n        option.selected ?\r\n            this.deselectOption(option) : this.selectOption(option);\r\n    }\r\n\r\n    private selectHighlightedOption() {\r\n        const option: Option = this.optionList.highlightedOption;\r\n        if (option !== null) {\r\n            this.selectOption(option);\r\n            this.closeDropdown(true);\r\n        }\r\n    }\r\n\r\n    private deselectLast() {\r\n        const sel: Array<Option> = this.optionList.selection;\r\n\r\n        if (sel.length > 0) {\r\n            const option: Option = sel[sel.length - 1];\r\n            this.deselectOption(option);\r\n            this.setMultipleFilterInput(option.label + ' ');\r\n        }\r\n    }\r\n\r\n    /** Filter. **/\r\n\r\n    private clearFilterInput() {\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        } else {\r\n            this.dropdown.clearFilterInput();\r\n        }\r\n    }\r\n\r\n    private setMultipleFilterInput(value: string) {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = value;\r\n        }\r\n    }\r\n\r\n\r\n    private handleSelectContainerKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (this.isOpen) {\r\n            if (key === this.KEYS.ESC ||\r\n                (key === this.KEYS.UP && event.altKey)) {\r\n                this.closeDropdown(true);\r\n            } else if (key === this.KEYS.TAB) {\r\n                this.closeDropdown();\r\n            } else if (key === this.KEYS.ENTER) {\r\n                this.selectHighlightedOption();\r\n            } else if (key === this.KEYS.UP) {\r\n                this.optionList.highlightPreviousOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            } else if (key === this.KEYS.DOWN) {\r\n                this.optionList.highlightNextOption();\r\n                this.dropdown.moveHighlightedIntoView();\r\n                if (!this.filterEnabled) {\r\n                    event.preventDefault();\r\n                }\r\n            }\r\n        } else {\r\n            if (key === this.KEYS.ENTER || key === this.KEYS.SPACE ||\r\n                (key === this.KEYS.DOWN && event.altKey)) {\r\n\r\n                /* FIREFOX HACK:\r\n                 *\r\n                 * The setTimeout is added to prevent the enter keydown event\r\n                 * to be triggered for the filter input field, which causes\r\n                 * the dropdown to be closed again.\r\n                 */\r\n                setTimeout(() => { this.openDropdown(); });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private handleMultipleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.BACKSPACE) {\r\n            if (this.hasSelected && this.filterEnabled &&\r\n                this.filterInput.nativeElement.value === '') {\r\n                this.deselectLast();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleSingleFilterKeydown(event: any) {\r\n        const key = event.which;\r\n\r\n        if (key === this.KEYS.ESC || key === this.KEYS.TAB\r\n            || key === this.KEYS.UP || key === this.KEYS.DOWN\r\n            || key === this.KEYS.ENTER) {\r\n            this.handleSelectContainerKeydown(event);\r\n        }\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    focus() {\r\n        this.hasFocus = true;\r\n        if (this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        } else {\r\n            this.selectionSpan.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    blur() {\r\n        this.hasFocus = false;\r\n        this.selectionSpan.nativeElement.blur();\r\n    }\r\n\r\n    updateWidth() {\r\n        this.width = this.selectionSpan.nativeElement.offsetWidth;\r\n    }\r\n\r\n    updatePosition() {\r\n        const e = this.selectionSpan.nativeElement;\r\n        this.left = e.offsetLeft;\r\n        this.top = e.offsetTop + e.offsetHeight;\r\n    }\r\n\r\n    updateFilterWidth() {\r\n        if (typeof this.filterInput !== 'undefined') {\r\n            const value: string = this.filterInput.nativeElement.value;\r\n            this.filterInputWidth = value.length === 0 ?\r\n                1 + this.placeholderView.length * 10 : 1 + value.length * 10;\r\n        }\r\n    }\r\n}\r\n","export const STYLE = `select-dropdown {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown * {\n  box-sizing: border-box;\n  font-family: Sans-Serif;\n}\nselect-dropdown > div {\n  background-color: #fff;\n  border: 1px solid #ccc;\n  border-top: none;\n  box-sizing: border-box;\n  position: absolute;\n  z-index: 1;\n}\nselect-dropdown > div .filter {\n  padding: 3px;\n  width: 100%;\n}\nselect-dropdown > div .filter input {\n  border: 1px solid #eee;\n  box-sizing: border-box;\n  padding: 4px;\n  width: 100%;\n}\nselect-dropdown > div .options {\n  max-height: 200px;\n  overflow-y: auto;\n}\nselect-dropdown > div .options ul {\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\nselect-dropdown > div .options ul li {\n  padding: 4px 8px;\n  cursor: pointer;\n  user-select: none;\n}\nselect-dropdown .selected {\n  background-color: #e0e0e0;\n}\nselect-dropdown .selected.highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .highlighted {\n  background-color: #2196F3;\n  color: #fff;\n}\nselect-dropdown .disabled {\n  background-color: #fff;\n  color: #9e9e9e;\n  cursor: default;\n  pointer-events: none;\n}`;\n","import {\r\n    AfterViewInit,\r\n    Component,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnInit,\r\n    Output,\r\n    ViewChild,\r\n    ViewEncapsulation\r\n} from '@angular/core';\r\n\r\nimport { STYLE } from './select-dropdown.component.style';\r\nimport { Option } from './option';\r\nimport { OptionList } from './option-list';\r\n\r\n@Component({\r\n    selector: 'select-dropdown',\r\n    templateUrl: 'select-dropdown.component.html',\r\n    styles: [STYLE],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class SelectDropdownComponent\r\n    implements AfterViewInit, OnChanges, OnInit {\r\n\r\n    @Input() filterEnabled: boolean;\r\n    @Input() highlightColor: string;\r\n    @Input() highlightTextColor: string;\r\n    @Input() left: number;\r\n    @Input() multiple: boolean;\r\n    @Input() notFoundMsg: string;\r\n    @Input() optionList: OptionList;\r\n    @Input() top: number;\r\n    @Input() width: number;\r\n\r\n    @Output() close = new EventEmitter<boolean>();\r\n    @Output() optionClicked = new EventEmitter<Option>();\r\n    @Output() singleFilterClick = new EventEmitter<null>();\r\n    @Output() singleFilterInput = new EventEmitter<string>();\r\n    @Output() singleFilterKeydown = new EventEmitter<any>();\r\n\r\n    @ViewChild('filterInput') filterInput: any;\r\n    @ViewChild('optionsList') optionsList: any;\r\n\r\n    disabledColor = '#fff';\r\n    disabledTextColor = '9e9e9e';\r\n\r\n    /** Event handlers. **/\r\n\r\n    // Angular life cycle hooks.\r\n\r\n    ngOnInit() {\r\n        this.optionsReset();\r\n    }\r\n\r\n    ngOnChanges(changes: any) {\r\n        if (changes.hasOwnProperty('optionList')) {\r\n            this.optionsReset();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.moveHighlightedIntoView();\r\n        if (!this.multiple && this.filterEnabled) {\r\n            this.filterInput.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    // Filter input (single select).\r\n\r\n    onSingleFilterClick(event: any) {\r\n        this.singleFilterClick.emit(null);\r\n    }\r\n\r\n    onSingleFilterInput(event: any) {\r\n        this.singleFilterInput.emit(event.target.value);\r\n    }\r\n\r\n    onSingleFilterKeydown(event: any) {\r\n        this.singleFilterKeydown.emit(event);\r\n    }\r\n\r\n    // Options list.\r\n\r\n    onOptionsWheel(event: any) {\r\n        this.handleOptionsWheel(event);\r\n    }\r\n\r\n    onOptionMouseover(option: Option) {\r\n        this.optionList.highlightOption(option);\r\n    }\r\n\r\n    onOptionClick(option: Option) {\r\n        this.optionClicked.emit(option);\r\n    }\r\n\r\n    /** Initialization. **/\r\n\r\n    private optionsReset() {\r\n        this.optionList.resetFilter();\r\n        this.optionList.highlight();\r\n    }\r\n\r\n    /** View. **/\r\n\r\n    getOptionStyle(option: Option): any {\r\n        if (option.highlighted) {\r\n            return {\r\n                'background-color': this.highlightColor,\r\n                'color': this.highlightTextColor\r\n            };\r\n        } else {\r\n            return {};\r\n        }\r\n    }\r\n\r\n    clearFilterInput() {\r\n        if (this.filterEnabled) {\r\n            this.filterInput.nativeElement.value = '';\r\n        }\r\n    }\r\n\r\n    moveHighlightedIntoView() {\r\n\r\n        const list = this.optionsList.nativeElement;\r\n        const listHeight = list.offsetHeight;\r\n\r\n        const itemIndex = this.optionList.getHighlightedIndex();\r\n\r\n        if (itemIndex > -1) {\r\n            const item = list.children[0].children[itemIndex];\r\n            const itemHeight = item.offsetHeight;\r\n\r\n            const itemTop = itemIndex * itemHeight;\r\n            const itemBottom = itemTop + itemHeight;\r\n\r\n            const viewTop = list.scrollTop;\r\n            const viewBottom = viewTop + listHeight;\r\n\r\n            if (itemBottom > viewBottom) {\r\n                list.scrollTop = itemBottom - listHeight;\r\n            } else if (itemTop < viewTop) {\r\n                list.scrollTop = itemTop;\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleOptionsWheel(e: any) {\r\n        const div = this.optionsList.nativeElement;\r\n        const atTop = div.scrollTop === 0;\r\n        const atBottom = div.offsetHeight + div.scrollTop === div.scrollHeight;\r\n\r\n        if (atTop && e.deltaY < 0) {\r\n            e.preventDefault();\r\n        } else if (atBottom && e.deltaY > 0) {\r\n            e.preventDefault();\r\n        }\r\n    }\r\n}\r\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {SelectComponent} from './select.component';\nimport {SelectDropdownComponent} from './select-dropdown.component';\n\n@NgModule({\n    declarations: [\n        SelectComponent,\n        SelectDropdownComponent\n    ],\n    exports: [\n        SelectComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ]\n})\nexport class SelectModule {}\n","\nimport {\n    Pipe,\n    PipeTransform,\n    OnDestroy,\n    WrappedValue,\n    ChangeDetectorRef\n} from '@angular/core';\nimport { of } from 'rxjs';\n\nimport { Subscription } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { BehaviorSubject } from 'rxjs';\n\n\nimport { DomSanitizer} from '@angular/platform-browser';\n// import { FileUploadResourceService } from '../../etl-api/file-upload-resource.service';\n\n// Using similarity from AsyncPipe to avoid having to pipe |secure|async in HTML.\n// tslint:disable-next-line:use-pipe-transform-interface\n@Pipe({\n    name: 'secure',\n    pure: false\n})\nexport class SecurePipe implements PipeTransform, OnDestroy {\n    private _latestValue: any = null;\n    private _latestReturnedValue: any = null;\n    private _subscription: Subscription = null;\n    private _obj: Observable<any> = null;\n    private getfile;\n    private previousUrl: string;\n    private _result: BehaviorSubject<any> = new BehaviorSubject(null);\n    private result: Observable<any> = this._result.asObservable();\n    private _internalSubscription: Subscription = null;\n\n    constructor(\n        private _ref: ChangeDetectorRef,\n        private sanitizer: DomSanitizer\n    ) { }\n\n    ngOnDestroy(): void {\n        if (this._subscription) {\n            this._dispose();\n        }\n    }\n\n    transform(url: string, getfile): any {\n        this.getfile = getfile;\n        const obj = this.internalTransform(url);\n        return this.asyncTrasnform(obj);\n    }\n\n    private internalTransform(url: string): Observable<any> {\n        if (!url) {\n            return this.result;\n        }\n\n        if (this.previousUrl !== url) {\n            this.previousUrl = url;\n            this._internalSubscription = this.getfile(url)\n                .subscribe(m => {\n                    const sanitized = this.sanitizer.bypassSecurityTrustUrl(m);\n                    this._result.next(sanitized);\n                });\n        }\n\n        return this.result;\n    }\n\n    private asyncTrasnform(obj: Observable<any>): any {\n        if (!this._obj) {\n            if (obj) {\n                this._subscribe(obj);\n            }\n            this._latestReturnedValue = this._latestValue;\n            return this._latestValue;\n        }\n        if (obj !== this._obj) {\n            this._dispose();\n            return this.asyncTrasnform(obj);\n        }\n        if (this._latestValue === this._latestReturnedValue) {\n            return this._latestReturnedValue;\n        }\n        this._latestReturnedValue = this._latestValue;\n        return WrappedValue.wrap(this._latestValue);\n    }\n\n    private _subscribe(obj: Observable<any>) {\n        const _this = this;\n        this._obj = obj;\n\n        this._subscription = obj.subscribe({\n            next: function (value) {\n                return _this._updateLatestValue(obj, value);\n            }, error: (e: any) => { throw e; }\n        });\n    }\n\n    private _dispose() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        if (this._internalSubscription) {\n            this._internalSubscription.unsubscribe();\n        }\n\n        this._internalSubscription = null;\n        this._latestValue = null;\n        this._latestReturnedValue = null;\n        this._subscription = null;\n        this._obj = null;\n    }\n\n    private _updateLatestValue(async: any, value: Object) {\n        if (async === this._obj) {\n            this._latestValue = value;\n            this._ref.markForCheck();\n        }\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SecurePipe } from './components/file-upload/secure.pipe';\nimport { DataSources } from './form-entry/data-sources/data-sources';\n@NgModule({\n    declarations: [\n        SecurePipe\n    ],\n    imports: [ CommonModule ],\n    exports: [\n        SecurePipe\n    ],\n    providers: [\n        DataSources\n    ],\n})\nexport class SharedModule {}\n","import { Component, OnInit, Input, forwardRef, Renderer2 } from '@angular/core';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n@Component({\n    selector: 'remote-file-upload',\n    templateUrl: 'file-upload.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteFileUploadComponent),\n            multi: true,\n        }],\n    styles: [`img {\n        margin-left: auto;margin-right: auto;display: block;\n    }`\n    ]\n})\nexport class RemoteFileUploadComponent implements OnInit, ControlValueAccessor {\n    uploading = false;\n    innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n    upload(data) {\n        if (this.dataSource) {\n            this.uploading = true;\n            this.dataSource.fileUpload(data).subscribe((result) => {\n                // console.log('Result', result);\n                this.innerValue = result.image;\n                this.propagateChange(this.innerValue);\n                this.uploading = false;\n            }, (error) => {\n                this.uploading = false;\n            });\n        }\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value !== this.innerValue) {\n            this.innerValue = value;\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (_: any) => { };\n\n    public clearValue() {\n        this.innerValue = null;\n        this.propagateChange(this.innerValue);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { NgxFileUploaderModule } from 'ngx-file-uploader-ampath';\nimport { SharedModule } from '../../shared.module';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteFileUploadComponent } from './file-upload.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule, NgxFileUploaderModule, SharedModule],\n    exports: [RemoteFileUploadComponent],\n    declarations: [RemoteFileUploadComponent],\n    providers: [],\n})\nexport class RemoteFileUploadModule { }\n","/**\n * date-picker.component\n */\n\nimport { Component, OnInit, Output, EventEmitter, Input } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport * as _ from 'lodash';\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./date-picker.component.css');\n// const myDpTpl: string = require('./date-picker.component.html');\n// webpack2_\n\n@Component({\n  selector: 'date-picker',\n  templateUrl: './date-picker.component.html',\n  styleUrls: ['./date-picker.component.css'],\n})\n\nexport class DatePickerComponent implements OnInit {\n\n  public dayNames: Array<string>;\n\n  @Input() public initDate: any;\n  @Input() public locale = 'en';\n  @Input() public viewFormat = 'll';\n  @Input() public returnObject = 'js';\n  @Output() public onDatePickerCancel = new EventEmitter<boolean>();\n  @Output() public onSelectDate = new EventEmitter<any>();\n\n  public calendarDate: Moment;\n  public selectedDate: Moment;\n  public currentMonth: any ;\n  public today: Moment;\n  public currentYear: number;\n  public onDisplayMonths = false;\n  public onDisplayYears = false;\n  public displayYearsIndex = 0;\n  public displayYearRange: Array<number>;\n  public fullYearRange: Array<any>;\n  public monthsShort: Array<string> = moment.monthsShort();\n  public calendarDays: Array<Moment>;\n\n  constructor() {\n  }\n\n  public ngOnInit(): void {\n    this.initValue();\n    // default to current year range\n    _.each(this.fullYearRange, (v, i) => {\n      this.currentYear = this.calendarDate.clone().startOf('year').year();\n      if (v.indexOf(this.currentYear) !== -1) {\n        this.displayYearsIndex = i;\n      }\n    });\n    this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    this.generateCalendar();\n  }\n\n  public prev(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex--;\n      if (this.displayYearsIndex < 0) {\n        this.displayYearsIndex = 0;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex];\n    } else {\n      this.calendarDate = this.calendarDate.clone().subtract(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public showMonthSelection(): void {\n    this.onDisplayMonths = true;\n    this.onDisplayYears = false;\n  }\n\n  public showYearSelection(): void {\n    this.onDisplayYears = true;\n    this.onDisplayMonths = false;\n  }\n\n  public next(): void {\n    if (this.onDisplayYears) {\n      this.displayYearsIndex++;\n      if (this.displayYearsIndex >= this.fullYearRange.length) {\n        this.displayYearsIndex = this.fullYearRange.length - 1;\n      }\n      this.displayYearRange = this.fullYearRange[this.displayYearsIndex++];\n    } else {\n      this.calendarDate = this.calendarDate.clone().add(1, 'M');\n    }\n    this.generateCalendar();\n  }\n\n  public selectDay(day: Moment): void {\n    const daysDifference = day.diff(this.calendarDate.clone().startOf('date'), 'days');\n    day = this.calendarDate.clone().add(daysDifference, 'd');\n    const selectedDay = this.parseToReturnObjectType(day);\n    this.onSelectDate.emit(selectedDay);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public selectMonth(month: string) {\n    this.calendarDate = this.calendarDate.clone().month(month);\n    this.onDisplayMonths = false;\n    this.generateCalendar();\n  }\n\n  public selectYear(year: number) {\n    this.calendarDate = this.calendarDate.clone().year(year);\n    this.onDisplayYears = false;\n    this.generateCalendar();\n  }\n\n  public selectToday(): void {\n    const today = this.parseToReturnObjectType(moment());\n    this.onSelectDate.emit(today);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public clearPickDate(): void {\n    this.onSelectDate.emit(null);\n    this.cancelDatePicker();\n    return;\n  }\n\n  public cancelDatePicker(): void {\n    this.onDatePickerCancel.emit(false);\n    return;\n  }\n\n  protected generateYears(): void {\n    const currentYear = moment().year();\n    const startYr = this.calendarDate.clone().subtract(100, 'y').year();\n    // const endYr = this.calendarDate.clone().add(10, 'y').year();\n    const years = [];\n    for (let year = startYr; year <= currentYear; year++) {\n      years.push(year);\n    }\n\n    this.fullYearRange = _.chunk(years, 14);\n  }\n\n  protected initValue() {\n\n    // set moment locale (default is en)\n    moment.locale(this.locale);\n    // set today value\n    this.today = moment().startOf('date');\n    this.currentMonth = this.monthsShort[moment().month()];\n    this.currentYear = moment().year();\n\n    // set week days name array\n    this.dayNames = moment.weekdaysShort(true);\n\n    // check if the input initDate has value\n    if (this.initDate) {\n      this.calendarDate = this.returnObject === 'string' ? moment(this.initDate, this.viewFormat) :\n        moment(this.initDate);\n      this.selectedDate = this.calendarDate.clone().startOf('date');\n    } else {\n      this.calendarDate = moment();\n    }\n    this.generateYears();\n  }\n\n  protected generateCalendar(): void {\n    this.calendarDays = [];\n    const start = 0 - (this.calendarDate.clone().startOf('month').day() +\n     (7 - moment.localeData().firstDayOfWeek())) % 7;\n    const end = 41 + start; // iterator ending point\n\n    for (let i = start; i <= end; i += 1) {\n      const day = this.calendarDate.clone().startOf('month').add(i, 'days');\n      this.calendarDays.push(day);\n    }\n  }\n\n  protected parseToReturnObjectType(day: Moment): any {\n    switch (this.returnObject) {\n      case 'js':\n        return day.toDate();\n\n      case 'string':\n        return day.format(this.viewFormat);\n\n      case 'moment':\n        return day;\n\n      case 'json':\n        return day.toJSON();\n\n      case 'array':\n        return day.toArray();\n\n      case 'iso':\n        return day.toISOString();\n\n      case 'object':\n        return day.toObject();\n\n      default:\n        return day;\n    }\n  }\n}\n","/**\n * time-picker.component\n */\n\nimport { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\nimport { Moment } from 'moment/moment';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./time-picker.component.css');\n// const myDpTpl: string = require('./time-picker.component.html');\n// webpack2_\n\n@Component({\n    selector: 'time-picker',\n    templateUrl: './time-picker.component.html',\n    styleUrls: ['./time-picker.component.css'],\n})\n\nexport class TimePickerComponent implements OnInit {\n\n    @Input() initTime: any;\n    @Input() showSecond = true;\n    @Input() viewFormat = 'hh:mm A';\n    @Input() use12Hour = false;\n    @Input() returnObject = 'js';\n    @Output() onSelectTime = new EventEmitter<any>();\n    @Output() onTimePickerCancel = new EventEmitter<boolean>();\n    hourFormat = 'HH';\n    public time: Moment;\n\n    constructor() {\n    }\n\n    ngOnInit(): void {\n        if (this.use12Hour) {\n            this.hourFormat = 'hh';\n        }\n        this.time = this.initTime ? moment(this.initTime, this.viewFormat) : moment();\n\n        // check if the input initDate has value\n        if (this.initTime) {\n            this.time = this.returnObject === 'string' ? moment(this.initTime, this.viewFormat) :\n                moment(this.initTime);\n        } else {\n            this.time = moment();\n        }\n    }\n\n    increaseHour(): void {\n        this.time = this.time.clone().add(1, 'h');\n    }\n\n    decreaseHour(): void {\n        this.time = this.time.clone().subtract(1, 'h');\n    }\n\n    increaseMinute() {\n        this.time = this.time.clone().add(1, 'm');\n    }\n\n    decreaseMinute() {\n        this.time = this.time.clone().subtract(1, 'm');\n    }\n\n    increaseSecond(): void {\n        this.time = this.time.clone().add(1, 's');\n    }\n\n    decreaseSecond(): void {\n        this.time = this.time.clone().subtract(1, 's');\n    }\n\n    selectTime(): void {\n        const selectTime = this.parseToReturnObjectType(this.time);\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    selectNow(): void {\n        const selectTime = this.parseToReturnObjectType(moment());\n        this.onSelectTime.emit(selectTime);\n        this.cancelTimePicker();\n        return;\n    }\n\n    clearTime(): void {\n        this.onSelectTime.emit(null);\n        this.cancelTimePicker();\n        return;\n    }\n\n    cancelTimePicker(): void {\n        this.onTimePickerCancel.emit(false);\n        return;\n    }\n\n    protected parseToReturnObjectType(time: Moment): any {\n        switch (this.returnObject) {\n            case 'js':\n                return time.toDate();\n\n            case 'string':\n                return time.format(this.viewFormat);\n\n            case 'moment':\n                return time;\n\n            case 'json':\n                return time.toJSON();\n\n            case 'array':\n                return time.toArray();\n\n            case 'iso':\n                return time.toISOString();\n\n            case 'object':\n                return time.toObject();\n\n            default:\n                return time;\n        }\n    }\n\n}\n","/**\n * modal.component\n */\n\nimport {\n    Component, Output, OnInit, EventEmitter,\n    ChangeDetectionStrategy\n} from '@angular/core';\n\n// webpack1_\ndeclare let require: any;\n// const myDpStyles: string = require('./modal.component.css');\n// const myDpTpl: string = require('./modal.component.html');\n// webpack2_\n\n@Component({\n    selector: 'picker-modal',\n    templateUrl: './modal.component.html',\n    styleUrls: ['./modal.component.css'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n    animations: [\n    ],\n})\n\nexport class ModalComponent implements OnInit {\n\n    @Output() onOverlayClick = new EventEmitter<boolean>();\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    closeModal() {\n        this.onOverlayClick.emit(false);\n    }\n}\n","/**\n * moment.pipe\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Moment } from 'moment/moment';\n\n@Pipe({name: 'moment'})\n\nexport class MomentPipe implements PipeTransform {\n    transform(moment: Moment, format?: string): string {\n        return format ? moment.format(format) : moment.format('MMM DD, YYYY');\n    }\n}\n","import { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment_ from 'moment';\n\nconst Moment = moment_;\n\n@Component({\n    selector: 'date-time-picker',\n    templateUrl: './date-time-picker.component.html',\n    styleUrls: ['./date-time-picker.component.css'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => DateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class DateTimePickerComponent implements OnInit, ControlValueAccessor {\n    @Input() modelValue: any;\n    @Input() showDate = true;\n    @Input() showTime = false;\n    @Input() showWeeks = false;\n    @Input() weeks: number[] = [2, 4, 6, 8, 12, 16, 24];\n    @Output() onDateChange = new EventEmitter<any>();\n    public showDatePicker = false;\n    public showTimePicker = false;\n    onChange: any = () => { };\n    onTouched: any = () => { };\n\n    constructor() {\n    }\n\n    ngOnInit() { }\n\n    weeksSelected(count) {\n        const now = new Date();\n        const nextDate = now.setDate(now.getDate() + count * 7);\n        this.value = Moment(nextDate).format();\n    }\n    setDate(date: any): void {\n        if (date && date !== '') {\n            this.value = Moment(date).format();\n        } else {\n            this.value = date;\n        }\n\n    }\n\n    setTime(time: any): void {\n        if (time && time !== '') {\n            this.value = Moment(time).format();\n        } else {\n            this.value = time;\n        }\n        return;\n    }\n\n    toggleDatePicker(status: boolean): void {\n      this.showDatePicker = status;\n      /*setTimeout(function() {\n        let _body = document.getElementById('content-wrapper').getBoundingClientRect(),\n          elem = document.getElementById('section-modal-main');\n        if (elem) {\n          let elemBox = elem.getBoundingClientRect();\n          if (elemBox.bottom > _body.bottom) {\n            elem.style.bottom = '36px';\n          }\n        }\n      }, 0);*/\n      return;\n    }\n\n    toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n    get value() {\n        return this.modelValue;\n    }\n\n    set value(val) {\n        this.modelValue = val;\n        this.onDateChange.emit(val);\n        this.onChange(val);\n        this.onTouched();\n    }\n\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n\n    writeValue(value) {\n        if (value instanceof Date) {\n            this.value = Moment(value).format();\n        } else {\n            this.value = value;\n        }\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatePickerComponent } from './date-picker/date-picker.component';\nimport { TimePickerComponent } from './time-picker/time-picker.component';\nimport { ModalComponent } from './picker-modal/modal.component';\nimport { MomentPipe } from './pipes/moment.pipe';\nimport { DateTimePickerComponent } from './date-time-picker.component';\n\n@NgModule({\n    imports: [CommonModule, FormsModule],\n    declarations: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    exports: [\n        DatePickerComponent,\n        TimePickerComponent,\n        ModalComponent,\n        MomentPipe,\n        DateTimePickerComponent\n    ],\n    providers: []\n})\nexport class DateTimePickerModule {\n}\n","import { Moment } from 'moment/moment';\n\nimport { Component, OnInit, Input, forwardRef, EventEmitter, Output } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR, FormControl } from '@angular/forms';\nimport { DateAdapter, MAT_DATE_FORMATS } from '@angular/material/core';\nimport { MomentDateAdapter } from '@angular/material-moment-adapter';\nimport * as moment_ from 'moment';\nconst moment = moment_;\n\nexport const MY_FORMATS = {\n    parse: {\n        dateInput: 'LL',\n    },\n    display: {\n        dateInput: 'LL',\n        monthYearLabel: 'MMM YYYY',\n        dateA11yLabel: 'LL',\n        monthYearA11yLabel: 'MMMM YYYY',\n    },\n};\n\n@Component({\n    selector: 'ngx-date-time-picker',\n    templateUrl: './ngx-date-time-picker.component.html',\n    styleUrls: ['./ngx-date-time-picker.component.css'],\n    providers: [\n        { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n        { provide: DateAdapter, useClass: MomentDateAdapter },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxDateTimePickerComponent),\n            multi: true\n        }\n    ]\n})\nexport class NgxDateTimePickerComponent implements OnInit, ControlValueAccessor {\n\n    // public date = new FormControl(moment());\n    public selectedTime = moment().format();\n    public selectedDate = moment().format();\n    public loadInitial = false;\n    public value;\n    public showTimePicker = false;\n    @Input() weeks: number[] = [0, 2, 4, 6, 8, 12, 16, 24];\n    @Input() modelValue: any;\n    @Input() showTime = false;\n    @Input() showWeeks = true;\n    @Output() onDateChange = new EventEmitter<any>();\n    public onChange: any = () => { };\n    public onTouched: any = () => { };\n    public ngOnInit() {\n\n    }\n\n\n    public writeValue(value) {\n        this.value = value;\n    }\n\n    public registerOnChange(fn) {\n        this.onChange = fn;\n    }\n\n    public registerOnTouched(fn) {\n\n    }\n\n    public onTimeSelect($event) {\n        const setDate = moment(this.selectedDate);\n        const setTime = $event;\n        this.setDateTime(setDate, setTime);\n    }\n\n    public onDateSelect($event) {\n\n        const setDate = moment($event.value);\n        const setTime = this.selectedTime;\n        const dateString = this.setDateTime(setDate, setTime);\n\n        const selectedDate = $event.value;\n        this.value = dateString;\n\n    }\n\n    public toggleTimePicker(status: boolean): void {\n        this.showTimePicker = status;\n        return;\n    }\n\n\n    public setCurrentTime() {\n\n        const setDate = moment(this.selectedDate);\n        const currentTime = moment().format('HH:mm:ss');\n        this.setDateTime(setDate, currentTime);\n    }\n\n    public weekSelect($event) {\n        const dateToUse = moment().format();\n        const nextWeekDate = moment(dateToUse).add($event.value, 'weeks');\n        const nextWeekTime = dateToUse;\n        this.setDateTime(nextWeekDate, nextWeekTime);\n    }\n\n    public selectionChange($event) {\n        console.log('Week selected', $event);\n    }\n\n\n    public getWeekPickerCssClass() {\n        if (this.showTime) {\n            return 'col-sm-2 form-group';\n        }\n        return 'col-sm-3 form-group';\n    }\n\n    public getDatePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n\n        if (this.showTime === true) {\n            return 'col-sm-8 form-group';\n        }\n        return 'col-sm-12 form-group';\n    }\n\n    public getTimePickerCssClass() {\n        if (this.showTime && this.showWeeks) {\n            return 'col-sm-5 form-group';\n        }\n\n        if (this.showWeeks === true) {\n            return 'col-sm-9 form-group';\n        }\n        return 'col-sm-4 form-group';\n    }\n\n    public setDateTime(setDate, setTime) {\n        const newDate = moment(setDate).format('DD-MM-YYYY');\n        let newTime;\n        if (this.showTime) {\n            newTime = moment(setTime).format('HH:mm:ss');\n        } else {\n            newTime = '00:00:00';\n        }\n        const newDateTime = moment(newDate + '' + newTime, 'DD-MM-YYYY HH:mm:ss');\n        const dateTimeString = moment(newDateTime).format();\n        this.selectedDate = dateTimeString;\n        this.selectedTime = dateTimeString;\n        this.value = dateTimeString;\n        this.onChange(this.value);\n\n        return dateTimeString;\n\n\n    }\n}\n","/**\n * date-time-picker.module\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule , ReactiveFormsModule } from '@angular/forms';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatNativeDateModule , MatInputModule } from '@angular/material';\nimport { NgxDateTimePickerComponent } from './ngx-date-time-picker.component';\n// import { AmazingTimePickerModule } from 'amazing-time-picker';\nimport { MatSelectModule } from '@angular/material/select';\nimport { DateTimePickerModule } from '../date-time-picker/date-time-picker.module';\n\n\n\n@NgModule({\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        DateTimePickerModule,\n        // AmazingTimePickerModule,\n        MatSelectModule\n    ],\n    declarations: [\n        NgxDateTimePickerComponent\n    ],\n    exports: [\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatNativeDateModule,\n        MatInputModule,\n        NgxDateTimePickerComponent\n    ],\n    providers: [\n    ]\n})\nexport class NgxDateTimePickerModule {\n}\n","\nimport { SelectOption } from './interfaces/select-option';\nexport class Option {\n    label: string;\n    value: any;\n    constructor(options: SelectOption) {\n        this.label = options.label;\n        this.value = options.value;\n    }\n}\n","import {\n  Component, Input, forwardRef, OnInit, OnChanges\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { Option } from '../form-entry/question-models/select-option';\n\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\n\n\n@Component({\n  selector: 'afe-ng-select',\n  template: `<ng-select\n                   (searchInputText)=\"getChangingText($event)\"\n                    (ngModelChange)=\"onValueChange($event)\"\n                    [options]=\"question_options\"\n                    [multiple]=\"multiple\" >\n            </ng-select>\n  `,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => AfeNgSelectComponent),\n      multi: true\n    }]\n})\nexport class AfeNgSelectComponent implements ControlValueAccessor, OnInit, OnChanges {\n  subject: BehaviorSubject<Option[]>;\n  subjectOption: BehaviorSubject<Option>;\n  @Input() dataSource: DataSource;\n  @Input() multiple: boolean;\n  @Input() extras: any;\n  question_options: any = [];\n  selected_question_option: any;\n  errors: any = [];\n  propagateChange = (_: any) => { };\n\n  getChangingText(event) {\n    // console.log(event);\n    this.getData(event).subscribe((options) => {\n      this.question_options = options;\n    });\n  }\n\n  writeValue(obj: any): void {\n\n  }\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n\n  }\n\n  registerOnTouched(fn: any): void { }\n\n  ngOnChanges(changes: any) { }\n\n  ngOnInit() {\n    if (this.extras) {\n      if (this.extras.originalValue) {\n        this.resolveSelectedOption(this.extras.originalValue).subscribe((option) => {\n          this.selected_question_option = option;\n        });\n      }\n\n    }\n\n  }\n\n  getData(searchText: string): Observable<Option[]> {\n\n    this.subject = new BehaviorSubject<Option[]>([]);\n\n    const OptionsObservable = this.dataSource.searchOptions(searchText);\n\n    OptionsObservable.subscribe(\n      (options) => {\n        // console.log('options', options);\n        const mappedOptions: Option[] = new Array<Option>();\n\n        for (let i = 0; i < options.length; i++) {\n          mappedOptions.push(new Option(options[i]));\n        }\n        this.subject.next(mappedOptions);\n      },\n      (error) => {\n        this.subject.error(error);\n      }\n    );\n\n    return this.subject.asObservable();\n  }\n\n  onValueChange(event) { }\n  resolveSelectedOption(value: any): Observable<Option> {\n\n    this.subjectOption = new BehaviorSubject<Option>(null);\n    const OptionObservable = this.dataSource.resolveSelectedValue(value);\n\n    OptionObservable.subscribe(\n      (option) => {\n        // console.log('option', option);\n        this.subjectOption.next(option);\n      },\n      (error) => {\n        this.subjectOption.error(error);\n      }\n    );\n\n    return this.subjectOption.asObservable();\n  }\n\n  resetOptions() {\n    this.subject.next(new Array<Option>());\n\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\n@Injectable()\nexport class FormSchemaCompiler {\n  constructor() {\n\n  }\n\n  public compileFormSchema(formSchema: Object, referencedComponents: Array<any>): Object {\n    // get all referenced forms\n    const refForms: Object = this.getReferencedForms(formSchema, referencedComponents);\n    if (_.isEmpty(refForms)) { return formSchema; }\n\n    // get all place-holders from the form schema\n    const placeHolders = this.getAllPlaceholderObjects(formSchema);\n    if (_.isEmpty(placeHolders)) { return formSchema; }\n\n    // replace all placeHolders\n    this.replaceAllPlaceholdersWithActualObjects(refForms, placeHolders);\n    return formSchema;\n  }\n\n\n  private findSchemaByName(schemaArray: Array<any>, nameOfSchema: string): Object {\n    if (_.isEmpty(schemaArray) || _.isEmpty(nameOfSchema)) { return; }\n    let foundSchema: any = {};\n    _.each(schemaArray, (schema: any) => {\n      if (schema.name === nameOfSchema) {\n        foundSchema = schema;\n      }\n    });\n    return foundSchema;\n  }\n\n  private getPageInSchemaByLabel(schema: any, pageLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel)) { return; }\n    let foundPage: Object = {};\n    _.each(schema.pages, (page) => {\n      if (page.label === pageLabel) {\n        foundPage = page;\n      }\n    }\n    );\n    return foundPage;\n  }\n\n  private getSectionInSchemaByPageLabelBySectionLabel\n    (schema: Object, pageLabel: string, sectionLabel: string): Object {\n    if (_.isEmpty(schema) || _.isEmpty(pageLabel) || _.isEmpty(sectionLabel)) { return; }\n    const foundPage: any = this.getPageInSchemaByLabel(schema, pageLabel);\n    if (_.isEmpty(foundPage)) { return; }\n    let foundSection: Object = {};\n    _.each(foundPage.sections, (section) => {\n      if (section.label === sectionLabel) {\n        foundSection = section;\n      }\n    }\n    );\n    return foundSection;\n  }\n\n  private getQuestionByIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    if (Array.isArray(schema)) {\n      let question: Array<any>;\n      for (let i = 0; i < schema.length; i++) {\n        if (!_.isEmpty(schema[i])) {\n          question = this.getQuestionByIdInSchema(schema[i], questionId);\n        }\n        if (!_.isEmpty(question)) {\n          break;\n        }\n      }\n      return question;\n    } else if (typeof schema === 'object') {\n      if (this.isQuestionObjectWithId(schema, questionId)) {\n        return schema;\n      } else if (this.isSchemaSubObjectExpandable(schema)) {\n        const toExpand = (schema.pages || schema.sections || schema.questions);\n        return this.getQuestionByIdInSchema(toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  private getQuestionsArrayByQuestionIdInSchema(schema: any, questionId: string): Array<any> {\n    if (_.isEmpty(schema) || _.isEmpty(questionId)) { return; }\n    return this.getQuestionsArrayByQuestionId(schema, schema, questionId);\n  }\n\n\n  private getQuestionsArrayByQuestionId(parent: any, object: any, questionId: string): Array<any> {\n    if (Array.isArray(object)) {\n      let returnedValue: Array<any>;\n      for (let i = 0; i < object.length; i++) {\n        if (!_.isEmpty(object[i])) {\n          returnedValue = this.getQuestionsArrayByQuestionId(object, object[i], questionId);\n        }\n        if (!_.isEmpty(returnedValue)) {\n          break;\n        }\n      }\n\n      return returnedValue;\n    } else if (typeof object === 'object') {\n      if (this.isQuestionObjectWithId(object, questionId)) {\n        return parent;\n      } else if (this.isSchemaSubObjectExpandable(object)) {\n        const toExpand = (object.pages || object.sections || object.questions);\n        return this.getQuestionsArrayByQuestionId(toExpand, toExpand, questionId);\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  // object is page or section or question\n  private isSchemaSubObjectExpandable(object: Object): Boolean {\n    if (typeof object === 'object') {\n      const objectKeys = Object.keys(object);\n      if (_.includes(objectKeys, 'pages') ||\n        _.includes(objectKeys, 'sections') ||\n        _.includes(objectKeys, 'questions')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  private isQuestionObjectWithId(object: Object, id: any): Boolean {\n    return object['id'] === id;\n\n  }\n\n  private getAllPlaceholderObjects(schema: Object): Array<any> {\n    const referencedObjects: Array<any> = [];\n    this.extractPlaceholderObjects(schema, referencedObjects);\n    return referencedObjects;\n  }\n\n  private extractPlaceholderObjects(subSchema: any, objectsArray: Array<Object>): void {\n    if (_.isEmpty(subSchema)) { return; }\n    if (Array.isArray(subSchema)) {\n      for (let i = 0; i < subSchema.length; i++) {\n        if (!_.isEmpty(subSchema[i])) {\n          this.extractPlaceholderObjects(subSchema[i], objectsArray);\n        }\n      }\n    } else if (typeof subSchema === 'object') {\n      if (!_.isEmpty(subSchema.reference)) {\n        objectsArray.push(subSchema);\n      } else if (this.isSchemaSubObjectExpandable(subSchema)) {\n        const toExpand = (subSchema.pages || subSchema.sections || subSchema.questions);\n        this.extractPlaceholderObjects(toExpand, objectsArray);\n      }\n    }\n  }\n\n  private fillPlaceholderObject(placeHolderObject: Object, referenceObject: Object): Object {\n    for (const member in referenceObject) {\n      if (_.isEmpty(placeHolderObject[member])) {\n        placeHolderObject[member] = referenceObject[member];\n      }\n    }\n    return placeHolderObject;\n  }\n\n  private replaceAllPlaceholdersWithActualObjects\n    (keyValReferencedForms: Object, placeHoldersArray: Array<any>): Array<any> {\n    _.each(placeHoldersArray, (placeHolder) => {\n      const referencedObject: Object =\n        this.getReferencedObject(placeHolder.reference, keyValReferencedForms);\n\n      if (_.isEmpty(referencedObject)) {\n        console.error('Form compile: Error finding referenced object', placeHolder.reference);\n      } else {\n        placeHolder = this.fillPlaceholderObject(placeHolder, referencedObject);\n        placeHolder = this.removeExcludedQuestionsFromPlaceholder(placeHolder);\n        delete placeHolder['reference'];\n      }\n    });\n    return placeHoldersArray;\n  }\n\n  private removeObjectFromArray(array: Array<any>, object: Object): void {\n    const indexOfObject = array.indexOf(object);\n    if (indexOfObject === -1) { return; }\n\n    array.splice(indexOfObject, 1);\n  }\n\n  private removeExcludedQuestionsFromPlaceholder(placeHolder: any): Object {\n    if (Array.isArray(placeHolder.reference.excludeQuestions)) {\n      _.each(placeHolder.reference.excludeQuestions, (excludedQuestionId) => {\n        const questionsArray: Array<any> = this.getQuestionsArrayByQuestionIdInSchema(\n          placeHolder, excludedQuestionId);\n\n        if (!Array.isArray(questionsArray)) { return; }\n        const question = this.getQuestionByIdInSchema(questionsArray, excludedQuestionId);\n\n        this.removeObjectFromArray(questionsArray, question);\n      });\n    }\n    return placeHolder;\n  }\n\n  private getReferencedObject(referenceData: any, keyValReferencedForms: Object): Object {\n    if (_.isEmpty(referenceData.form)) {\n      console.error('Form compile: reference missing form attribute', referenceData);\n      return;\n    }\n    if (_.isEmpty(keyValReferencedForms[referenceData.form])) {\n      console.error('Form compile: referenced form alias not found', referenceData);\n      return;\n    }\n    if (!_.isEmpty(referenceData.questionId)) {\n      return this.getQuestionByIdInSchema(\n        keyValReferencedForms[referenceData.form],\n        referenceData.questionId);\n    }\n\n    if (!_.isEmpty(referenceData.page) && !_.isEmpty(referenceData.section)) {\n      return this.getSectionInSchemaByPageLabelBySectionLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page,\n        referenceData.section\n      );\n    }\n    if (!_.isEmpty(referenceData.page)) {\n      return this.getPageInSchemaByLabel(\n        keyValReferencedForms[referenceData.form],\n        referenceData.page\n      );\n    }\n    console.error('Form compile: Unsupported reference type', referenceData.reference);\n  }\n\n  private getReferencedForms(formSchema: any, formSchemasLookupArray: Array<any>): Object {\n    const referencedForms: Array<any> = formSchema.referencedForms;\n\n    if (_.isEmpty(referencedForms)) { return; }\n\n    const keyValReferencedForms: Object = {};\n\n    _.each(referencedForms, (reference: any) => {\n      keyValReferencedForms[reference.alias] =\n        this.findSchemaByName(formSchemasLookupArray, reference.formName);\n    });\n    return keyValReferencedForms;\n  }\n}\n","import { QuestionBase } from './question-base';\nimport { TextQuestionOptions } from './interfaces/text-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextInputQuestion extends QuestionBase {\n\n    placeholder: string;\n    constructor(options: TextQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { TextInputQuestion } from './text-input-question';\nimport { TextAreaQuestionOptions } from './interfaces/text-area-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TextAreaInputQuestion extends TextInputQuestion {\n    isExpanded: boolean;\n    rows: number;\n\n    constructor(options: TextAreaQuestionOptions) {\n\n        super(options);\n        this.placeholder = options.placeholder || '';\n        this.isExpanded = options.isExpanded || false;\n        this.rows = options.rows || 18;\n        this.renderingType = 'textarea';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { SelectQuestionOptions } from './interfaces/select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class SelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    dataSource?: any;\n\n    constructor(options: SelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n        this.dataSource = options.dataSource || '';\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { UiSelectQuestionOptions } from './interfaces/ui-select-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class UiSelectQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n    searchFunction: Function;\n    resolveFunction: Function;\n    constructor(options: UiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'ui-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { DateQuestionOptions } from './interfaces/date-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class DateQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    constructor(options: DateQuestionOptions) {\n        super(options);\n        this.renderingType = 'date';\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { SelectQuestion } from './select-question';\nimport { MultiSelectQuestionOptions } from './interfaces/multi-select-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class MultiSelectQuestion extends SelectQuestion {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: MultiSelectQuestionOptions) {\n        super(options);\n        this.renderingType = 'multi-select'  || 'single-select';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from '../question-base';\nimport { BaseOptions } from './base-options';\n\nexport abstract class NestedQuestion extends QuestionBase {\n    abstract questions: QuestionBase[];\n    constructor(options: BaseOptions) {\n        super(options);\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { GroupQuestionOptions } from './interfaces/group-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class QuestionGroup extends NestedQuestion {\n    questions: QuestionBase[];\n    isExpanded = true;\n\n    constructor(options: GroupQuestionOptions) {\n        super(options);\n        this.renderingType = 'group';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormGroup;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { RepeatingQuestionOptions } from './interfaces/repeating-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { NestedQuestion } from './interfaces/nested-questions';\n\nexport class RepeatingQuestion extends NestedQuestion {\n    questions: QuestionBase[];\n\n    constructor(options: RepeatingQuestionOptions) {\n        super(options);\n        this.renderingType = 'repeating';\n        this.questions = options.questions || [];\n        this.controlType = AfeControlType.AfeFormArray;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { CheckboxOptions } from './interfaces/checkbox-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class CheckBoxQuestion extends QuestionBase {\n\n    options: { key: string, value: string }[];\n\n    constructor(options: CheckboxOptions) {\n        super(options);\n        this.renderingType = 'checkbox' || 'radio';\n        this.options = options.options || [];\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n\n}\n","import { QuestionBase } from './question-base';\nimport { FileUploadQuestionOptions } from './interfaces/file-upload-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class FileUploadQuestion extends QuestionBase {\n    showTime = true;\n    showWeeksAdder = false;\n    dataSource?: any;\n    constructor(options: FileUploadQuestionOptions) {\n        super(options);\n        this.renderingType = 'file';\n        this.dataSource = options.dataSource;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { QuestionBase } from './question-base';\nimport { TestOrderQuestionOptions } from './interfaces/test-order-question-options';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nexport class TestOrderQuestion extends QuestionBase {\n    orderType: string;\n    selectableOrders: { concept: string, label: string }[];\n    orderSettingUuid: string;\n    rendering: string;\n    options: any[];\n    constructor(options: TestOrderQuestionOptions) {\n        super(options);\n        this.renderingType = 'select';\n        this.orderType = options.orderType;\n        this.selectableOrders = options.selectableOrders;\n        this.options = options.options;\n        this.orderSettingUuid = options.orderSettingUuid;\n        this.rendering = options.orderSettingUuid;\n        this.controlType = AfeControlType.AfeFormControl;\n    }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class DateValidationModel extends ValidationModel {\n\n  allowFutureDates = false;\n\n  constructor(validations: any) {\n    super(validations);\n\n    this.allowFutureDates = validations.allowFutureDates === 'true' ? true : false;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MaxValidationModel extends ValidationModel {\n\n  max: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const max: any = validations.max;\n    this.max = +max;\n  }\n}\n","import { ValidationModel } from './validation.model';\n\nexport class MinValidationModel extends ValidationModel {\n\n  min: number;\n\n  constructor(validations: any) {\n    super(validations);\n    const min: any = validations.min;\n    this.min = +min;\n  }\n}\n","import { Option } from '../question-models/select-option';\nimport { DataSource } from '../question-models/interfaces/data-source';\nimport { Observable, BehaviorSubject, of } from 'rxjs';\n\n\nexport class DummyDataSource implements DataSource {\n  options: Observable<Option[]>;\n  option: Observable<Option>;\n  returnErrorOnNext = false;\n\n  constructor() { }\n\n  resolveSelectedValue(value): Observable<Option> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.value === value\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions[0]);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n  fileUpload(url) {\n    return of({ image: '' });\n  }\n  fetchFile(url) {\n    return of({ image: '' });\n  }\n  searchOptions(searchText): Observable<Option[]> {\n    let selectOptions = this.sampleData();\n\n    selectOptions = selectOptions.map(function (obj) {\n      const option = new Option({\n        label: obj.label,\n        value: obj.concept\n      });\n      return option;\n    });\n\n\n    selectOptions = selectOptions.filter(\n      option => option.label.indexOf(searchText) !== -1\n    );\n\n    const test: BehaviorSubject<any> = new BehaviorSubject<any>([]);\n    if (!this.returnErrorOnNext) {\n      test.next(selectOptions);\n    } else {\n      test.error(new Error('Error loading Options'));\n    }\n\n    return test.asObservable();\n  }\n\n  sampleData(): any {\n    return [\n      {\n        concept: 'a899e0ac-1350-11df-a1f1-0026b9348838',\n        label: 'None'\n      },\n      {\n        concept: 'a8ad1276-1350-11df-a1f1-0026b9348838',\n        label: 'Breathlessness'\n      },\n      {\n        concept: 'a892e4b4-1350-11df-a1f1-0026b9348838',\n        label: 'Chest pain'\n      },\n      {\n        concept: 'a8afc8b8-1350-11df-a1f1-0026b9348838',\n        label: 'Cough = 2 weeks'\n      },\n      {\n        concept: 'd7adae14-c386-49cc-8f7c-765d8ceec566',\n        label: 'Fever for = 2 weeks'\n      },\n      {\n        concept: '3f57aafc-7162-41da-a51b-6a804cb6f5e8',\n        label: 'New exposure to household contact with TB'\n      },\n      {\n        concept: 'a89807f0-1350-11df-a1f1-0026b9348838',\n        label: 'Noticeable Weight loss'\n      },\n      {\n        concept: 'e1862fef-68ed-4df4-90dd-a00152f719aa',\n        label: 'Night sweats = 2 weeks'\n      },\n      {\n        concept: 'a8ad462e-1350-11df-a1f1-0026b9348838',\n        label: 'Abdomen'\n      },\n      {\n        concept: 'f218c60e-4b54-475a-a4fa-facab9216da8',\n        label: 'Groin'\n      },\n      {\n        concept: 'a8a774b0-1350-11df-a1f1-0026b9348838',\n        label: 'Joints'\n      },\n      {\n        concept: '4639388c-ee31-4dcf-abb4-ad71253493bb',\n        label: 'Neck Kw'\n      }\n\n    ];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class HistoricalEncounterDataService {\n\n  dataSources: any = {};\n  constructor() {\n  }\n\n  registerEncounters(name: string, encounters: any) {\n    const encStore: any = {\n      data: [],\n      getValue: (key: string, index = 0): any => {\n        const pathArray = key.split('.');\n        if (pathArray.length > 0) {\n          return this.getFirstValue(pathArray, encStore.data[index]);\n        }\n        return encStore.data[index][key];\n      },\n      getAllObjects: () => {\n        return encStore.data;\n      },\n      getSingleObject: (index = 0) => {\n        return encStore.data[index];\n      }\n    };\n\n    if (_.isArray(encounters)) {\n      const group: Array<any> = [];\n      _.each(encounters, (encounter) => {\n        group.push(this._transformEncounter(encounter));\n      });\n\n      // Sort them in reverse chronological order\n      encStore.data = _.sortBy(group, 'encounterDatetime').reverse();\n    } else {\n      // Assume a single openmrs rest encounter object.\n      encStore.data.push(this._transformEncounter(encounters));\n    }\n\n    this.putObject(name, encStore);\n\n  }\n\n  putObject(name, object): void {\n    this.dataSources[name] = object;\n  }\n\n  getObject(name: string): any {\n    return this.dataSources[name] || null;\n  }\n\n  getFirstValue(path: Array<string>, object: any): any {\n\n    const answers = [];\n\n    this.getAllValues(path, object, answers);\n\n    if (answers.length > 0) {\n      return {\n        value: answers[0],\n        valueDate: moment(object.encounterDatetime).format('ll')\n      };\n    }\n\n  }\n\n  getAllValues(path, object, answers) {\n    if (_.isNil(object)) {\n      return;\n    }\n\n    if (path.length <= 1) {\n      if (!_.isNil(object[path[0]])) {\n        answers.push(object[path[0]]);\n      }\n      return;\n    }\n\n    const newpath = path.splice(1);\n    const key = path[0];\n\n    if (_.isArray(object[key]) && object[key].length > 0) {\n      _.each(object[key], (childObject) => {\n        this.getAllValues(newpath.slice(0), childObject, answers);\n      });\n    } else {\n      this.getAllValues(newpath.slice(0), object[key], answers);\n    }\n  }\n\n  private _transformEncounter(encounter: any) {\n    if (_.isNil(encounter)) {\n      return;\n    }\n    // Transform encounter Level details to key value pairs.\n    const prevEncounter: any = {\n      encounterDatetime: encounter.encounterDatetime\n    };\n\n    if (encounter.location && encounter.location.uuid) {\n      prevEncounter.location = encounter.location.uuid;\n    }\n\n    if (encounter.patient && encounter.patient.uuid) {\n      prevEncounter.patient = encounter.patient.uuid;\n    }\n\n    if (encounter.form && encounter.form.uuid) {\n      prevEncounter.form = encounter.form.uuid;\n    }\n\n    if (encounter.encounterType && encounter.encounterType.uuid) {\n      prevEncounter.encounterType = encounter.encounterType.uuid;\n    }\n\n    if (encounter.provider) {\n      const provider = encounter.provider;\n      prevEncounter.provider = provider.uuid;\n    }\n\n    // Deal with obs.\n    if (encounter.obs) {\n      const processedObs: any = this._transformObs(encounter.obs);\n\n      // add in individual processed obs to prevEncounter\n      _.extend(prevEncounter, processedObs);\n    }\n\n    return prevEncounter;\n  }\n\n  private _transformObs(obs: any): any {\n\n    if (!obs) {\n      return null;\n    }\n\n    const obsRep: any = {};\n    if (_.isArray(obs)) {\n      _.each(obs, (singleObs) => {\n        this._augumentObs(obsRep, this._transformObs(singleObs));\n      });\n      return obsRep;\n    } else if (obs.groupMembers) {\n      const group: any = {};\n      _.each(obs.groupMembers, (member) => {\n        this._augumentObs(group, this._transformObs(member));\n      });\n\n      // Handle already existing data\n      if (obsRep[obs.concept.uuid] && _.isArray(obsRep[obs.concept.uuid])) {\n        obsRep[obs.concept.uuid].push(group);\n      } else {\n        obsRep[obs.concept.uuid] = [group];\n      }\n      return obsRep;\n    } else {\n      if (obs.value instanceof Object) {\n        obsRep[obs.concept.uuid] = obs.value.uuid;\n      } else {\n        obsRep[obs.concept.uuid] = obs.value;\n      }\n      return obsRep;\n    }\n\n  }\n\n  private _augumentObs(existing: any, toAdd: any): any {\n    for (const key in toAdd) {\n      if (_.has(existing, key)) {\n        // check if not an array yet\n        if (!_.isArray(existing[key])) {\n          const temp = existing[key];\n          existing[key] = [temp];\n        }\n\n        // Check whether the incoming is array (for group members)\n        if (_.isArray(toAdd[key])) {\n          Array.prototype.push.apply(existing[key], toAdd[key]);\n        } else {\n          existing[key].push(toAdd[key]);\n        }\n      } else {\n        existing[key] = toAdd[key];\n      }\n    }\n    return existing;\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { HistoricalEncounterDataService } from '../services/historical-encounter-data.service';\nimport { JsExpressionHelper } from './js-expression-helper';\nimport { Runnable, ExpressionRunner } from '../expression-runner/expression-runner';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\n\n@Injectable()\nexport class HistoricalHelperService {\n\n  constructor() {\n  }\n\n  public evaluate(expr: string, dataSources: any): any {\n    const HD = new HistoricalEncounterDataService();\n    HD.registerEncounters('prevEnc', dataSources['rawPrevEnc']);\n    const deps: any = {\n      HD: HD\n    };\n\n    const helper = new JsExpressionHelper();\n    const control: AfeFormControl = new AfeFormControl();\n    const runner: ExpressionRunner = new ExpressionRunner();\n    const runnable: Runnable = runner.getRunnable(expr, control, helper.helperFunctions, deps);\n\n    return runnable.run();\n  }\n\n}\n","import * as _ from 'lodash';\n\nimport { TextInputQuestion } from '../question-models/text-input-question';\nimport { TextAreaInputQuestion } from '../question-models/text-area-input-question';\nimport { SelectQuestion } from '../question-models/select-question';\nimport { UiSelectQuestion } from '../question-models/ui-select-question';\nimport { DateQuestion } from '../question-models/date-question';\nimport { MultiSelectQuestion } from '../question-models/multi-select-question';\nimport { QuestionGroup } from '../question-models/group-question';\nimport { RepeatingQuestion } from '../question-models/repeating-question';\nimport { QuestionBase } from '../question-models/question-base';\nimport { FileUploadQuestion } from '../question-models/file-upload-question';\nimport { TestOrderQuestion } from '../question-models/test-order-question';\nimport { AfeControlType } from '../../abstract-controls-extension/afe-control-type';\n\nimport { ValidationModel } from '../question-models/validation.model';\nimport { DateValidationModel } from '../question-models/date-validation.model';\nimport { MaxValidationModel } from '../question-models/max-validation.model';\nimport { MinValidationModel } from '../question-models/min-validation.model';\nimport { JsExpressionValidationModel } from '../question-models/js-expression-validation.model';\nimport { ConditionalValidationModel } from '../question-models/conditional-validation.model';\nimport { DummyDataSource } from '../data-sources/dummy-data-source';\nimport { HistoricalHelperService } from '../helpers/historical-expression-helper-service';\nimport { Form } from './form';\nimport { CheckBoxQuestion } from '../question-models/models';\n\nexport class QuestionFactory {\n  dataSources: any = {};\n  historicalHelperService: HistoricalHelperService = new HistoricalHelperService();\n  constructor() {\n  }\n\n  createQuestionModel(formSchema: any, form?: Form): QuestionBase {\n    if (form) {\n      const dataSources = form.dataSourcesContainer.dataSources;\n      this.dataSources = dataSources;\n    }\n    return this.toFormQuestionModel(formSchema);\n  }\n\n  toSelectQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const options: any = question.options;\n    options.splice(0, 0, {\n      label: '',\n      value: ''\n    });\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumericQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toNumberQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'number';\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    question.validators = this.addValidators(schemaQuestion);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDateQuestion(schemaQuestion: any): DateQuestion {\n    if (schemaQuestion.type === 'encounterDatetime') {\n      return this.toEncounterDatetimeQuestion(schemaQuestion);\n    }\n    const question = new DateQuestion({ type: '', key: '' });\n    question.renderingType = 'date';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showTime = schemaQuestion.questionOptions.showTime as boolean;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterDatetimeQuestion(schemaQuestion: any): DateQuestion {\n    const question = new DateQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.renderingType = 'date';\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.showWeeksAdder = schemaQuestion.questionOptions.weeksList ? true : false;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    question.showTime = true;\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toCheckBoxQuestion(schemaQuestion: any): CheckBoxQuestion {\n    const question = new CheckBoxQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.answers.map((obj) => {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.options.splice(0, 0);\n\n    question.renderingType = schemaQuestion.questionOptions.rendering;\n    const mappings: any = {\n      label: 'label',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n\n  }\n\n  toMultiCheckboxQuestion(schemaQuestion: any): MultiSelectQuestion {\n    const question = new MultiSelectQuestion({ renderType: '', options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.options = schemaQuestion.questionOptions.answers.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n    question.validators = this.addValidators(schemaQuestion);\n    question.dataSource = new DummyDataSource();\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextAreaQuestion(schemaQuestion: any): TextAreaInputQuestion {\n    const question = new TextAreaInputQuestion({\n      isExpanded: false, rows: 18,\n      placeholder: '', type: '', key: ''\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.isExpanded = schemaQuestion.isExpanded;\n    question.rows = schemaQuestion.questionOptions.rows;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTextQuestion(schemaQuestion: any): TextInputQuestion {\n    const question = new TextInputQuestion({ placeholder: '', type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'text';\n    question.placeholder = schemaQuestion.questionOptions.placeholder;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.placeholder = schemaQuestion.questionOptions.placeholder || '';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFileUploadQuestion(schemaQuestion: any): FileUploadQuestion {\n    const question = new FileUploadQuestion({ type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'file';\n    question.dataSource = 'file';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toDrugQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'drug';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toProblemQuestion(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'problem';\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toConceptAnswerSelect(schemaQuestion: any): SelectQuestion {\n    const question = new SelectQuestion({ options: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = schemaQuestion.questionOptions.dataSource || 'conceptAnswers';\n    question.dataSourceOptions = {\n      concept: schemaQuestion.questionOptions.concept\n    };\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toRepeatingQuestion(schemaQuestion: any): RepeatingQuestion {\n    const question = new RepeatingQuestion({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    if (schemaQuestion.type === 'testOrder') {\n      const testOrder = this.toTestOrderQuestion(schemaQuestion);\n      const orders = []; orders.push(testOrder);\n      question.questions = orders;\n    }\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toGroupQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.questions = this.getChildrenQuestionModels(schemaQuestion.questions);\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toPageQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'page';\n    question.controlType = AfeControlType.None;\n    question.questions = [];\n    schemaQuestion.sections.forEach(element => {\n      question.questions.push(this.toSectionQuestion(element));\n    });\n    return question;\n  }\n\n  toFormQuestionModel(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'form';\n    question.controlType = AfeControlType.AfeFormGroup;\n    question.extras = schemaQuestion;\n    question.questions = [];\n    schemaQuestion.pages.forEach(element => {\n      question.questions.push(this.toPageQuestion(element));\n    });\n\n    return question;\n  }\n\n  toSectionQuestion(schemaQuestion: any): QuestionGroup {\n    const question = new QuestionGroup({ questions: [], type: '', key: '' });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.label;\n    question.renderingType = 'section';\n    question.controlType = AfeControlType.None;\n    question.isExpanded = schemaQuestion.isExpanded === 'true' ? true : false;\n    question.questions = this.getSchemaQuestions(schemaQuestion.questions);\n    return question;\n  }\n\n  toPersonAttributeQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'personAttribute';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toEncounterProviderQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'provider';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toFieldSetQuestion(schemaQuestion: any): QuestionGroup {\n    const toReturn = this.toGroupQuestion(schemaQuestion);\n    toReturn.renderingType = 'field-set';\n    return toReturn;\n  }\n\n  toEncounterLocationQuestion(schemaQuestion: any): UiSelectQuestion {\n    const question = new UiSelectQuestion({\n      options: [], type: '', key: '', searchFunction: function () { },\n      resolveFunction: function () {\n\n      }\n    });\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.renderingType = schemaQuestion.type;\n    question.renderingType = 'remote-select';\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.dataSource = 'location';\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n\n    this.copyProperties(mappings, schemaQuestion, question);\n    this.addDisableOrHideProperty(schemaQuestion, question);\n    this.addAlertProperty(schemaQuestion, question);\n    this.addHistoricalExpressions(schemaQuestion, question);\n    this.addCalculatorProperty(schemaQuestion, question);\n    return question;\n  }\n\n  toTestOrderQuestion(schemaQuestion: any): TestOrderQuestion {\n\n    const question = new TestOrderQuestion({\n      type: '', key: '', orderType: '', selectableOrders: [],\n      orderSettingUuid: '', label: '', rendering: ''\n    });\n\n    question.label = schemaQuestion.label;\n    question.key = schemaQuestion.id;\n    question.validators = this.addValidators(schemaQuestion);\n    question.extras = schemaQuestion;\n    question.options = schemaQuestion.questionOptions.selectableOrders.map(function (obj) {\n      return {\n        label: obj.label,\n        value: obj.concept\n      };\n    });\n\n    const mappings: any = {\n      label: 'label',\n      required: 'required',\n      id: 'key'\n    };\n    this.copyProperties(mappings, schemaQuestion, question);\n    return question;\n  }\n\n  getSchemaQuestions(schema: any): any {\n    const listQuestions = new Array();\n    this.getQuestions(schema, listQuestions);\n    return listQuestions;\n  }\n\n  getQuestions(schema: any, foundArray: any): any {\n    if (!Array.isArray(foundArray)) {\n      foundArray = [];\n    }\n    if (Array.isArray(schema)) {\n\n      for (const property in schema) {\n        if (schema.hasOwnProperty(property)) {\n          this.getQuestions(schema[property], foundArray);\n        }\n      }\n    }\n\n    if (schema && !Array.isArray(schema) && typeof schema === 'object') {\n      if (schema.questionOptions) {\n        if (schema.questionOptions.rendering === 'group' ||\n          schema.questionOptions.rendering === 'repeating') {\n          // schema.questions = this.getGroupMembers(schema.questions);\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        } else if (schema.questionOptions.rendering === 'field-set') {\n        } else {\n          foundArray.push(this.toModel(schema, schema.questionOptions.rendering));\n        }\n      } else {\n        for (const o in schema) {\n          if (schema.hasOwnProperty(o)) {\n            this.getQuestions(schema[o], foundArray);\n          }\n        }\n      }\n    }\n\n  }\n\n  getChildrenQuestionModels(schema: any): any {\n    const children = [];\n    this.getQuestions(schema, children);\n    return children;\n\n  }\n\n  toModel(schema: any, renderType: string): any {\n    if (renderType === 'ui-select-extended') {\n      renderType = schema.type;\n    }\n    if (!schema.id) {\n      schema['id'] = this.generateId(10);\n    }\n\n    if (schema.questionOptions &&\n      (schema.questionOptions.showDate === true ||\n        schema.questionOptions.showDate === 'true')) {\n      schema = this.convertOldVersionComplexObsQuestionToNewVersion(schema);\n      renderType = 'field-set';\n    }\n\n    switch (renderType) {\n      case 'select':\n        return this.toSelectQuestion(schema);\n      case 'single-select':\n        return this.toSelectQuestion(schema);\n      case 'multi-select':\n        return this.toSelectQuestion(schema);\n      case 'numeric':\n        return this.toNumericQuestion(schema);\n      case 'number':\n        return this.toNumberQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'date':\n        return this.toDateQuestion(schema);\n      case 'multiCheckbox':\n        return this.toMultiCheckboxQuestion(schema);\n      case 'drug':\n        return this.toDrugQuestion(schema);\n      case 'problem':\n        return this.toProblemQuestion(schema);\n      case 'group':\n        return this.toGroupQuestion(schema);\n      case 'field-set':\n        return this.toFieldSetQuestion(schema);\n      case 'repeating':\n        return this.toRepeatingQuestion(schema);\n      case 'personAttribute':\n        return this.toPersonAttributeQuestion(schema);\n      case 'text':\n        return this.toTextQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'textarea':\n        return this.toTextAreaQuestion(schema);\n      case 'select-concept-answers':\n        return this.toConceptAnswerSelect(schema);\n      case 'encounterLocation':\n        return this.toEncounterLocationQuestion(schema);\n      case 'encounterDatetime':\n        return this.toEncounterDatetimeQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'radio':\n        return this.toCheckBoxQuestion(schema);\n      case 'checkbox':\n        return this.toCheckBoxQuestion(schema);\n      case 'encounterProvider':\n        return this.toEncounterProviderQuestion(schema);\n      case 'file':\n        return this.toFileUploadQuestion(schema);\n      default:\n        console.warn('New Schema Question Type found.........' + renderType);\n        return this.toTextQuestion(schema);\n    }\n\n  }\n\n  convertOldVersionComplexObsQuestionToNewVersion(schemaQuestion: any) {\n    const converted: any = {};\n    converted.type = 'complex-obs';\n    converted.label = schemaQuestion.label;\n    converted.id = 'complex_' + schemaQuestion.id;\n    converted.questionOptions = {};\n    converted.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    converted.questionOptions.rendering = 'field-set';\n    converted.questions = [];\n    converted.validators = [];\n\n    const mainField: any = JSON.parse(JSON.stringify(schemaQuestion));\n    mainField.type = 'complex-obs-child';\n    delete mainField.questionOptions.showDate;\n    delete mainField.questionOptions.shownDateOptions;\n    mainField.questionOptions.obsField = 'value';\n\n    const dateField: any = {};\n    dateField.type = 'complex-obs-child';\n    dateField.label = 'Date of ' + mainField.label;\n    dateField.id = 'date_' + mainField.id;\n    dateField.questionOptions = {};\n    dateField.questionOptions.concept = schemaQuestion.questionOptions.concept;\n    dateField.questionOptions.rendering = 'date';\n    dateField.questionOptions.obsField = 'obsDatetime';\n    const dateOptions: any = (Object as any).assign({},\n      schemaQuestion.questionOptions.shownDateOptions);\n    dateField.validators = dateOptions.validators;\n    dateField.hide = dateOptions.hide;\n\n\n    converted.questions.push(mainField);\n    converted.questions.push(dateField);\n\n    return converted;\n  }\n\n  copyProperties(mappings: any, source: any, destination: QuestionBase) {\n\n    for (const property in source) {\n      if (mappings.hasOwnProperty(property) && destination.hasOwnProperty(mappings[property])) {\n        destination[mappings[property]] = source[property];\n      }\n    }\n  }\n\n  addValidators(schemaQuestion: any): Array<ValidationModel> {\n\n    const validators: Array<ValidationModel> = [];\n\n    if (schemaQuestion.validators) {\n\n      // TODO - add more validator types\n      _.forEach(schemaQuestion.validators, (validator: any) => {\n        switch (validator.type) {\n          case 'date':\n            validators.push(new DateValidationModel(validator));\n            break;\n          case 'js_expression':\n            validators.push(new JsExpressionValidationModel(validator));\n            break;\n          case 'conditionalAnswered':\n            validators.push(new ConditionalValidationModel(validator));\n            break;\n          default:\n            validators.push(new ValidationModel(validator));\n            break;\n        }\n      });\n    }\n\n    const questionOptions = schemaQuestion.questionOptions;\n    const renderingType = questionOptions ? questionOptions.rendering : '';\n    switch (renderingType) {\n      case 'number':\n\n        if (questionOptions.max && questionOptions.min) {\n          validators.push(new MaxValidationModel({\n            type: 'max',\n            max: questionOptions.max\n          }));\n          validators.push(new MinValidationModel({\n            type: 'min',\n            min: questionOptions.min\n          }));\n        }\n\n        break;\n      default:\n        break;\n    }\n\n    // add conditional required validators\n    if (typeof schemaQuestion.required === 'object') {\n\n      const required: any = schemaQuestion.required;\n\n      if (required.type === 'conditionalRequired') {\n\n        validators.push(new ConditionalValidationModel({\n          referenceQuestionId: required.referenceQuestionId,\n          referenceQuestionAnswers: required.referenceQuestionAnswers,\n          type: required.type,\n          message: required.message,\n        }));\n      }\n    }\n\n    return validators;\n  }\n\n  addHistoricalExpressions(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.historicalExpression && schemaQuestion.historicalExpression.length > 0) {\n      question.setHistoricalValue(true);\n      if (schemaQuestion.showHistoricalEncounterDate !== undefined) {\n        question.showHistoricalEncounterDate(\n          (schemaQuestion.showHistoricalEncounterDate === 'true'));\n      } else {\n        question.showHistoricalEncounterDate();\n      }\n      const origValue = this.historicalHelperService.evaluate(schemaQuestion.historicalExpression,\n        this.dataSources);\n      question.historicalDataValue = origValue;\n      if (schemaQuestion.historicalPrepopulate) {\n        question.defaultValue = origValue;\n      }\n    }\n  }\n\n  addCalculatorProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (schemaQuestion.questionOptions &&\n      typeof schemaQuestion.questionOptions.calculate === 'object') {\n      question.calculateExpression = schemaQuestion.questionOptions.calculate.calculateExpression;\n    }\n\n  }\n\n  addAlertProperty(schemaQuestion: any, question: QuestionBase): any {\n    if (schemaQuestion.alert) {\n      question.alert = schemaQuestion.alert;\n    }\n    // if (typeof schemaQuestion.message === 'object') {\n    //   if (schemaQuestion.message.alertWhenExpression) {\n    //     question.message = schemaQuestion.message.alertWhenExpression;\n    //   }\n    // }\n  }\n\n  addDisableOrHideProperty(schemaQuestion: any, question: QuestionBase): any {\n\n    if (!!schemaQuestion.disable) {\n      question.disable = schemaQuestion.disable;\n    }\n\n    if (typeof schemaQuestion.disable === 'object') {\n      question.disable = schemaQuestion.disable.disableWhenExpression;\n    }\n\n    if (!!schemaQuestion.hide) {\n      question.hide = schemaQuestion.hide;\n    }\n    if (typeof schemaQuestion.hide === 'object') {\n\n      if (schemaQuestion.hide.hideWhenExpression) {\n        question.hide = schemaQuestion.hide.hideWhenExpression;\n      }\n    }\n  }\n  private generateId(x) {\n    let s = '_';\n    while (s.length < x && x > 0) {\n      const r = Math.random();\n      s += (r < 0.1 ? Math.floor(r * 100) :\n        String.fromCharCode(Math.floor(r * 26) + (r > 0.5 ? 97 : 65)));\n    }\n    return '_' + s;\n  }\n}\n","import * as _ from 'lodash';\n\nimport { FormFactory } from './form.factory';\nimport { QuestionFactory } from './question.factory';\nimport { DataSources } from '../data-sources/data-sources';\nimport { NodeBase, GroupNode, LeafNode, ArrayNode } from './form-node';\nimport { QuestionBase } from '../question-models/question-base';\nimport { AfeFormControl } from '../../abstract-controls-extension/afe-form-control';\nimport { AfeFormArray } from '../../abstract-controls-extension/afe-form-array';\n\nexport class Form {\n  public rootNode: GroupNode;\n  public valueProcessingInfo: any = {};\n    public existingOrders: any = {};\n  private _dataSourcesContainer: DataSources;\n  private _showErrors = false;\n  constructor(public schema: any, public formFactory: FormFactory, public questionFactory: QuestionFactory) {\n    this._dataSourcesContainer = new DataSources();\n  }\n\n  get dataSourcesContainer(): DataSources {\n    return this._dataSourcesContainer;\n  }\n\n  searchNodeByPath(node: GroupNode, path, found: Array<NodeBase>) {\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          this.searchNodeByPath(child, path, found);\n        } else if (child instanceof LeafNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n        } else if (child instanceof ArrayNode) {\n\n          if (path === child.path) {\n            found.push(child);\n            return found;\n          }\n\n          const aChild: ArrayNode = child as ArrayNode;\n\n          aChild.children.forEach(aChildNode => {\n            this.searchNodeByPath(aChildNode, path, found);\n          });\n        }\n      }\n    }\n\n    return found;\n  }\n\n  searchNodeByQuestionId(questionId: string, questionType?: string): Array<NodeBase> {\n    const found = [];\n    if (questionType) {\n      this.searchNodeByQuestionType(this.rootNode, questionType, found);\n    } else {\n      this.findNodesByQuestionId(this.rootNode, questionId, found);\n    }\n    return found;\n  }\n\n  searchNodeByQuestionType(rootNode: any, questionType: string , found: Array<NodeBase>) {\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.searchNodeByQuestionType(nodeAsGroup.children[o], questionType, found);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.searchNodeByQuestionType(node, questionType, found);\n      });\n    }\n\n    if (rootNode instanceof LeafNode) {\n      const questionBase: QuestionBase = rootNode.question;\n\n      if (questionBase.extras && questionBase.extras.type && questionBase.extras.type === questionType) {\n        found.push(rootNode);\n      }\n    }\n  }\n\n  private findNodesByQuestionId(rootNode: NodeBase, questionId: string,\n    results: Array<NodeBase>) {\n    if (rootNode.question.key === questionId) {\n      results.push(rootNode);\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this.findNodesByQuestionId(nodeAsGroup.children[o], questionId, results);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this.findNodesByQuestionId(node, questionId, results);\n      });\n    }\n  }\n\n\n\n  get valid() {\n\n    return this.rootNode.control.valid;\n  }\n\n  set showErrors(show: boolean) {\n    this._showErrors = show;\n  }\n\n  get showErrors() {\n    return this._showErrors;\n  }\n\n  markInvalidControls(node: GroupNode, invalidControlNodes?: any) {\n\n\n    const children: NodeBase = node.children;\n\n    for (const key in children) {\n\n      if (children.hasOwnProperty(key)) {\n\n        const child: NodeBase = children[key];\n\n        if (child instanceof GroupNode) {\n\n          this.markInvalidControls(child, invalidControlNodes);\n        } else if (child instanceof LeafNode) {\n\n          const questionBase: QuestionBase = (child as LeafNode).question;\n\n          if (questionBase.key && questionBase.key.length > 0) {\n\n            const c: AfeFormControl | AfeFormArray = child.control as AfeFormControl | AfeFormArray;\n\n            if (!c.valid && !c.disabled) {\n              if (invalidControlNodes) {\n                invalidControlNodes.push(child);\n              }\n\n              c.markAsTouched();\n            }\n          }\n        } else if (child instanceof ArrayNode) {\n          const arrayNode: ArrayNode = child as ArrayNode;\n\n          if (arrayNode && arrayNode.children && arrayNode.children.length > 0) {\n\n            _.forEach(arrayNode.children, (groupNode: any) => {\n              this.markInvalidControls(groupNode, invalidControlNodes);\n            });\n          }\n        }\n      }\n    }\n\n    return invalidControlNodes;\n  }\n\n  updateHiddenDisabledStateForAllControls() {\n    this._updateHiddenDisabledStateForAllControls(this.rootNode);\n  }\n\n\n  updateAlertsForAllControls() {\n    this._updateAlertsForAllControls(this.rootNode);\n  }\n\n  private _updateAlertsForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateAlert) {\n        (rootNode.control as any).updateAlert();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateAlertsForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateAlertsForAllControls(node);\n      });\n    }\n\n  }\n  private _updateHiddenDisabledStateForAllControls(rootNode: NodeBase) {\n    if (rootNode.control) {\n      if ((rootNode.control as any).updateDisabledState) {\n        (rootNode.control as any).updateDisabledState();\n      }\n\n      if ((rootNode.control as any).updateHiddenState) {\n        (rootNode.control as any).updateHiddenState();\n      }\n    }\n\n    if (rootNode instanceof GroupNode) {\n      const nodeAsGroup = rootNode as GroupNode;\n      // tslint:disable-next-line:forin\n      for (const o in nodeAsGroup.children) {\n        this._updateHiddenDisabledStateForAllControls(nodeAsGroup.children[o]);\n      }\n    }\n\n    if (rootNode instanceof ArrayNode) {\n      const nodeAsArray = rootNode as ArrayNode;\n\n      nodeAsArray.children.forEach(node => {\n        this._updateHiddenDisabledStateForAllControls(node);\n      });\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\n// import { AbstractControl } from '@angular/forms';\n\nimport { LeafNode, GroupNode, ArrayNode, NodeBase } from './form-node';\nimport { QuestionBase, NestedQuestion, RepeatingQuestion, QuestionGroup\n} from '../question-models/models';\nimport { FormControlService } from './form-control.service';\nimport { QuestionFactory } from './question.factory';\nimport { AfeFormGroup, AfeControlType, AfeFormArray\n} from '../../abstract-controls-extension';\nimport { ControlRelationsFactory } from './control-relations.factory';\nimport { Validations } from '../validators/validations';\n\nimport { Form } from './form';\n\n@Injectable()\nexport class FormFactory {\n    public hd: any = {\n        getValue: () => {\n            return 20;\n        }\n    };\n\n    constructor(public controlService: FormControlService,\n        public questionFactroy: QuestionFactory, public controlRelationsFactory: ControlRelationsFactory) {\n    }\n\n    createForm(schema: any, dataSource?: any): Form {\n        const form: Form = new Form(schema, this, this.questionFactroy);\n        if (dataSource) {\n            for (const key in dataSource) {\n                if (dataSource.hasOwnProperty(key)) {\n                    form.dataSourcesContainer.registerDataSource(key, dataSource[key], false);\n                }\n            }\n        }\n        const question = this.questionFactroy.createQuestionModel(schema, form);\n        form.rootNode = this.createNode(question, null, null, form) as GroupNode;\n\n        this.buildRelations(form.rootNode);\n        form.updateHiddenDisabledStateForAllControls();\n        form.updateAlertsForAllControls();\n        return form;\n    }\n\n    buildRelations(rootNode: GroupNode) {\n\n        Validations.JSExpressionValidatorsEnabled = false;\n        this.controlRelationsFactory.buildRelations(rootNode);\n\n        // enable js expression validations\n        Validations.JSExpressionValidatorsEnabled = true;\n    }\n\n    createNode(question: QuestionBase | NestedQuestion,\n        parentNode?: GroupNode, parentControl?: AfeFormGroup, form?: Form): NodeBase {\n        let node: NodeBase = null;\n        if (question instanceof NestedQuestion) {\n            if (question instanceof RepeatingQuestion) {\n                node = this.createArrayNode(question, parentNode, parentControl, form);\n            } else {\n                node = this.createGroupNode(question, parentNode, parentControl, form);\n            }\n        } else {\n            node = this.createLeafNode(question, parentNode, parentControl, form);\n        }\n        return node;\n    }\n\n    createLeafNode(question: QuestionBase,\n        parentNode: GroupNode, parentControl?: AfeFormGroup, form?: Form): LeafNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form);\n        return new LeafNode(question, controlModel, null, form,\n            parentNode ? parentNode.path : undefined);\n    }\n\n    createGroupNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): GroupNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const groupNode = new GroupNode(question, controlModel, null,\n            form, parentNode ? parentNode.path : undefined);\n        this.createNodeChildren(question, groupNode, (controlModel || parentControl), form);\n        return groupNode;\n    }\n\n    createArrayNode(question: NestedQuestion, parentNode?: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): ArrayNode {\n        const controlModel = this.controlService.generateControlModel(question, parentControl, false, form) as AfeFormGroup;\n        const arrayNode = new ArrayNode(question, controlModel, parentControl,\n            this, form, parentNode ? parentNode.path : undefined);\n        arrayNode.createChildFunc = this.createArrayNodeChild;\n        arrayNode.removeChildFunc = this.removeArrayNodeChild;\n\n        arrayNode.addChildNodeCreatedListener((node: GroupNode) => {\n\n            Validations.JSExpressionValidatorsEnabled = false;\n            this.controlRelationsFactory.buildArrayNodeRelations(node);\n            Validations.JSExpressionValidatorsEnabled = true;\n        });\n        return arrayNode;\n    }\n\n    createNodeChildren(question: NestedQuestion, node: GroupNode,\n        parentControl?: AfeFormGroup, form?: Form): any {\n        question.questions.forEach(element => {\n            const child = this.createNode(element, node, parentControl, form);\n            node.setChild(element.key, child);\n        });\n        return node.children;\n    }\n\n\n    createArrayNodeChild(question: RepeatingQuestion,\n        node: ArrayNode, factory?: FormFactory): GroupNode {\n\n        if (factory === null || factory === undefined) {\n            factory = this;\n        }\n        const groupQuestion: QuestionGroup =\n            new QuestionGroup({\n                key: node.path + '.' + node.children.length + '',\n                type: 'group', extras: question.extras, label: '', questions: question.questions\n            });\n\n        if (question.controlType === AfeControlType.None) {\n            groupQuestion.controlType = question.controlType;\n        }\n\n        const group = factory.createGroupNode(groupQuestion, null, null, node.form);\n        node.children.push(group);\n\n        if (node.control instanceof AfeFormArray) {\n            const nodeControl = node.control as AfeFormArray;\n            nodeControl.setControl(nodeControl.controls.length, group.control);\n        }\n\n        return group;\n    }\n\n    removeArrayNodeChild(index: number, node: ArrayNode) {\n        const nodeToRemove = node.children[index];\n\n        node.children.splice(index, 1);\n        if (node.control !== null || node.control !== undefined) {\n            if (node.control instanceof AfeFormArray) {\n                const control = node.control as AfeFormArray;\n                const controlIndexToRemove = control.controls.indexOf(nodeToRemove.control);\n                if (controlIndexToRemove >= 0) {\n                    control.removeAt(controlIndexToRemove);\n                }\n            }\n        }\n    }\n}\n","import * as _ from 'lodash';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\nimport { NodeBase, ArrayNode, GroupNode, LeafNode } from '../form-factory/form-node';\n\nexport class ObsAdapterHelper {\n    constructor() {\n\n    }\n\n    findObsAnswerToQuestion(node: NodeBase, obsArray: Array<any>): Array<any> {\n        const found = [];\n\n        if (!this.isObsNode(node)) {\n            return found;\n        }\n\n        if (node instanceof LeafNode ||\n            (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs')) {\n            _.each(obsArray, (item) => {\n                if (item.concept &&\n                    item.concept.uuid === node.question.extras.questionOptions.concept) {\n                    found.push(item);\n                }\n            });\n\n            return found;\n        }\n\n        // At this point the node is either a group or a repeating node\n\n        const childQuestionsUuids = this.getChildQuestionsConceptUuids(node);\n        if (childQuestionsUuids.length > 0) {\n            _.each(obsArray, (obs) => {\n                if (obs.concept &&\n                    obs.concept.uuid === node.question.extras.questionOptions.concept &&\n                    Array.isArray(obs.groupMembers) &&\n                    this.isSubsetOf(childQuestionsUuids,\n                        this.getGroupMembersConceptUuids(obs))) {\n                    found.push(obs);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getChildQuestionsConceptUuids(node: NodeBase): Array<string> {\n        const found = [];\n\n        if (node.question.extras && node.question.extras.questions) {\n            _.each(node.question.extras.questions, (question) => {\n                if (question.questionOptions &&\n                    question.questionOptions.concept) {\n                    found.push(question.questionOptions.concept);\n                }\n            });\n        }\n\n        return found;\n    }\n\n    getGroupMembersConceptUuids(obsWithGroupMembers): Array<string> {\n        const found = [];\n\n        if (Array.isArray(obsWithGroupMembers.groupMembers)) {\n            _.each(obsWithGroupMembers.groupMembers,\n                (member) => {\n                    found.push(member.concept.uuid);\n                });\n        }\n\n        return found;\n    }\n\n    isObsNode(node: NodeBase): boolean {\n        return node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n                node.question.extras.type === 'obsGroup' ||\n                node.question.extras.type === 'complex-obs' ||\n                node.question.extras.type === 'complex-obs-child');\n    }\n\n    isSubsetOf(supersetArray: Array<any>, subsetArray: Array<any>): boolean {\n        if (subsetArray.length === 0 && supersetArray.length === 0) {\n            return true;\n        }\n        return subsetArray.every((element): boolean => {\n            return supersetArray.indexOf(element) >= 0;\n        });\n    }\n\n    setSimpleObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const obsToUse = obs[0];\n\n            // set initial value\n            node.initialValue = obsToUse;\n\n            if (!this.isEmpty(obsToUse.value) && obsToUse.value.uuid) {\n                // answer to the obs is a concept, use uuid value\n                this.setNodeFormControlValue(node, obsToUse.value.uuid);\n            } else if (!this.isEmpty(obsToUse.value)) {\n                this.setNodeFormControlValue(node, obsToUse.value);\n            }\n        }\n    }\n\n    setMultiselectObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            node.initialValue = obs;\n\n            const obsUuids = [];\n            for (const m of obs) {\n                obsUuids.push(m.value.uuid);\n            }\n\n            this.setNodeFormControlValue(node, obsUuids);\n        }\n    }\n\n    setComplexObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            let valueField: LeafNode; // essential memmber\n            let dateField: LeafNode; // other member to be manipulated by user\n\n            const nodeAsGroup = (node as GroupNode);\n            // tslint:disable-next-line:forin\n            for (const o in nodeAsGroup.children) {\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                    valueField = nodeAsGroup.children[o];\n                }\n\n                if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                    dateField = nodeAsGroup.children[o];\n                }\n            }\n\n            // set the obs value here\n            this.setNodeValue(valueField, obs);\n            node.initialValue = valueField.initialValue;\n\n            // set the date value here\n            dateField.initialValue = valueField.initialValue;\n            this.setNodeFormControlValue(dateField, valueField.initialValue.obsDatetime);\n        }\n    }\n\n    setGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const groupNode = node as GroupNode;\n            groupNode.initialValue = obs[0];\n            // tslint:disable-next-line:forin\n            for (const o in groupNode.children) {\n                this.setNodeValue(groupNode.children[o], obs[0].groupMembers);\n            }\n        }\n    }\n\n    setRepeatingGroupObsNodeValue(node: NodeBase, obs: Array<any>) {\n        if (node && obs.length > 0) {\n            const arrayNode = node as ArrayNode;\n            arrayNode.initialValue = obs;\n\n            for (let i = 0; i < obs.length; i++) {\n                const createdNode = arrayNode.createChildNode();\n                this.setGroupObsNodeValue(createdNode, [obs[i]]);\n            }\n        }\n    }\n\n    setNodeValue(node: NodeBase, obs: Array<any>) {\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        this.setNodeValue(groupNode.children[o], obs);\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        this.setNodeValue(arrayNode.children[i], obs);\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                // search asnwering obs at this point\n                const answeringObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setSimpleObsNodeValue(node, answeringObs);\n                break;\n\n            case 'multiselect':\n                // search asnwering obs at this point\n                const multiselectObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setMultiselectObsNodeValue(node, multiselectObs);\n                break;\n\n\n            case 'complex':\n                // search asnwering obs at this point\n                const complexObs = this.findObsAnswerToQuestion(node, obs);\n\n                // set answer here\n                this.setComplexObsNodeValue(node, complexObs);\n                break;\n\n            case 'group':\n                const groupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (groupObs.length > 0) {\n                    this.setGroupObsNodeValue(node, groupObs);\n                }\n\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupObs = this.findObsAnswerToQuestion(node, obs);\n\n                if (repeatingGroupObs.length > 0) {\n                    this.setRepeatingGroupObsNodeValue(node, repeatingGroupObs);\n                }\n\n                break;\n            default:\n                console.error('Unknown obs node', node);\n                break;\n        }\n    }\n\n    setNodeFormControlValue(node: NodeBase, value) {\n        node.control.setValue(value);\n        // TODO: Determine if we need this call\n        // node.control.updateValueAndValidity();\n\n        // TODO: Remove this hack and put it in appropriate place\n        if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n            node.question.setHistoricalValue(false);\n        }\n    }\n\n    getObsNodeType(node: NodeBase): string {\n        if (this.isObsNode(node)) {\n            if (node instanceof LeafNode &&\n                ( node.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n                node.question.extras.questionOptions.rendering === 'checkbox' ||\n                node.question.extras.questionOptions.rendering === 'multi-select') ) {\n                return 'multiselect';\n            }\n\n            if (node instanceof LeafNode) {\n                return 'simple';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'complex-obs') {\n                return 'complex';\n            }\n\n            if (node instanceof ArrayNode &&\n                node.question.extras.type === 'obsGroup' &&\n                node.question.extras.questionOptions.rendering === 'repeating') {\n                return 'repeatingGroup';\n            }\n\n            if (node instanceof GroupNode &&\n                node.question.extras.type === 'obsGroup') {\n                return 'group';\n            }\n\n            return 'unknownObs';\n        }\n        return 'unknown';\n    }\n\n    // PAYLOAD GENERATION FUNCTIONS\n    getSimpleObsPayload(node: NodeBase): any {\n        // check for empty values first\n        if (this.isEmpty(node.control.value)) {\n            if (node.initialValue) {\n                // Handle case for existing voided obs\n                return {\n                    uuid: node.initialValue.uuid,\n                    voided: true\n                };\n            }\n            return null;\n        }\n\n        // check for exisiting, unchanged values\n        if (node.initialValue && !this.simpleNodeValueChanged(node)) {\n            return null;\n        }\n\n        // all numbers, text, concepts answers are handled in the same way\n        // no need for further formatting in this case\n        const obs: any = {\n            concept: node.question.extras.questionOptions.concept,\n            value: node.control.value\n        };\n\n        // handle date fields\n        if (node.question.extras.questionOptions.rendering === 'date') {\n            obs.value = this.toOpenMrsDateTimeString(node.control.value);\n        }\n\n        if (node.initialValue) {\n            // for existing cases, delete concept property, and add uuid\n            delete obs.concept;\n            obs.uuid = node.initialValue.uuid;\n        }\n\n        return obs;\n    }\n\n    getComplexObsPayload(node: NodeBase) {\n        let valueField: LeafNode; // essential memmber\n        let dateField: LeafNode; // other member to be manipulated by user\n\n        const nodeAsGroup = (node as GroupNode);\n        // tslint:disable-next-line:forin\n        for (const o in nodeAsGroup.children) {\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = nodeAsGroup.children[o];\n            }\n\n            if ((nodeAsGroup.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = nodeAsGroup.children[o];\n            }\n        }\n\n        const valuePayload = this.getObsNodePayload(valueField);\n        console.log('valuePayload', valuePayload);\n\n        // set obs datetime for the generated payload\n        if (valuePayload.length > 0) {\n            valuePayload[0].obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n            return valuePayload[0];\n        } else if (valuePayload.length === 0 && node.initialValue) {\n            // determine if date changed\n            if (!this.areDatesEqual(node.initialValue.obsDatetime, dateField.control.value)) {\n                const payload: any = {\n                    uuid: node.initialValue.uuid,\n                };\n                payload.obsDatetime = this.toOpenMrsDateTimeString(dateField.control.value);\n                return payload;\n            }\n        }\n        return null;\n    }\n\n    getMultiselectObsPayload(node: NodeBase): Array<any> {\n        const payload: Array<any> = [];\n\n        const existingUuids = [];\n\n        // add voided obs i.e. deleted options\n        if (Array.isArray(node.initialValue)) {\n            _.each(node.initialValue, (item) => {\n                existingUuids.push(item.value.uuid);\n                if (Array.isArray(node.control.value)) {\n                    if (node.control.value.indexOf(item.value.uuid) < 0) {\n                        payload.push({\n                            uuid: item.uuid,\n                            voided: true\n                        });\n                    }\n                } else {\n                    // every value was deleted\n                    payload.push({\n                        uuid: item.uuid,\n                        voided: true\n                    });\n                }\n            });\n        }\n\n        // add new obs i.e they didn't exisit originally\n        if (Array.isArray(node.control.value)) {\n            _.each(node.control.value, (item) => {\n                if (existingUuids.indexOf(item) < 0) {\n                    payload.push({\n                        concept: node.question.extras.questionOptions.concept,\n                        value: item\n                    });\n                }\n            });\n        }\n\n        return payload;\n    }\n\n    getGroupPayload(node: NodeBase) {\n        const nodeAsGroup: GroupNode = node as GroupNode;\n\n        let childrenPayload = [];\n        _.each(nodeAsGroup.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n        });\n\n        if (childrenPayload.length === 0) {\n            return null;\n        }\n\n        const groupPayload: any = {\n            groupMembers: childrenPayload\n        };\n\n        if (nodeAsGroup.initialValue) {\n            groupPayload.uuid = nodeAsGroup.initialValue.uuid;\n\n        } else {\n            groupPayload.concept = nodeAsGroup.question.extras.questionOptions.concept;\n        }\n\n        return groupPayload;\n    }\n\n    getRepeatingGroupPayload(node: NodeBase) {\n        const nodeAsArray: ArrayNode = node as ArrayNode;\n\n        let childrenPayload = [];\n\n        const groupsUuidsAfterEditting = [];\n        _.each(nodeAsArray.children, (child) => {\n            const payload = this.getObsNodePayload(child);\n            if (payload.length > 0) {\n                childrenPayload = childrenPayload.concat(payload);\n            }\n            if (child.initialValue && child.initialValue.uuid) {\n                groupsUuidsAfterEditting.push(child.initialValue.uuid);\n            }\n        });\n\n        // void deleted groups\n        // console.log('groupsUuidsAfterEditting', groupsUuidsAfterEditting);\n        if (nodeAsArray.initialValue && Array.isArray(nodeAsArray.initialValue)) {\n            _.each(nodeAsArray.initialValue, (obs) => {\n                if (groupsUuidsAfterEditting.indexOf(obs.uuid) < 0) {\n                    const voidedGroup = {\n                        uuid: obs.uuid,\n                        voided: true\n                    };\n                    childrenPayload.push(voidedGroup);\n                }\n            });\n        }\n\n        if (childrenPayload.length <= 0) {\n            return null;\n        }\n        return childrenPayload;\n\n    }\n\n    getObsNodePayload(node: NodeBase): Array<any> {\n        let payload = [];\n\n        switch (this.getObsNodeType(node)) {\n            case 'unknown':\n                if (node instanceof GroupNode) {\n                    const groupNode = node as GroupNode;\n                    // tslint:disable-next-line:forin\n                    for (const o in groupNode.children) {\n                        const groupNodePayoad = this.getObsNodePayload(groupNode.children[o]);\n                        if (Array.isArray(groupNodePayoad) && groupNodePayoad.length > 0) {\n                            payload = payload.concat(groupNodePayoad);\n                        }\n                    }\n                    break;\n                }\n                if (node instanceof ArrayNode) {\n                    const arrayNode = node as ArrayNode;\n                    for (let i = 0; i < arrayNode.children.length; i++) {\n                        const arrayNodePayload = this.getObsNodePayload(arrayNode.children[i]);\n                        if (Array.isArray(arrayNodePayload) && arrayNodePayload.length > 0) {\n                            payload = payload.concat(arrayNodePayload);\n                        }\n                    }\n                    break;\n                }\n                break;\n            case 'simple':\n                const simpleObs = this.getSimpleObsPayload(node);\n                if (simpleObs !== null) {\n                    payload.push(simpleObs);\n                }\n                break;\n\n            case 'multiselect':\n                const multiselectObs = this.getMultiselectObsPayload(node);\n\n                if (Array.isArray(multiselectObs) && multiselectObs.length > 0) {\n                    payload = payload.concat(multiselectObs);\n                }\n                break;\n\n            case 'complex':\n                const complexObs = this.getComplexObsPayload(node);\n                if (complexObs !== null) {\n                    payload.push(complexObs);\n                }\n                break;\n\n            case 'group':\n                const groupedObs = this.getGroupPayload(node);\n                if (groupedObs && groupedObs !== null) {\n                    payload.push(groupedObs);\n                }\n                break;\n            case 'repeatingGroup':\n                const repeatingGroupedObs = this.getRepeatingGroupPayload(node);\n                if (Array.isArray(repeatingGroupedObs) && repeatingGroupedObs.length > 0) {\n                    payload = payload.concat(repeatingGroupedObs);\n                }\n                break;\n            default:\n                break;\n        }\n\n        return payload;\n    }\n\n    simpleNodeValueChanged(node: NodeBase): boolean {\n        if (node.initialValue) {\n            if (node.initialValue.value && node.initialValue.value.uuid) {\n                // question whose answer is a concept\n                return node.control.value !== node.initialValue.value.uuid;\n            }\n\n            if (node.question.extras.questionOptions.rendering === 'date') {\n                return !this.areDatesEqual(node.control.value, node.initialValue.value);\n            }\n            return node.control.value !== node.initialValue.value;\n        }\n        return false;\n    }\n\n    areDatesEqual(date1, date2) {\n        return moment(date1).isSame(date2);\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    toOpenMrsDateTimeString(datetime: string): string {\n        if (this.isEmpty(datetime)) {\n            return undefined;\n        } else {\n            // transform value to memoent value to avoid error\n            const formattedVal = moment(datetime).format();\n            const val = formattedVal.substring(0, 19).replace('T', ' ');\n            return this.isEmpty(val) ? undefined : val;\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs';\n\nimport * as _ from 'lodash';\n\nimport { LeafNode, GroupNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport { ObsAdapterHelper } from './obs-adapter-helper';\n\n@Injectable()\nexport class ObsValueAdapter implements ValueAdapter {\n\n    constructor(private helper: ObsAdapterHelper) { }\n\n    generateFormPayload(form: Form) {\n        return this.helper.getObsNodePayload(form.rootNode);\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Get obs Payload\n        // return this.getObsPayload(questionNodes);\n    }\n\n    populateForm(form: Form, payload) {\n        this.helper.setNodeValue(form.rootNode, payload);\n\n        // TODO: Get rid of the section below when the helper is stable.\n        // // Traverse  to get all nodes\n        // let pages = this.traverse(form.rootNode);\n        // // Extract actual question nodes\n        // let questionNodes = this.getQuestionNodes(pages);\n        // // Extract set obs\n        // this.setValues(questionNodes, payload);\n    }\n\n    // TODO: Get rid of all the functions below as they will not be needed\n    // once the helper is stable\n\n    setValues(nodes, payload?, forcegroup?) {\n        if (nodes) {\n            for (const node of nodes) {\n                if (node instanceof LeafNode) {\n                    this.setObsValue(node, payload);\n                    if (node.question.enableHistoricalValue && node.initialValue !== undefined) {\n                        node.question.setHistoricalValue(false);\n                    }\n\n                } else if (node.question && node.question.extras && node.question.renderingType === 'group' || forcegroup) {\n                    const groupObs = _.find(payload, (o: any) => {\n                        return o.concept.uuid === node.question.extras.questionOptions.concept && o.groupMembers;\n                    });\n                    if (groupObs) {\n                        if (node.node) {\n                            node.node['initialValue'] = groupObs;\n                        }\n\n                        this.setValues(node.groupMembers, groupObs.groupMembers);\n                    }\n                    if (forcegroup && node.payload) {\n                        this.setValues(node.groupMembers, node.payload.groupMembers);\n                    }\n\n\n                } else if (node instanceof GroupNode && node.question.extras.type === 'complex-obs') {\n                    this.setComplexObsValue(node, payload);\n                } else if (node.question && node.question.extras && node.question.renderingType === 'repeating' && !forcegroup) {\n                    this.setRepeatingGroupValues(node, payload);\n                    node.node.control.updateValueAndValidity();\n                } else {\n                    throw new Error('not implemented');\n                }\n            }\n        }\n    }\n\n    setObsValue(node, payload) {\n        if (node.question && node.question.extras &&\n            (node.question.extras.type === 'obs' ||\n            (node.question.extras.type === 'complex-obs-child' &&\n            node.question.extras.questionOptions.obsField === 'value')) &&\n            node.question.extras.questionOptions.rendering !== 'multiCheckbox' ||\n            node.question.extras.questionOptions.rendering !== 'checkbox' ||\n            node.question.extras.questionOptions.rendering !== 'multi-select') {\n            const obs = _.find(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (obs) {\n                if (obs.value instanceof Object) {\n                    node.control.setValue(obs.value.uuid);\n                    node.control.updateValueAndValidity();\n                } else {\n                    node.control.setValue(obs.value);\n                    node.control.updateValueAndValidity();\n                }\n                node['initialValue'] = { obsUuid: obs.uuid, value: obs.value };\n            }\n        } else {\n            const multiObs = _.filter(payload, (o: any) => {\n                return o.concept.uuid === node.question.extras.questionOptions.concept;\n            });\n            if (multiObs && multiObs.length > 0) {\n                node.control.setValue(this.getMultiselectValues(multiObs));\n                node.control.updateValueAndValidity();\n                node['initialValue'] = multiObs;\n            }\n        }\n    }\n\n    setComplexObsValue(node, payload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n        // set the usual obs value\n        this.setObsValue(valueField, payload);\n\n        // set the obs date\n        const obs = _.find(payload, (o: any) => {\n            return o.concept.uuid === node.question.extras.questionOptions.concept;\n        });\n\n        if (obs) {\n            dateField['initialValue'] = { obsUuid: obs.uuid, value: obs.obsDatetime };\n            (dateField as LeafNode).control.setValue(obs.obsDatetime);\n            (dateField as LeafNode).control.updateValueAndValidity();\n        }\n    }\n\n    getMultiselectValues(multiObs) {\n        const values = [];\n        for (const m of multiObs) {\n            values.push(m.value.uuid);\n        }\n        return values;\n    }\n\n    setRepeatingGroupValues(node, payload) {\n        const groupRepeatingObs = _.filter(payload, (o: any) => {\n            const found = o.concept.uuid === node.question.extras.questionOptions.concept;\n            let intersect = false;\n            if (found && o.groupMembers) {\n                const obs = o.groupMembers.map((a) => {\n                    return a.concept.uuid;\n                });\n\n                const schemaQuestions = node.question.questions.map((a) => {\n                    return a.extras.questionOptions.concept;\n                });\n\n                intersect = (_.intersection(obs, schemaQuestions).length > 0);\n            }\n            return found && intersect;\n        });\n        if (groupRepeatingObs.length > 0) {\n            node.node['initialValue'] = groupRepeatingObs;\n            for (let i = 0; i < groupRepeatingObs.length; i++) {\n                node.node.createChildNode();\n            }\n        }\n        const groups = [];\n        let index = 0;\n        for (const child of node.node.children) {\n            const children = Object.keys(child.children).map(function (key) { return child.children[key]; });\n            const groupPayload = groupRepeatingObs[index];\n            groups.push({ question: node.question, groupMembers: children, payload: groupPayload });\n            index++;\n        }\n        this.setValues(groups, groupRepeatingObs, true);\n    }\n\n    getQuestionNodes(pages) {\n        const merged = [];\n        const arrays = [];\n        for (const page of pages) {\n            for (const section of page.page) {\n                arrays.push(section.section);\n            }\n        }\n        return merged.concat.apply([], arrays);\n    }\n\n    repeatingGroup(nodes) {\n        const toReturn = [];\n        for (const node of nodes) {\n            toReturn.push({ question: node.question, groupMembers: this.traverse(node) });\n        }\n        return toReturn;\n    }\n\n    processGroup(obs, obsPayload) {\n        if (obs.question && obs.question.extras && obs.question.extras.questionOptions.rendering === 'group') {\n            const members = _.filter(this.getObsPayload(obs.groupMembers), (o: any) => {\n                return o.value !== '';\n            });\n\n            const mappedMembers = members.map((a) => {\n                return a.voided;\n            });\n            if (members.length > 0 && mappedMembers.every(Boolean)) {\n                obsPayload.push({\n                    uuid: obs.node.initialValue.uuid,\n                    voided: true\n                });\n            } else if (members.length > 0) {\n                if (obs.node.initialValue) {\n                    obsPayload.push({\n                        uuid: obs.node.initialValue.uuid,\n                        groupMembers: members\n                    });\n                } else {\n                    obsPayload.push({\n                        concept: obs.question.extras.questionOptions.concept,\n                        groupMembers: members\n                    });\n                }\n            }\n        }\n    }\n\n    mapInitialGroup(group) {\n        let current = {};\n        for (const member of group.groupMembers) {\n            let value: any = '';\n            if (member.value instanceof Object) {\n                value = member.value.uuid;\n            } else if (member.value) {\n                value = member.value;\n            } else if (member.groupMembers && member.groupMembers.length > 0) {\n                current = this.mapInitialGroup(group);\n            }\n            current[member.concept.uuid + ':' + value] = value;\n        }\n        return current;\n    }\n\n    mapModelGroup(node, value) {\n        const current = {};\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                const groupQuestion: any = _.find(node.question.questions, { key: key });\n                const modelValue = value[key];\n                if (modelValue instanceof Object) {\n                } else if (modelValue !== '') {\n                    current[groupQuestion.extras.questionOptions.concept + ':'\n                        + modelValue] = modelValue;\n                }\n            }\n\n        }\n        return current;\n    }\n\n    processRepeatingGroups(node, obsPayload) {\n        const initialValues = [];\n        if (node.node.initialValue) {\n            for (const group of node.node.initialValue) {\n                initialValues.push({ uuid: group.uuid, value: this.mapInitialGroup(group) });\n            }\n        }\n        const repeatingModel = [];\n        for (const value of node.node.control.value) {\n            repeatingModel.push({ value: this.mapModelGroup(node, value) });\n        }\n        const deleted = this.leftOuterJoinArrays(initialValues, repeatingModel);\n        const newObs = this.leftOuterJoinArrays(repeatingModel, initialValues);\n        const groupConcept = node.question.extras.questionOptions.concept;\n        let newObsPayload = [];\n        if (deleted.length > 0) {\n            const deletedObs = this.createGroupDeletedObs(deleted);\n            for (const d of deletedObs) {\n                obsPayload.push(d);\n            }\n            if (newObs.length > 0) {\n                newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n            }\n        } else {\n            newObsPayload = this.createGroupNewObs(newObs, groupConcept);\n        }\n\n        if (newObsPayload.length > 0) {\n            for (const p of newObsPayload) {\n                obsPayload.push(p);\n            }\n        }\n    }\n\n    leftOuterJoinArrays(first, second) {\n        const unique = first.filter(function (obj) {\n            return !second.some(function (obj2) {\n                return _.isEqual(obj.value, obj2.value);\n            });\n        });\n        return unique;\n    }\n\n    createGroupNewObs(payload, groupConcept) {\n        const newPayload = [];\n        for (const obs of payload) {\n            const groupPayload = [];\n            /* tslint:disable */\n            for (let key in obs.value) {\n                let concept = key.split(':')[0];\n                let value = key.split(':')[1];\n                groupPayload.push({ concept: concept, value: value });\n            }\n            newPayload.push({ concept: groupConcept, groupMembers: groupPayload })\n            /* tslint:enable */\n        }\n        return newPayload;\n    }\n\n    createGroupDeletedObs(payload) {\n        const deletedObs = [];\n        for (const d of payload) {\n            deletedObs.push({ uuid: d.uuid, voided: true });\n        }\n        return deletedObs;\n    }\n\n    getExactTime(datetime: string) {\n        return datetime.substring(0, 19).replace('T', ' ');\n    }\n\n    processObs(obs, obsPayload) {\n        if (obs.control && obs.question.extras) {\n            const obsValue = {\n                concept: obs.question.extras.questionOptions.concept,\n                value: (obs.question.extras.questionOptions.rendering === 'date' && !this.isEmpty(obs.control.value)) ?\n                    this.getExactTime(obs.control.value) : obs.control.value\n            };\n\n            if (obs.question.extras.questionOptions.rendering === 'multiCheckbox' ||\n            obs.question.extras.questionOptions.rendering === 'checkbox' ||\n            obs.question.extras.questionOptions.rendering === 'multi-select') {\n                const multis = this.processMultiSelect(obs.question.extras.questionOptions.concept, obs.control.value);\n                if (obs.initialValue) {\n                    const mappedInitial = obs.initialValue.map((a) => {\n                        return { uuid: a.uuid, value: { concept: a.concept.uuid, value: a.value.uuid } };\n                    });\n                    const mappedCurrent = multis.map((a) => {\n                        return { value: a };\n                    });\n                    const deletedObs = this.leftOuterJoinArrays(mappedInitial, mappedCurrent);\n                    const newObs = this.leftOuterJoinArrays(mappedCurrent, mappedInitial);\n                    this.processDeletedMultiSelectObs(deletedObs, obsPayload);\n                    this.processNewMultiSelectObs(newObs, obsPayload);\n                } else {\n                    this.processNewMultiSelectObs(multis, obsPayload);\n                }\n            } else {\n                if (obs.initialValue && obs.initialValue.value && obsValue) {\n                    this.updateOrVoidObs(obsValue, obs.initialValue, obsPayload);\n                } else if (obsValue.value !== '' && obsValue.value !== null) {\n                    obsPayload.push(obsValue);\n                }\n            }\n        }\n    }\n\n    processComplexObs(node, obsPayload) {\n        let valueField: any;\n        let dateField: any;\n\n        // tslint:disable-next-line:forin\n        for (const o in node.children) {\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'value') {\n                valueField = node.children[o];\n            }\n\n            if ((node.children[o] as LeafNode).question.extras.questionOptions.obsField === 'obsDatetime') {\n                dateField = node.children[o];\n            }\n        }\n\n        if (valueField) {\n            // process obs as usual\n            this.processObs(valueField, obsPayload);\n\n            // obtain the last inserted obs and set the obsDatetime\n            const createdPayload = obsPayload.length > 0 ? obsPayload[obsPayload.length - 1] : undefined;\n            if (createdPayload &&\n                ((createdPayload.concept && createdPayload.concept === node.question.extras.questionOptions.concept) ||\n                    (valueField.initialValue && createdPayload.uuid === valueField.initialValue.obsUuid))) {\n                if (dateField.initialValue && dateField.control.value !== dateField.initialValue.value) {\n                    createdPayload.obsDatetime = dateField.control.value;\n                }\n            }\n        }\n    }\n\n    processDeletedMultiSelectObs(values, obsPayload) {\n        for (const value of values) {\n            obsPayload.push({ uuid: value.uuid, voided: true });\n        }\n    }\n\n    processNewMultiSelectObs(values, obsPayload) {\n        for (const multi of values) {\n            if (multi.value instanceof Object) {\n                obsPayload.push(multi.value);\n            } else {\n                obsPayload.push(multi);\n            }\n        }\n    }\n\n    updateOrVoidObs(obsValue, initialValue, obsPayload) {\n        if (this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, voided: true });\n        } else if (!this.isEmpty(obsValue.value) && initialValue.value) {\n            obsPayload.push({ uuid: initialValue.obsUuid, value: obsValue.value });\n        }\n    }\n\n    isEmpty(value): boolean {\n        if (value === '' ||\n            value === null ||\n            value === undefined\n            // || value === [] ||\n            // value === {}\n        ) {\n            return true;\n        }\n        return false;\n    }\n\n    traverse(o, type?) {\n        const questions = [];\n        if (o.children) {\n            if (o.children instanceof Array) {\n                const returned = this.repeatingGroup(o.children);\n                return returned;\n            }\n            if (o.children instanceof Object) {\n                for (const key in o.children) {\n                    if (o.children.hasOwnProperty(key)) {\n                        switch (o.children[key].question.renderingType) {\n                            case 'page':\n                                const page = this.traverse(o.children[key]);\n                                questions.push({ page: page, label: o.children[key].question.label });\n                                break;\n                            case 'section':\n                                const section = this.traverse(o.children[key]);\n                                questions.push({ section: section, node: o.children[key], label: o.children[key].question.label });\n                                break;\n                            case 'group':\n                                const qs = this.traverse(o.children[key]);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: qs });\n                                break;\n                            case 'repeating':\n                                const rep = this.repeatingGroup(o.children[key].children);\n                                questions.push({ node: o.children[key], question: o.children[key].question, groupMembers: rep });\n                                break;\n                            default:\n                                questions.push(o.children[key]);\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n        return questions;\n    }\n\n    processMultiSelect(concept, values) {\n        const multiSelectObs = [];\n        if (values && values !== null) {\n            for (const value of values) {\n                const obs = {\n                    concept: concept,\n                    value: value\n                };\n                multiSelectObs.push(obs);\n            }\n        }\n        return multiSelectObs;\n    }\n\n\n    isObs(node) {\n        return (node.question.extras.type === 'obs' ||\n            node.question.extras.type === 'obsGroup' ||\n            node.question.extras.type === 'complex-obs');\n    }\n\n    getObsPayload(nodes) {\n        const obsPayload = [];\n        for (const node of nodes) {\n            if (this.isObs(node)) {\n                if (node.groupMembers, node.question.extras.questionOptions.rendering === 'group') {\n\n                    this.processGroup(node, obsPayload);\n\n                } else if (node.groupMembers, node.question.extras.questionOptions.rendering === 'repeating') {\n                    this.processRepeatingGroups(node, obsPayload);\n                } else if (node instanceof GroupNode && (node as GroupNode).question.extras.type === 'complex-obs') {\n                    this.processComplexObs(node, obsPayload);\n                } else {\n                    this.processObs(node, obsPayload);\n                }\n            }\n        }\n        return obsPayload;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\nimport * as _ from 'lodash';\n@Injectable()\nexport class OrderValueAdapter implements ValueAdapter {\n    formOrderNodes = [];\n    private provider = '';\n\n    generateFormPayload(form: Form) {\n        this.formOrderNodes = [];\n        this._setOrderProvider(form);\n        this._findTestOrderQuestionNodes(form.rootNode);\n        return this._createOrdersPayload(this.formOrderNodes, form);\n    }\n\n    populateForm(form: Form, payload) {\n        form.existingOrders = payload;\n        this.formOrderNodes = [];\n        this._findTestOrderQuestionNodes(form.rootNode);\n        const existingOrders = this._getExistingOrders(form);\n        this._setOrderValues(this.formOrderNodes, existingOrders);\n    }\n\n    private _setOrderProvider(form: Form) {\n        if (form.valueProcessingInfo.providerUuid) {\n            this.provider = form.valueProcessingInfo.providerUuid;\n        }\n    }\n\n    private _createOrdersPayload(orderNodes, form: Form) {\n        const payload = [];\n        const selectedOrders = [];\n        let deletedOrders = [];\n        const existingOrders = this._getExistingOrders(form);\n        for (const orderNode of orderNodes) {\n            const orderNodeValues = orderNode.control.value;\n            const orders = [];\n            if (existingOrders) {\n                existingOrders.map(function (obj) {\n                    orders[obj.concept] = obj.concept;\n                });\n            }\n\n\n            for (const order in orderNodeValues) {\n                if (orderNodeValues.hasOwnProperty(order)) {\n\n                    const orderValue = orderNodeValues[order][orderNode.question.key];\n\n                    const payloadOrder = this._createPayloadOrder(orderValue, orderNode.question.extras);\n\n                    if (orders[orderValue] !== orderValue && payloadOrder.concept !== '') {\n\n                        payload.push(payloadOrder);\n                    }\n                    selectedOrders[orderValue] = orderValue;\n                    if (payloadOrder.orderNumber === '') {\n                        delete payloadOrder.orderNumber;\n                    }\n                    if (payloadOrder.uuid === '') {\n                        delete payloadOrder.uuid;\n                    }\n                }\n            }\n\n        }\n\n        deletedOrders = this._getDeletedOrders(selectedOrders, existingOrders);\n        return this._addDeletedOrdersToPayload(deletedOrders, payload);\n\n    }\n\n    private _getExistingOrders(form: Form) {\n        if (form.existingOrders && form.existingOrders.orders) {\n            let existingOrders = form.existingOrders.orders.map((o) => {\n                return {\n                    concept: o.concept.uuid,\n                    orderNumber: o.orderNumber,\n                    orderUuid: o.uuid,\n                    voided: o.voided,\n                    dateVoided: o.auditInfo.dateVoided\n                };\n            });\n\n            return existingOrders = _.filter(existingOrders, (order: any) => {\n                if (order.voided === true || order.dateVoided) {\n                    return false;\n                } else {\n                    return true;\n                }\n            });\n        } else {\n            return;\n        }\n\n    }\n\n    private _setOrderValues(node, existingOrders) {\n        this._findTestOrderQuestionNodes(node);\n\n        const orderNodes = this.formOrderNodes;\n        for (const orderNode of orderNodes) {\n            this._setOrderNodeValues(orderNode, existingOrders);\n        }\n    }\n\n    private _addDeletedOrdersToPayload(deletedOrders, payload): any {\n        for (const order in deletedOrders) {\n            if (deletedOrders.hasOwnProperty(order)) {\n                payload.push({ uuid: deletedOrders[order], voided: true });\n            }\n        }\n        return payload;\n    }\n\n    private _createPayloadOrder(orderConcept, quesitonExtras): any {\n        const order = {\n            concept: '',\n            type: '',\n            orderer: '',\n            careSetting: ''\n        };\n        order.concept = orderConcept;\n        order.type = quesitonExtras.questionOptions.orderType;\n        order.orderer = this.provider;\n        order.careSetting = quesitonExtras.questionOptions.orderSettingUuid;\n\n        // delete orderer if provider not provided\n        if (order.orderer === '') {\n            delete order.orderer;\n        }\n\n        return order;\n    }\n\n    private _getDeletedOrders(selectedOrders, existingOrders): any {\n        const deleteOrders = [];\n        if (selectedOrders) {\n            for (const order in existingOrders) {\n                if (existingOrders.hasOwnProperty(order)) {\n                    const existingOrderConcept = existingOrders[order].concept;\n                    const selectedOrder = selectedOrders[existingOrderConcept];\n                    if (selectedOrder !== existingOrderConcept) {\n                        deleteOrders.push(existingOrders[order].orderUuid);\n                    }\n                }\n            }\n        }\n        // console.log('Deleted Orders ', deleteOrders);\n        return deleteOrders;\n    }\n\n    private _setOrderNodeValues(node, orders) {\n        let index = 0;\n        node['initialValue'] = orders;\n        for (const order of orders) {\n            node.createChildNode();\n            const value = {};\n            value[node.question.key] = order.concept;\n            const childNode = node.children[index];\n            childNode.control.setValue(value);\n            childNode['initialValue'] = value;\n            childNode['orderNumber'] = order.orderNumber;\n            // console.log('Set Value', node.children[index].control.value, node, childNode);\n            index++;\n        }\n    }\n\n    private _findTestOrderQuestionNodes(formNode) {\n\n        if (formNode.children) {\n            if (formNode.children instanceof Object) {\n                for (const key in formNode.children) {\n                    if (formNode.children.hasOwnProperty(key)) {\n                        switch (formNode.children[key].question.renderingType) {\n                            case 'page':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'section':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n                                break;\n                            case 'group':\n                                this._findTestOrderQuestionNodes(formNode.children[key]);\n\n                                break;\n                            case 'repeating':\n                                if (formNode.children) {\n                                    // tslint:disable-next-line:forin\n                                    for (const node in formNode.children) {\n                                        const question = formNode.children[node].question;\n                                        if (question.extras && question.extras.type === 'testOrder') {\n                                            this.formOrderNodes.push(formNode.children[node]);\n                                        }\n                                    }\n\n                                }\n                                break;\n                            default:\n                                break;\n\n                        }\n                    }\n                }\n            }\n\n        }\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\n\nimport { ValueAdapter } from './value.adapter';\nimport { ObsValueAdapter } from './obs.adapter';\nimport { OrderValueAdapter } from './order.adapter';\n\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Injectable()\nexport class EncounterAdapter implements ValueAdapter {\n\n    constructor(public ordersAdapter: OrderValueAdapter, public obsAdapter: ObsValueAdapter) { }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n\n        if (Array.isArray(payload.orders)) {\n            this.ordersAdapter.populateForm(form, payload);\n        }\n        if (Array.isArray(payload.obs)) {\n            this.obsAdapter.populateForm(form, payload.obs);\n        }\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n\n        if (payload === undefined || payload === null) {\n            throw new Error('Expected payload');\n        }\n\n        const nodes = this.getEncounterNodes(rootNode);\n\n        nodes.forEach(node => {\n            switch (node.question.extras.type) {\n                case 'encounterDatetime':\n                    if (payload['encounterDatetime']) {\n                        // console.log('date', payload['encounterDatetime']);\n                        node.control.setValue(moment(payload['encounterDatetime']).toDate());\n                        node.initialValue = moment(payload['encounterDatetime']).toDate();\n                    }\n                    break;\n                case 'encounterProvider':\n                    if (Array.isArray(payload['encounterProviders']) && payload['encounterProviders'].length > 0) {\n                        const firstProvider: any = payload['encounterProviders'][0].provider;\n                        if (firstProvider && firstProvider.uuid) {\n                            node.control.setValue(firstProvider.uuid);\n                            node.initialValue = firstProvider.uuid;\n                        }\n                    }\n                    break;\n                case 'encounterLocation':\n                    if (payload['location'] && payload['location'].uuid) {\n                        node.control.setValue(payload['location'].uuid);\n                        node.initialValue = payload['location'].uuid;\n                    }\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    generateFormPayload(form: Form) {\n        const payload = this.generateNodePayload(form.rootNode);\n\n        this.setNonFilledPayloadMembers(form, payload);\n\n        payload['obs'] = this.obsAdapter.generateFormPayload(form) || [];\n\n        payload['orders'] = this.ordersAdapter.generateFormPayload(form) || [];\n\n        return payload;\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getEncounterNodes(rootNode);\n        const payload = {};\n\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '') {\n                switch (node.question.extras.type) {\n                    case 'encounterDatetime':\n                        const dateValue = moment(node.control.value)\n                            .utcOffset(rootNode.form.valueProcessingInfo.utcOffset || '+0300');\n                        payload['encounterDatetime'] = dateValue.format('YYYY-MM-DD HH:mm:ss');\n                        break;\n                    case 'encounterProvider':\n                        if (node.control.value && node.control.value !== '') {\n                            const providers = [];\n                            providers.push({\n                                provider: node.control.value,\n                                encounterRole: 'a0b03050-c99b-11e0-9572-0800200c9a66' // unknown provider role in the encounter as default\n                            });\n                            payload['encounterProviders'] = providers;\n                        }\n                        break;\n                    case 'encounterLocation':\n                        payload['location'] = node.control.value;\n                        break;\n                    default:\n                        break;\n                }\n            }\n        });\n\n        return payload;\n    }\n\n    getEncounterNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getEncounterNodes(rootNode, results);\n        return results;\n    }\n\n    setNonFilledPayloadMembers(form: Form, payload) {\n        if (form.valueProcessingInfo.patientUuid) {\n            this.setPayloadPatientUuid(payload, form.valueProcessingInfo.patientUuid);\n        }\n\n        if (form.valueProcessingInfo.visitUuid) {\n            this.setPayloadVisitUuid(payload, form.valueProcessingInfo.visitUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterTypeUuid) {\n            this.setPayloadEncounterTypeUuid(payload, form.valueProcessingInfo.encounterTypeUuid);\n        }\n\n        if (form.valueProcessingInfo.formUuid) {\n            this.setPayloadFormUuid(payload, form.valueProcessingInfo.formUuid);\n        }\n\n        if (form.valueProcessingInfo.encounterUuid) {\n            this.setPayloadEncounterUuid(payload, form.valueProcessingInfo.encounterUuid);\n        }\n    }\n\n    setPayloadPatientUuid(payload, patientUuid: string) {\n        payload['patient'] = patientUuid;\n    }\n\n    setPayloadVisitUuid(payload, visitUuid: string) {\n        payload['visit'] = visitUuid;\n    }\n\n    setPayloadEncounterTypeUuid(payload, encounterTypeUuid: string) {\n        payload['encounterType'] = encounterTypeUuid;\n    }\n\n    setPayloadFormUuid(payload, formUuid: string) {\n        payload['form'] = formUuid;\n    }\n\n    setPayloadEncounterUuid(payload, encounterUuid: string) {\n        payload['uuid'] = encounterUuid;\n    }\n\n    private _getEncounterNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (this._isEncounterNode(rootNode)) {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getEncounterNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getEncounterNodes(child, array);\n            });\n        }\n    }\n\n    private _isEncounterNode(node: NodeBase): boolean {\n        if (node.question.extras &&\n            (node.question.extras.type === 'encounterDatetime' ||\n                node.question.extras.type === 'encounterProvider' ||\n                node.question.extras.type === 'encounterLocation')) {\n            return true;\n        }\n        return false;\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { NodeBase, GroupNode, ArrayNode } from '../form-factory/form-node';\nimport { Form } from '../form-factory/form';\nimport { ValueAdapter } from './value.adapter';\n\n@Injectable()\nexport class PersonAttribuAdapter implements ValueAdapter {\n    constructor() { }\n\n    generateFormPayload(form: Form) {\n        return this.generateNodePayload(form.rootNode);\n    }\n\n    generateNodePayload(rootNode: NodeBase) {\n        const nodes = this.getPersonAttributeNodes(rootNode);\n        const payload = [];\n        nodes.forEach(node => {\n            if (node.control.value !== null &&\n                node.control.value !== undefined &&\n                node.control.value !== '' &&\n                node.initialValue !== node.control.value) {\n\n                if (node.question.extras.questionOptions.isSimpleValue === true) {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        value: node.control.value\n                    });\n                } else {\n                    payload.push({\n                        attributeType: node.question.extras.questionOptions.attributeType,\n                        hydratedObject: node.control.value\n                    });\n                }\n\n            }\n        });\n        return payload;\n    }\n\n    populateForm(form: Form, payload) {\n        this.populateNode(form.rootNode, payload);\n    }\n\n    populateNode(rootNode: NodeBase, payload) {\n        if (!Array.isArray(payload)) {\n            throw new Error('Expected an array of attributes');\n        }\n\n        const nodes = this.getPersonAttributeNodes(rootNode);\n\n        nodes.forEach(node => {\n            payload.forEach(element => {\n                if (element.attributeType.uuid\n                    === node.question.extras.questionOptions.attributeType) {\n                    if (element.value.uuid) {\n                        node.control.setValue(element.value.uuid);\n                        node.initialValue = element.value.uuid;\n                    } else {\n                        node.control.setValue(element.value);\n                        node.initialValue = element.value;\n                    }\n                }\n            });\n        });\n    }\n\n    getPersonAttributeNodes(rootNode: NodeBase): Array<NodeBase> {\n        const results: Array<NodeBase> = [];\n        this._getPersonAttributesNodes(rootNode, results);\n        return results;\n    }\n\n    private _getPersonAttributesNodes(rootNode: NodeBase, array: Array<NodeBase>) {\n        if (rootNode.question.extras &&\n            rootNode.question.extras.type === 'personAttribute') {\n            array.push(rootNode);\n        }\n\n        if (rootNode instanceof GroupNode) {\n            const node = rootNode as GroupNode;\n            // tslint:disable-next-line:forin\n            for (const o in node.children) {\n                if (node.children[o] instanceof NodeBase) {\n                    this._getPersonAttributesNodes(node.children[o], array);\n                }\n            }\n        }\n\n        if (rootNode instanceof ArrayNode) {\n            const node = rootNode as ArrayNode;\n            node.children.forEach(child => {\n                this._getPersonAttributesNodes(child, array);\n            });\n        }\n    }\n}\n","import { Component, OnInit, Input, forwardRef, ViewChild, Output, EventEmitter, Renderer2 } from '@angular/core';\nimport { SelectComponent } from '../../components/select/select.component';\nimport {\n    ControlValueAccessor,\n    NG_VALUE_ACCESSOR\n} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n@Component({\n    selector: 'remote-select',\n    templateUrl: 'remote-select.component.html',\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => RemoteSelectComponent),\n            multi: true,\n        }]\n})\nexport class RemoteSelectComponent implements OnInit, ControlValueAccessor {\n    // @Input() dataSource: DataSource;\n    @Input() placeholder = 'Search...';\n    @Input() componentID: string;\n    items = [];\n    value = [];\n    loading = false;\n    searchText = '';\n    notFoundMsg = 'match no found';\n    @Output() done: EventEmitter<any> = new EventEmitter<any>();\n\n    characters = [];\n    @ViewChild(SelectComponent) private selectC: SelectComponent;\n\n\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n        if (this._dataSource && this._dataSource.dataFromSourceChanged) {\n            this.subscribeToDataSourceDataChanges();\n        }\n    }\n\n\n    constructor(private renderer: Renderer2) { }\n\n    ngOnInit() {\n\n    }\n\n    subscribeToDataSourceDataChanges() {\n        this._dataSource.dataFromSourceChanged.subscribe((results) => {\n            if (results.length > 0) {\n                this.items = results;\n                this.notFoundMsg = '';\n                // console.log('updating items', results, this.selectC.value);\n                this.restoreSelectedValue(this.selectC.value, results);\n            } else {\n                this.notFoundMsg = 'Not found';\n                this.items = [];\n            }\n        });\n    }\n\n    public typed(value: any): void {\n        this.search(value);\n    }\n    search(value: string) {\n        if (this.dataSource) {\n            this.searchText = value;\n            this.notFoundMsg = 'Loading.........';\n            this.dataSource.searchOptions(value)\n                .subscribe((result) => {\n                    if (result.length > 0) {\n                        const existing = _.map(this.value, _.clone);\n                        const concat = existing.concat(result);\n                        this.items = _.uniqBy(concat, 'value');\n                    }\n                    this.notFoundMsg = '';\n                }, (error) => {\n                    this.notFoundMsg = 'Errored';\n                });\n        }\n    }\n\n    restoreSelectedValue(value, results) {\n        let found = false;\n        _.each(results, (item) => {\n            if (item.value === value) {\n                setTimeout(() => {\n                    this.selectC.select(value);\n                    this.selectC.value = value;\n                });\n                found = true;\n            }\n        });\n        if (!found) {\n            // console.log('not found after loading items', value, results);\n            setTimeout(() => {\n                this.selectC.select('');\n                this.selectC.value = '';\n            });\n        }\n    }\n\n    canSearch(searchText: string) {\n        return (searchText.length - this.searchText.length >= 2 ||\n            (searchText.length - this.searchText.length <= 2 && searchText !== '')) && this.loading === false;\n    }\n\n    // this is the initial value set to the component\n    public writeValue(value: any) {\n        if (value && value !== '') {\n            if (this.dataSource) {\n                this.loading = true;\n                this.dataSource.resolveSelectedValue(value).subscribe((result: any) => {\n                    this.items = [result];\n                    setTimeout(() => {\n                        this.selectC.select(result.value);\n                        this.selectC.value = result.value;\n                    });\n                    this.loading = false;\n                }, (error) => {\n                    this.loading = false;\n                });\n            }\n        }\n    }\n    // registers 'fn' that will be fired when changes are made\n    // this is how we emit the changes back to the form\n    public registerOnChange(fn: any) {\n        this.propagateChange = fn;\n    }\n\n    // not used, used for touch input\n    public registerOnTouched() { }\n    // change events from the textarea\n    onChange(event) {\n        this.propagateChange(event.id);\n        // .....\n        // update the form\n        // this.propagateChange(this.data);\n    }\n    removed(event) {\n        console.log('Removed');\n        this.propagateChange('');\n    }\n    selected(event) {\n        this.propagateChange(event.value);\n    }\n\n    // the method set in registerOnChange, it is just\n    // a placeholder for a method that takes one parameter,\n    // we use it to emit changes back to the form\n    private propagateChange = (change: any) => { };\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\n// import { SelectModule } from 'ng2-select/ng2-select';\nimport { SelectModule } from '../../components/select/select.module';\nimport { RemoteSelectComponent } from './remote-select.component';\n\n@NgModule({\n    imports: [CommonModule, SelectModule, FormsModule],\n    exports: [RemoteSelectComponent],\n    declarations: [RemoteSelectComponent],\n    providers: [],\n})\nexport class RemoteSelectModule { }\n","import { Component, OnInit, OnChanges, Input } from '@angular/core';\n\nimport { LeafNode } from '../../form-entry/form-factory/form-node';\nimport * as moment_ from 'moment';\n\nconst moment = moment_;\n\n@Component({\n  selector: 'appointments-overview',\n  templateUrl: './appointments-overview.component.html',\n  styleUrls: ['./appointments-overview.component.css']\n})\nexport class AppointmentsOverviewComponent implements OnInit, OnChanges {\n  @Input() node: LeafNode;\n  showAppointments = false;\n  loadingAppointments = false;\n  errorLoadingAppointments = false;\n  appointmentsLoaded = false;\n  appointments: Array<any> = [];\n  today = '';\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.node.control.valueChanges.subscribe((v) => {\n      this.resetProperties();\n      const node = this.node;\n      if (node.question.extras.questionOptions.concept\n        && (node.question.extras.questionOptions.concept === 'a8a666ba-1350-11df-a1f1-0026b9348838'\n        || node.question.extras.questionOptions.concept === 'a89d2398-1350-11df-a1f1-0026b9348838')) {\n        // console.log('what change is here', this.showAppointments);\n        if (!this.showAppointments) {\n          this.loadingAppointments = true;\n          this.showAppointments = true;\n          let dataSource;\n          if (node.form && node.form.dataSourcesContainer.dataSources) {\n            dataSource = node.form.dataSourcesContainer.dataSources.monthlyScheduleResourceService;\n          }\n          const locationUuid = node.form.dataSourcesContainer.dataSources.userLocation.uuid;\n          if (dataSource && locationUuid) {\n            const startDate = moment(v).startOf('week').add(1, 'day').format('YYYY-MM-DD');\n            const endDate = moment(v).endOf('week').subtract(1, 'day').format('YYYY-MM-DD');\n            this.today = moment(v).format('DD-MM-YYYY');\n            // create 5 week days\n            const _data = [];\n            const programTypes = ['781d85b0-1359-11df-a1f1-0026b9348838', '781d897a-1359-11df-a1f1-0026b9348838',\n              '96047aaf-7ab3-45e9-be6a-b61810fe617d', 'c19aec66-1a40-4588-9b03-b6be55a8dd1d', 'f7793d42-11ac-4cfd-9b35-e0a21a7a7c31',\n              '334c9e98-173f-4454-a8ce-f80b20b7fdf0', '96ba279b-b23b-4e78-aba9-dcbd46a96b7b', '781d8880-1359-11df-a1f1-0026b9348838'];\n            const programTypeParams = programTypes.join();\n            for (let i = 1; i <= 5; i++) {\n              _data.push({\n                date: moment(v).startOf('week').add(i, 'day').format('DD-MM-YYYY'),\n                count: 0\n              });\n            }\n            dataSource.getMonthlySchedule({\n              startDate: startDate,\n              endDate: endDate,\n              limit: 5,\n              locationUuids: locationUuid,\n              programType: programTypeParams\n            }).subscribe((data) => {\n              this.appointmentsLoaded = true;\n              this.loadingAppointments = false;\n              _data.map((appointment, index) => {\n                appointment.count = data[index] !== undefined ? data[index].count.scheduled : 0;\n              });\n              this.appointments = _data;\n            }, (error) => {\n              this.loadingAppointments = false;\n              this.errorLoadingAppointments = true;\n              this.showAppointments = false;\n              console.error(error);\n            });\n          } else {\n            this.showAppointments = false;\n            this.errorLoadingAppointments = true;\n          }\n        }\n      }\n    });\n  }\n\n  resetProperties() {\n    this.loadingAppointments = false;\n    this.appointmentsLoaded = false;\n    this.errorLoadingAppointments = false;\n    this.showAppointments = false;\n    this.appointments = [];\n    this.today = '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { GroupNode, LeafNode, ArrayNode, NodeBase } from '../form-entry/form-factory/form-node';\nimport * as _ from 'lodash';\nimport { DataSource } from '../form-entry/question-models/interfaces/data-source';\nimport { Observable } from 'rxjs';\nimport { SelectOption } from '../form-entry/question-models/interfaces/select-option';\nconst comma = ', ';\nconst newLine = '\\n';\n\n@Injectable()\nexport class EncounterViewerService implements DataSource {\n\n    constructor() {}\n    public resolveSelectedValue(value: any): Observable<SelectOption> {\n        return;\n    }\n    public searchOptions(searchText: any): Observable<SelectOption[]> {\n        return;\n    }\n    public fileUpload(data: any): Observable<any> {\n        return;\n    }\n    public fetchFile(url: any): Observable<any> {\n        return;\n    }\n\n    public resolveSelectedValueFromSchema( answerUuid: string, schema: any): string {\n        let label;\n        if (schema.pages) {\n            _.forEach(schema.pages, (page) => {\n              const l = this.resolveSelectedValueFromSchema(answerUuid, page);\n              if (l) { label = l; }\n            }); }\n\n        if (schema.sections) {\n            _.forEach(schema.sections, (section) => {\n                const l = this.resolveSelectedValueFromSchema(answerUuid, section);\n                if (l) { label = l; }\n            });\n        }\n\n        if (schema.questions) {\n            _.forEach(schema.questions, (question) => {\n                 if (question.questions) {\n                    const l = this.resolveSelectedValueFromSchema(answerUuid, question);\n                    if (l) { label = l; }\n                } else {\n                    if (question.questionOptions.answers) {\n                    _.forEach(question.questionOptions.answers, (answer) => {\n                        if (answer.concept === answerUuid) {\n                            label = answer.label;\n                        }\n                    });\n                } else if (question.questionOptions.selectableOrders) {\n                    _.forEach(question.questionOptions.selectableOrders, (order) => {\n                        if (order.concept === answerUuid) { label = order.label; }\n                    });\n                }\n\n                }\n            });\n        }\n        return label;\n\n\n    }\n\n    public hasAnswer(node: NodeBase) {\n        let answered = false;\n        if (node.initialValue) {\n            answered = true;\n        }\n        return answered;\n    }\n\n    public questionsAnswered(node: any, answered?: boolean[]) {\n        const $answered = answered || [];\n        if (node.question.renderingType === 'page') {\n            _.forEach(node.children, (childNode: any) => {\n                this.questionsAnswered(childNode, $answered); });\n\n        } else if (node.question.renderingType === 'section') {\n            _.forEach(node.children, (childNode) => {\n                if (childNode.question.renderingType === 'group') {\n                   _.forEach(childNode.children, (child) => {\n                       const ans = this.questionsAnswered(child, $answered);\n                       if (ans) { $answered.push(ans); }\n                   });\n                } else if (this.hasAnswer(childNode)) { $answered.push(true); }\n            });\n        } else { return this.hasAnswer(node); }\n\n        if ($answered.length > 0) {return true; } else { return false; }\n    }\n\n\n    public isDate(val: any) {\n        if (Date.parse(val)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n    public convertTime(unixTimestamp: number) {\n        const a = new Date(unixTimestamp);\n        const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May',\n                        'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n        const year = a.getFullYear();\n        const month = months[a.getMonth()];\n        const date = a.getDate();\n        const hour = a.getHours();\n        const min = a.getMinutes();\n        const sec = a.getSeconds();\n        const suffix = hour < 12 ? 'AM' : 'PM';\n        let time;\n        if (hour === 0 && min === 0) {\n            time = date + ' ' + month + ' ' + year;\n        } else {\n            time = date + ' ' + month + ' ' + year + ' ' + hour + ':' + min + suffix + ' (EAT)';\n        }\n        return time;\n\n    }\n}\n","import { Component, OnInit, Input, Inject } from '@angular/core';\nimport { NodeBase, GroupNode, LeafNode } from '../../form-entry/form-factory/form-node';\nimport { QuestionBase } from '../../form-entry/question-models/question-base';\nimport * as _ from 'lodash';\n\nimport { AfeFormGroup } from '../../abstract-controls-extension/afe-form-group';\nimport { DataSources } from '../../form-entry/data-sources/data-sources';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\n\nimport { EncounterViewerService } from '../encounter-viewer.service';\n\n@Component({\n    selector: 'encounter-viewer',\n    templateUrl: './encounter-viewer.component.html',\n    styleUrls: ['./encounter-viewer.component.css'],\n})\nexport class EncounterViewerComponent implements OnInit {\n    public rootNode: NodeBase;\n    public enc: any;\n    public fileDataSource: DataSource;\n    public remoteDataSource: DataSource;\n    public customDataSource: DataSource;\n    public _schema;\n    @Input() public parentGroup: AfeFormGroup;\n    @Input() public parentComponent: EncounterViewerComponent;\n    @Input() set node(rootNode: NodeBase) {\n        this.rootNode = rootNode;\n    }\n\n    @Input() public set schema(schema: any) {\n        this._schema = schema;\n    }\n\n    @Input() public set encounter(enc: any) {\n        this.enc = enc;\n    }\n     @Input() set form(form: any) {\n         this.rootNode = form.rootNode;\n         this._schema = form.schema;\n         console.log(this.rootNode);\n    }\n\n    constructor(private encounterViewerService: EncounterViewerService,\n        private dataSources: DataSources) {\n    }\n\n    public ngOnInit() {\n        if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'file') {\n                this.fileDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n        } else if (this.rootNode && this.rootNode.question.extras\n            && this.rootNode.question.renderingType === 'remote-select') {\n                this.remoteDataSource =\n                this.dataSources.dataSources[this.rootNode.question.dataSource];\n            } else {\n                this.customDataSource = this.encounterViewerService;\n            }\n    }\n\n    public questionsAnswered(node: any) {\n        const $answered = this.encounterViewerService.questionsAnswered(node);\n        return $answered;\n    }\n\n    public questionAnswered(node: NodeBase) {\n        const answered = this.encounterViewerService.hasAnswer(node);\n        return answered;\n    }\n\n    public checkForColon(questionLabel: string) {\n        if (questionLabel.indexOf(':') === -1) { return true; } else { return false; }\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Form } from '../form-entry/form-factory/form';\nimport { ObsValueAdapter } from '../form-entry/value-adapters/obs.adapter';\nimport { EncounterViewerService } from './encounter-viewer.service';\n\nimport * as moment_ from 'moment';\nimport * as _ from 'lodash';\nimport * as pdfMake from 'pdfmake/build/pdfmake.js';\nimport 'pdfmake/build/vfs_fonts.js';\nimport * as pdfFonts from 'pdfmake/build/vfs_fonts';\n\nconst moment = moment_;\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EncounterPdfViewerService {\n  public innerValue: any = '';\n\n  constructor(\n    private encounterViewerService: EncounterViewerService,\n    private obsValueAdapter: ObsValueAdapter\n  ) {}\n\n  getPages(pages: any, form: Form): any[] {\n    let content = [];\n    for (let page of pages) {\n      for (let question of form.rootNode.question.questions) {\n        if (\n          page.label === form.rootNode.children[question.key].question.label &&\n          this.encounterViewerService.questionsAnswered(\n            form.rootNode.children[question.key]\n          )\n        ) {\n          content.push({\n            style: 'tableExample',\n            table: {\n              widths: ['*'],\n              headerRows: 1,\n              keepWithHeaderRows: 1,\n              body: [\n                [{ text: page.label, style: 'tableHeader' }],\n                [\n                  {\n                    style: 'tableExample',\n                    table: {\n                      widths: ['*'],\n                      body: this.getSections(page.page, form)\n                    },\n                    layout: 'noBorders',\n                    margin: [10, 10, 10, 10]\n                  }\n                ]\n              ]\n            },\n            layout: 'noBorders'\n          });\n        }\n      }\n    }\n    return content;\n  }\n\n  getSections(sections: any, form: Form): any[] {\n    let content = [];\n    for (let section of sections) {\n      if (this.encounterViewerService.questionsAnswered(section.node)) {\n        content.push([\n          {\n            table: {\n              widths: ['*'],\n              body: [\n                [{ text: section.label, style: 'tableSubheader', margin: [5, 5] }],\n                [ this.getSectionData(section.section, form) ]\n              ]\n            },\n            layout: 'noBorders'\n          }\n        ]);\n      } else {\n        content.push([{ text: '' }]);\n      }\n    }\n    return content;\n  }\n\n  getSectionData(nodes: any, form: Form): any {\n    let questions = {\n      stack: []\n    };\n\n    for (let node of nodes) {\n      switch (node.question.renderingType) {\n        case 'group':\n          if (node.groupMembers) {\n            questions.stack.push(this.getSectionData(node.groupMembers, form));\n            break;\n          }\n\n        case 'field-set':\n          if (node.children) {\n            const groupMembers = [];\n            var result = Object.keys(node.children).map((key) => node.children[key]);\n\n            if (result) {\n              groupMembers.push(result);\n              questions.stack.push(this.getSectionData(groupMembers[0], form));\n            }\n            break;\n          }\n\n        case 'repeating':\n          if (node.groupMembers) {\n            questions.stack.push(this.getSectionData(node.groupMembers, form));\n            break;\n          }\n\n        default:\n          let answer = node.control.value;\n          this.resolveValue(answer, form);\n\n          if (this.innerValue) {\n            questions.stack.push({\n              text: [\n                `${node.question.label}${\n                  node.question.label.indexOf(':') > 1 ? '' : ':'\n                } `,\n                { text: `${this.innerValue}`, bold: true }\n              ], margin: [5, 2]\n            });\n          }\n      }\n    }\n    return questions;\n  }\n\n  resolveValue(value: any, form: Form, arrayElement?: boolean): any {\n    if (value !== this.innerValue) {\n      if (this.isUuid(value)) {\n        const val = this.encounterViewerService.resolveSelectedValueFromSchema(value, form.schema);\n        if (!arrayElement) {\n          if (val) {\n            this.innerValue = val.toUpperCase();\n          } else {\n            this.innerValue = value;\n          }\n        } else {\n          return val;\n        }\n      } else if (_.isArray(value)) {\n        const arr = [];\n        _.forEach(value, elem => {\n          arr.push(this.resolveValue(elem, form, true));\n        });\n        this.innerValue = arr;\n      } else if (this.isDate(value)) {\n        if (!arrayElement) {\n          this.innerValue = this.encounterViewerService.convertTime(value);\n        } else {\n          return this.encounterViewerService.convertTime(value);\n        }\n      } else if (typeof value === 'object') {\n        const values = [];\n        let result = Object.keys(value).map((key) => [key, value[key]]);\n\n        values.push(result);\n        this.innerValue = values;\n      } else {\n        if (!arrayElement) {\n          this.innerValue = value;\n        } else {\n          return value;\n        }\n      }\n    }\n  }\n\n  generatePdfDefinition(form: Form): any {\n    const docDefinition = {\n      content: this.getPages(\n        this.obsValueAdapter.traverse(form.rootNode),\n        form\n      ),\n      styles: {\n        confidential: {\n          color: 'red',\n          bold: true,\n          alignment: 'center'\n        },\n        header: {\n          fontSize: 14,\n          bold: true,\n          margin: [5, 5, 5, 5]\n        },\n        tableExample: {\n          fontSize: 12,\n          margin: [5, 0, 0, 5]\n        },\n        tableHeader: {\n          fillColor: '#f5f5f5',\n          width: ['100%'],\n          borderColor: '#333',\n          fontSize: 14,\n          bold: true,\n          margin: [5, 5, 5, 5]\n        },\n        tableSubheader: {\n          fillColor: '#337ab7',\n          fontSize: 14,\n          color: 'white',\n          margin: [5, 0, 5, 0]\n        }\n      },\n      defaultStyle: {\n        fontSize: 12\n      }\n    };\n\n    return docDefinition;\n  }\n\n  displayPdf(form) {\n    let pdf = pdfMake;\n    pdf.vfs = pdfFonts.pdfMake.vfs;\n    let docDefinition = this.generatePdfDefinition(form);\n\n    docDefinition.footer = {\n      columns: [\n        {\n          stack: [\n            {\n              text:\n                'Note: Confidentiality is one of the core duties of all medical practitioners.',\n              style: 'confidential'\n            },\n            {\n              text:\n                ` Patients' personal health information should be kept private.`,\n              style: 'confidential'\n            }\n          ]\n        }\n      ]\n    };\n\n    var win = window.open('', '_blank');\n    pdf.createPdf(docDefinition).open({}, win);\n  }\n\n  isDate(val: any) {\n    return moment(val, moment.ISO_8601, true).isValid();\n  }\n\n  isUuid(value: string) {\n    // Consider matching against a uuid regexp\n    return (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1);\n  }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Form } from '../../form-entry/form-factory/form';\nimport { NodeBase } from '../../form-entry/form-factory/form-node';\nimport { EncounterAdapter } from '../../form-entry/value-adapters/encounter.adapter';\n\nimport { EncounterPdfViewerService } from '../encounter-pdf-viewer.service';\n\n@Component({\n    selector: 'encounter-renderer',\n    templateUrl: './encounter-container.component.html',\n    styleUrls: ['./encounter-container.component.css']\n})\nexport class EncounterContainerComponent implements OnInit {\n    public $form: Form;\n    public $enc: any;\n\n    @Input() public set form(form) {\n        this.$form = form;\n    }\n    @Input() public set encounter(enc) {\n        this.$enc = enc;\n    }\n\n    constructor(\n        private encAdapter: EncounterAdapter,\n        private encounterPdfViewerService: EncounterPdfViewerService) { }\n\n    ngOnInit() {\n    }\n\n    displayPdf() {\n        this.encounterPdfViewerService.displayPdf(this.$form);\n    }\n}\n","import {Component, OnInit, Input} from '@angular/core';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport * as _ from 'lodash';\n\n@Component({\n    selector: 'question-control',\n    styleUrls: ['./question-control.component.css'],\n    templateUrl: './question-control.component.html',\n  })\nexport class QuestionControlComponent implements OnInit {\n    @Input() public set schema(schema: any) {\n      this._schema = schema;\n    }\n    @Input() public set value(value) {\n      this._value = value;\n    }\n    @Input() public set dataSource(dataSource: any) {\n      this._dataSource = dataSource;\n    }\n    // The internal data model\n    public innerValue: any = '';\n    private _value: any;\n    private _schema: any;\n    private _dataSource: EncounterViewerService;\n    constructor() {}\n\n    ngOnInit() {\n      this.writeValue(this._value);\n    }\n    public isUuid(value: string) {\n      if (value.length === 36 && value.indexOf(' ') === -1 && value.indexOf('.') === -1) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any, arrayElement?: boolean) {\n      if (v !== this.innerValue) {\n          if (this.isUuid(v)) {\n            if (!arrayElement) {\n              const val =\n              this._dataSource.resolveSelectedValueFromSchema(v, this._schema);\n              if (val) { this.innerValue = val.toUpperCase(); } else { this.innerValue = v; }\n            } else { return this._dataSource.resolveSelectedValueFromSchema(v, this._schema); }\n          } else if (_.isArray(v)) {\n            const arr = [];\n            _.forEach(v, (el) => {\n              arr.push(this.writeValue(el, true));\n            });\n            this.innerValue = arr;\n          } else if (this.isDate(v)) {\n              if (!arrayElement) { this.innerValue = this._dataSource.convertTime(v); } else {\n                  return  this._dataSource.convertTime(v);\n              }\n          } else {\n              if (!arrayElement) { this.innerValue = v; } else {\n                return v;\n              }\n          }\n\n      }\n    }\n\n    public isDate(str: string) {\n      return this._dataSource.isDate(str) && !_.isNumber(str);\n    }\n\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { EncounterViewerService } from '../encounter-viewer.service';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'file-preview',\n    styles: [``],\n    template: `<div *ngIf=\"innerValue\">\n              <img class=\"img-responsive\"\n                [src]=\"innerValue | secure:this._dataSource.fetchFile\" alt=\"image\" />\n                </div>`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => FilePreviewComponent),\n        multi: true\n      }\n    ]\n  })\nexport class FilePreviewComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    public _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor(private encounterService: EncounterViewerService) {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n          this.innerValue = v;\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n      // const files = event.srcElement.files;\n      // const fileToLoad = files[0];\n\n      // const fileReader = new FileReader();\n\n      // fileReader.onload = (fileLoadedEvent) => {\n      //   const data = fileReader.result;\n      //   const fileType = data.substring('data:image/'.length, data.indexOf(';base64'));\n      //   const payload = {\n      //     data,\n      //     extension: fileType\n      //   };\n      // };\n\n      // fileReader.readAsDataURL(fileToLoad);\n    }\n  }\n","import {\n    Component, OnInit, Input, forwardRef,\n    OnChanges, Output, EventEmitter\n  } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nconst noop = () => {};\n\n@Component({\n    selector: 'remote-answer',\n    styles: [],\n    template: `\n    <div *ngIf=\"innerValue\">\n      {{innerValue}}\n      </div>\n`,\n    providers: [\n      {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => RemoteAnswerComponent),\n        multi: true\n      }\n    ]\n  })\nexport class RemoteAnswerComponent implements ControlValueAccessor {\n    @Input() public source: any;\n    public innerValue = null;\n    private _dataSource: DataSource;\n    @Input()\n    public get dataSource(): DataSource {\n        return this._dataSource;\n    }\n    public set dataSource(v: DataSource) {\n        this._dataSource = v;\n    }\n    // Placeholders for the callbacks which are later providesd\n    // by the Control Value Accessor\n    private onTouchedCallback: () => void = noop;\n    private onChangeCallback: (_: any) => void = noop;\n    constructor() {}\n    // get accessor\n    get value(): any {\n      return this.innerValue;\n    }\n\n    // set accessor including call the onchange callback\n    set value(v: any) {\n      if (v !== this.innerValue) {\n        this.innerValue = v;\n      }\n    }\n    // Current time string.\n\n    public writeValue(v: any) {\n      if (v !== this.innerValue) {\n        if (this._dataSource) {\n          this._dataSource.resolveSelectedValue(v).subscribe((ans) => {\n            this.innerValue = ans.label;\n        });\n        } else {\n          this.innerValue = v;\n        }\n      }\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnChange(fn: any) {\n      this.onChangeCallback = fn;\n    }\n\n    // From ControlValueAccessor interface\n    public registerOnTouched(fn: any) {\n      this.onTouchedCallback = fn;\n    }\n\n    public onBlur() {\n      this.onTouchedCallback();\n    }\n\n    public onChange(event: any) {\n    }\n  }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EncounterViewerComponent } from './encounter-view/encounter-viewer.component';\nimport { EncounterContainerComponent } from './encounter-container/encounter-container.component';\nimport { EncounterViewerService } from './encounter-viewer.service';\nimport { EncounterPdfViewerService } from './encounter-pdf-viewer.service';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { QuestionControlComponent } from './display-controls/question-control.component';\nimport { FilePreviewComponent } from './display-controls/file-preview.component';\nimport { RemoteAnswerComponent } from './display-controls/remote-answer.component';\nimport { HttpModule } from '@angular/http';\nimport { SharedModule } from '../shared.module';\n@NgModule({\n    declarations: [\n        EncounterViewerComponent,\n        EncounterContainerComponent,\n        QuestionControlComponent,\n        FilePreviewComponent,\n        RemoteAnswerComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n        CommonModule,\n        HttpModule,\n        SharedModule\n    ],\n    providers: [\n        EncounterViewerService,\n        EncounterPdfViewerService\n    ],\n    exports: [\n        EncounterContainerComponent,\n        HttpModule\n    ],\n})\nexport class EncounterViewerModule {}\n","import { Component, Input, forwardRef, OnInit, AfterViewInit } from '@angular/core';\n\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport { DataSource } from '../../form-entry/question-models/interfaces/data-source';\nimport * as _ from 'lodash';\n\n@Component({\n  selector: 'checkbox',\n  templateUrl: './checkbox.component.html',\n  providers: [\n    {\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => CheckboxControlComponent),\n        multi: true,\n    }],\n  styles: [`\n  .no-border {\n    border: 0;\n    box-shadow: none;\n  }`]\n})\nexport class CheckboxControlComponent implements OnInit, AfterViewInit {\n\n  @Input() public options;\n\n  public _value: Array<any> = [];\n\n  public ngOnInit() {}\n\n  public ngAfterViewInit() {}\n\n  public writeValue(value: any) {\n    this.value = value;\n  }\n\n  public registerOnChange(fn: (_: any) => void) {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => void) {\n    this.onTouched = fn;\n  }\n\n  get value(): any {\n    if (this._value.length === 0) {\n        return '';\n    } else {\n        return this._value || this._value[0];\n    }\n  }\n\n  set value(v: any) {\n    if (typeof v === 'undefined' || v === null || v === '') {\n        v = [];\n    } else if (typeof v === 'string') {\n        v = [v];\n    } else if (!Array.isArray(v)) {\n        throw new TypeError('Value must be a string or an array.');\n    }\n  }\n\n  public selectOpt(option, event) {\n    if (event.target.checked) {\n      this._value.push(option.value);\n    } else {\n      this.options.forEach((o) => {\n        if (o.value === option.value) {\n          this._value.splice(o, 1);\n        }\n      });\n    }\n\n    this.onChange(this.value);\n  }\n\n  private onChange = ( change: any) => { };\n  private onTouched = () => { };\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { CheckboxControlComponent } from './checkbox.component';\n\n@NgModule({\n    declarations: [\n        CheckboxControlComponent\n    ],\n    exports: [\n        CheckboxControlComponent\n    ],\n    imports: [CommonModule, FormsModule]\n})\nexport class CheckboxModule { }\n","import { NgModule } from '@angular/core';\nimport { MatTabsModule , MatIconModule , MatCardModule} from '@angular/material';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormBuilder } from '@angular/forms';\nimport { DebugModeService } from '../form-entry/services/debug-mode.service';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { FormErrorsService } from './services/form-errors.service';\nimport { FormControlService } from './form-factory/form-control.service';\nimport { ValidationFactory } from './form-factory/validation.factory';\nimport { FormRendererComponent } from './form-renderer/form-renderer.component';\nimport { ErrorRendererComponent } from './error-renderer/error-renderer.component';\nimport { HistoricalValueDirective } from './directives/historical-value-directive';\nimport { HistoricalFieldHelperService } from './helpers/historical-field-helper-service';\nimport { SelectModule } from '../components/select/select.module';\nimport { RemoteFileUploadModule } from '../components/file-upload/file-upload.module';\nimport { DateTimePickerModule } from '../components/date-time-picker/date-time-picker.module';\nimport { NgxDateTimePickerModule } from '../components/ngx-date-time-picker/ngx-date-time-picker.module';\nimport { AfeNgSelectComponent } from '../components/afe-ng-select.component';\nimport { HidersDisablersFactory } from './form-factory/hiders-disablers.factory';\nimport { AlertsFactory } from './form-factory/show-messages.factory';\nimport { ExpressionRunner } from './expression-runner/expression-runner';\nimport { JsExpressionHelper } from './helpers/js-expression-helper';\nimport { FormSchemaCompiler } from './services/form-schema-compiler.service';\nimport { FormFactory } from './form-factory/form.factory';\nimport { QuestionFactory } from './form-factory/question.factory';\nimport { ControlRelationsFactory } from './form-factory/control-relations.factory';\nimport { EncounterAdapter } from './value-adapters/encounter.adapter';\nimport { PersonAttribuAdapter } from './value-adapters/person-attribute.adapter';\nimport { OrderValueAdapter } from './value-adapters/order.adapter';\nimport { ObsAdapterHelper } from './value-adapters/obs-adapter-helper';\nimport { ObsValueAdapter } from './value-adapters/obs.adapter';\nimport { RemoteSelectModule } from '../components/remote-select/remote-select.module';\nimport { AppointmentsOverviewComponent} from '../components/appointments-overview/appointments-overview.component';\nimport { EncounterViewerModule } from '../encounter-viewer/encounter-viewer.module';\nimport { CheckboxModule } from '../components/check-box/checkbox.module';\nimport { SharedModule } from '../shared.module';\n\n\n@NgModule({\n    imports: [CommonModule,\n        ReactiveFormsModule,\n        CollapseModule,\n        SelectModule,\n        DateTimePickerModule,\n        RemoteSelectModule,\n        RemoteFileUploadModule,\n        EncounterViewerModule,\n        CheckboxModule,\n        MatIconModule,\n        MatTabsModule,\n        MatCardModule,\n        NgxDateTimePickerModule,\n        SharedModule\n    ],\n    declarations: [\n        FormRendererComponent,\n        AfeNgSelectComponent,\n        AppointmentsOverviewComponent,\n        HistoricalValueDirective,\n        ErrorRendererComponent\n    ],\n    providers: [\n        FormBuilder,\n        FormControlService,\n        FormErrorsService,\n        ValidationFactory,\n        HidersDisablersFactory,\n        AlertsFactory,\n        ExpressionRunner,\n        JsExpressionHelper,\n        HistoricalFieldHelperService,\n        FormSchemaCompiler,\n        FormFactory,\n        QuestionFactory,\n        ValidationFactory,\n        ControlRelationsFactory,\n        ObsAdapterHelper,\n        ObsValueAdapter,\n        EncounterAdapter,\n        PersonAttribuAdapter,\n        OrderValueAdapter,\n        DebugModeService\n    ],\n    exports: [FormRendererComponent, AfeNgSelectComponent,\n        ErrorRendererComponent, DateTimePickerModule, EncounterViewerModule , NgxDateTimePickerModule]\n})\nexport class FormEntryModule {\n\n}\n","\nexport class Pair {\n\n  key: string;\n\n  value: any;\n\n  constructor(key: string, value: any) {\n    this.key = key;\n    this.value = value;\n  }\n}\n","export enum RenderingType {\n    Form,\n    Page,\n    Section,\n    Select,\n    DropDown\n}\n"]}